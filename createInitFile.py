#!/usr/bin/env python
"""Writes the current version, build platform etc to 
"""
import os, copy, platform
try:
    import git
    haveGit=True
except:
    haveGit=False

#read the current version from the file
f = open('version')
version = f.read()
f.close()

template="""# Part of the PsychoPy library
# Copyright (C) 2010 Jonathan Peirce
# Distributed under the terms of the GNU General Public License (GPL).

#version info for PsychoPy
#This file is automatically generated during build (do not edit directly).
__version__='$version$'
__license__='GNU GPLv3 (or more recent equivalent)'
__author__='Jonathan Peirce'
__author_email__='jon@peirce.org.uk'
__maintainer_email__='psychopy-dev@googlegroups.com'
__url__='http://www.psychopy.org'
__downloadUrl__='http://code.google.com/p/psychopy/'
"""
template = template.replace('$version$', version)

allList = '\n__all__ = ["gui", "misc", "visual", "core", "event", "data", "filters"]'

def _getGitShaString(generic=False):
    """If generic==True then returns empty __git_sha__ string
    """
    #add git sha info (unique identifier to tihs commit)
    if haveGit and not generic:
        repo=git.Repo(".")
        head=repo.heads[0]
        sha = head.commit.hexsha
    else:
        sha=''
    return "__git_sha__='%s'\n" %sha
    
def _getPlatformString(generic=False):
    """If generic==True then returns empty __build_platform__ string
    """
    if generic:
        systemInfo=""
    else:
        #get platform-specific info
        if os.sys.platform=='darwin':
            OSXver, junk, architecture = platform.mac_ver()
            systemInfo = "OSX_%s_%s" %(OSXver, architecture)
        elif os.sys.platform=='linux':
            systemInfo = '%s_%s_%s' % (
                'Linux',
                ':'.join([x for x in platform.dist() if x != '']),
                platform.release())
        elif os.sys.platform=='win32':
            ver=sys.getwindowsversion()
            if len(ver[4])>0:
                systemInfo="win32_v%i.%i.%i (%s)" %(ver[0],ver[1],ver[2],ver[4])
            else:
                systemInfo="win32_v%i.%i.%i" %(ver[0],ver[1],ver[2])
        else:
            systemInfo = platform.system()+platform.release()
    return "__build_platform__='%s'\n" %systemInfo
    
def createInitFile(generic=False):
    """Write the version file to psychopy/version.py
    
    If generic==True then 
    """
    f = open(os.path.join('psychopy','__init__.py'), 'w')
    outStr = copy.copy(template)
    outStr += _getGitShaString(generic)
    outStr += _getPlatformString(generic)
    outStr += allList
    f.write(outStr)
    return outStr
    