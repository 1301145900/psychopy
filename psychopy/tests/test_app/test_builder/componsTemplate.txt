ApertureComponent.order:['name', 'size', 'pos']
ApertureComponent.name.default:aperture
ApertureComponent.name.val:aperture
ApertureComponent.name.allowedTypes:[]
ApertureComponent.name.allowedUpdates:None
ApertureComponent.name.readOnly:False
ApertureComponent.name.label:Name
ApertureComponent.name.categ:Basic
ApertureComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
ApertureComponent.name.allowedVals:[]
ApertureComponent.name.valType:code
ApertureComponent.name.staticUpdater:None
ApertureComponent.startType.default:'time (s)'
ApertureComponent.startType.val:time (s)
ApertureComponent.startType.allowedTypes:[]
ApertureComponent.startType.allowedUpdates:None
ApertureComponent.startType.readOnly:False
ApertureComponent.startType.label:start type
ApertureComponent.startType.categ:Basic
ApertureComponent.startType.hint:How do you want to define your start point?
ApertureComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ApertureComponent.startType.valType:str
ApertureComponent.startType.updates:None
ApertureComponent.startType.staticUpdater:None
ApertureComponent.stopType.default:'duration (s)'
ApertureComponent.stopType.val:duration (s)
ApertureComponent.stopType.allowedTypes:[]
ApertureComponent.stopType.allowedUpdates:None
ApertureComponent.stopType.readOnly:False
ApertureComponent.stopType.label:stop type
ApertureComponent.stopType.categ:Basic
ApertureComponent.stopType.hint:How do you want to define your end point?
ApertureComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ApertureComponent.stopType.valType:str
ApertureComponent.stopType.updates:None
ApertureComponent.stopType.staticUpdater:None
ApertureComponent.startVal.default:0.0
ApertureComponent.startVal.val:0.0
ApertureComponent.startVal.allowedTypes:[]
ApertureComponent.startVal.allowedUpdates:None
ApertureComponent.startVal.readOnly:False
ApertureComponent.startVal.label:Start
ApertureComponent.startVal.categ:Basic
ApertureComponent.startVal.hint:When does the component start?
ApertureComponent.startVal.allowedVals:[]
ApertureComponent.startVal.valType:code
ApertureComponent.startVal.updates:None
ApertureComponent.startVal.staticUpdater:None
ApertureComponent.stopVal.default:1.0
ApertureComponent.stopVal.val:1.0
ApertureComponent.stopVal.allowedTypes:[]
ApertureComponent.stopVal.allowedUpdates:[]
ApertureComponent.stopVal.readOnly:False
ApertureComponent.stopVal.label:Stop
ApertureComponent.stopVal.categ:Basic
ApertureComponent.stopVal.hint:When does the component end? (blank is endless)
ApertureComponent.stopVal.allowedVals:[]
ApertureComponent.stopVal.valType:code
ApertureComponent.stopVal.updates:constant
ApertureComponent.stopVal.staticUpdater:None
ApertureComponent.startEstim.default:
ApertureComponent.startEstim.val:
ApertureComponent.startEstim.allowedTypes:[]
ApertureComponent.startEstim.allowedUpdates:None
ApertureComponent.startEstim.readOnly:False
ApertureComponent.startEstim.label:Expected start (s)
ApertureComponent.startEstim.categ:Basic
ApertureComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ApertureComponent.startEstim.allowedVals:[]
ApertureComponent.startEstim.valType:code
ApertureComponent.startEstim.updates:None
ApertureComponent.startEstim.staticUpdater:None
ApertureComponent.durationEstim.default:
ApertureComponent.durationEstim.val:
ApertureComponent.durationEstim.allowedTypes:[]
ApertureComponent.durationEstim.allowedUpdates:None
ApertureComponent.durationEstim.readOnly:False
ApertureComponent.durationEstim.label:Expected duration (s)
ApertureComponent.durationEstim.categ:Basic
ApertureComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ApertureComponent.durationEstim.allowedVals:[]
ApertureComponent.durationEstim.valType:code
ApertureComponent.durationEstim.updates:None
ApertureComponent.durationEstim.staticUpdater:None
ApertureComponent.units.default:'norm'
ApertureComponent.units.val:norm
ApertureComponent.units.allowedTypes:[]
ApertureComponent.units.allowedUpdates:None
ApertureComponent.units.readOnly:False
ApertureComponent.units.label:Units
ApertureComponent.units.categ:Basic
ApertureComponent.units.hint:Units of dimensions for this stimulus
ApertureComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
ApertureComponent.units.valType:str
ApertureComponent.units.updates:None
ApertureComponent.units.staticUpdater:None
ApertureComponent.pos.default:(0, 0)
ApertureComponent.pos.val:(0, 0)
ApertureComponent.pos.allowedTypes:[]
ApertureComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ApertureComponent.pos.readOnly:False
ApertureComponent.pos.label:Position [x,y]
ApertureComponent.pos.categ:Basic
ApertureComponent.pos.hint:Where is the aperture centred?
ApertureComponent.pos.allowedVals:[]
ApertureComponent.pos.valType:code
ApertureComponent.pos.updates:constant
ApertureComponent.pos.staticUpdater:None
ApertureComponent.size.default:1
ApertureComponent.size.val:1
ApertureComponent.size.allowedTypes:[]
ApertureComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ApertureComponent.size.readOnly:False
ApertureComponent.size.label:Size
ApertureComponent.size.categ:Basic
ApertureComponent.size.hint:How big is the aperture? (a single number for diameter)
ApertureComponent.size.allowedVals:[]
ApertureComponent.size.valType:code
ApertureComponent.size.updates:constant
ApertureComponent.size.staticUpdater:None
CodeComponent.order:['name', 'Code Type', 'Begin Experiment', 'Begin Routine', 'Each Frame', 'End Routine', 'End Experiment', 'Begin JS Experiment', 'Begin JS Routine', 'Each JS Frame', 'End JS Routine', 'End JS Experiment']
CodeComponent.name.default:code
CodeComponent.name.val:code
CodeComponent.name.allowedTypes:[]
CodeComponent.name.allowedUpdates:None
CodeComponent.name.readOnly:False
CodeComponent.name.label:Name
CodeComponent.name.categ:Basic
CodeComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
CodeComponent.name.allowedVals:[]
CodeComponent.name.valType:code
CodeComponent.name.staticUpdater:None
CodeComponent.Code Type.default:'Py'
CodeComponent.Code Type.val:Py
CodeComponent.Code Type.allowedTypes:[]
CodeComponent.Code Type.allowedUpdates:None
CodeComponent.Code Type.readOnly:False
CodeComponent.Code Type.label:Code Type
CodeComponent.Code Type.categ:Basic
CodeComponent.Code Type.hint:Display Python or JS Code
CodeComponent.Code Type.allowedVals:['Py', 'JS', 'Both']
CodeComponent.Code Type.valType:str
CodeComponent.Code Type.updates:None
CodeComponent.Code Type.staticUpdater:None
CodeComponent.Begin Experiment.default:
CodeComponent.Begin Experiment.val:
CodeComponent.Begin Experiment.allowedTypes:[]
CodeComponent.Begin Experiment.allowedUpdates:[]
CodeComponent.Begin Experiment.readOnly:False
CodeComponent.Begin Experiment.label:Begin Experiment
CodeComponent.Begin Experiment.categ:Basic
CodeComponent.Begin Experiment.hint:Code at the start of the experiment (initialization); right-click checks syntax
CodeComponent.Begin Experiment.allowedVals:[]
CodeComponent.Begin Experiment.valType:extendedCode
CodeComponent.Begin Experiment.updates:constant
CodeComponent.Begin Experiment.staticUpdater:None
CodeComponent.Begin Routine.default:
CodeComponent.Begin Routine.val:
CodeComponent.Begin Routine.allowedTypes:[]
CodeComponent.Begin Routine.allowedUpdates:[]
CodeComponent.Begin Routine.readOnly:False
CodeComponent.Begin Routine.label:Begin Routine
CodeComponent.Begin Routine.categ:Basic
CodeComponent.Begin Routine.hint:Code to be run at the start of each repeat of the Routine (e.g. each trial); right-click checks syntax
CodeComponent.Begin Routine.allowedVals:[]
CodeComponent.Begin Routine.valType:extendedCode
CodeComponent.Begin Routine.updates:constant
CodeComponent.Begin Routine.staticUpdater:None
CodeComponent.Each Frame.default:
CodeComponent.Each Frame.val:
CodeComponent.Each Frame.allowedTypes:[]
CodeComponent.Each Frame.allowedUpdates:[]
CodeComponent.Each Frame.readOnly:False
CodeComponent.Each Frame.label:Each Frame
CodeComponent.Each Frame.categ:Basic
CodeComponent.Each Frame.hint:Code to be run on every video frame during for the duration of this Routine; right-click checks syntax
CodeComponent.Each Frame.allowedVals:[]
CodeComponent.Each Frame.valType:extendedCode
CodeComponent.Each Frame.updates:constant
CodeComponent.Each Frame.staticUpdater:None
CodeComponent.End Routine.default:
CodeComponent.End Routine.val:
CodeComponent.End Routine.allowedTypes:[]
CodeComponent.End Routine.allowedUpdates:[]
CodeComponent.End Routine.readOnly:False
CodeComponent.End Routine.label:End Routine
CodeComponent.End Routine.categ:Basic
CodeComponent.End Routine.hint:Code at the end of this repeat of the Routine (e.g. getting/storing responses); right-click checks syntax
CodeComponent.End Routine.allowedVals:[]
CodeComponent.End Routine.valType:extendedCode
CodeComponent.End Routine.updates:constant
CodeComponent.End Routine.staticUpdater:None
CodeComponent.End Experiment.default:
CodeComponent.End Experiment.val:
CodeComponent.End Experiment.allowedTypes:[]
CodeComponent.End Experiment.allowedUpdates:[]
CodeComponent.End Experiment.readOnly:False
CodeComponent.End Experiment.label:End Experiment
CodeComponent.End Experiment.categ:Basic
CodeComponent.End Experiment.hint:Code at the end of the entire experiment (e.g. saving files, resetting computer); right-click checks syntax
CodeComponent.End Experiment.allowedVals:[]
CodeComponent.End Experiment.valType:extendedCode
CodeComponent.End Experiment.updates:constant
CodeComponent.End Experiment.staticUpdater:None
CodeComponent.Begin JS Experiment.default:
CodeComponent.Begin JS Experiment.val:
CodeComponent.Begin JS Experiment.allowedTypes:[]
CodeComponent.Begin JS Experiment.allowedUpdates:[]
CodeComponent.Begin JS Experiment.readOnly:False
CodeComponent.Begin JS Experiment.label:Begin JS Experiment
CodeComponent.Begin JS Experiment.categ:Basic
CodeComponent.Begin JS Experiment.hint:Code at the start of the experiment (initialization); right-click checks syntax
CodeComponent.Begin JS Experiment.allowedVals:[]
CodeComponent.Begin JS Experiment.valType:extendedCode
CodeComponent.Begin JS Experiment.updates:constant
CodeComponent.Begin JS Experiment.staticUpdater:None
CodeComponent.Begin JS Routine.default:
CodeComponent.Begin JS Routine.val:
CodeComponent.Begin JS Routine.allowedTypes:[]
CodeComponent.Begin JS Routine.allowedUpdates:[]
CodeComponent.Begin JS Routine.readOnly:False
CodeComponent.Begin JS Routine.label:Begin JS Routine
CodeComponent.Begin JS Routine.categ:Basic
CodeComponent.Begin JS Routine.hint:Code to be run at the start of each repeat of the Routine (e.g. each trial); right-click checks syntax
CodeComponent.Begin JS Routine.allowedVals:[]
CodeComponent.Begin JS Routine.valType:extendedCode
CodeComponent.Begin JS Routine.updates:constant
CodeComponent.Begin JS Routine.staticUpdater:None
CodeComponent.Each JS Frame.default:
CodeComponent.Each JS Frame.val:
CodeComponent.Each JS Frame.allowedTypes:[]
CodeComponent.Each JS Frame.allowedUpdates:[]
CodeComponent.Each JS Frame.readOnly:False
CodeComponent.Each JS Frame.label:Each JS Frame
CodeComponent.Each JS Frame.categ:Basic
CodeComponent.Each JS Frame.hint:Code to be run on every video frame during for the duration of this Routine; right-click checks syntax
CodeComponent.Each JS Frame.allowedVals:[]
CodeComponent.Each JS Frame.valType:extendedCode
CodeComponent.Each JS Frame.updates:constant
CodeComponent.Each JS Frame.staticUpdater:None
CodeComponent.End JS Routine.default:
CodeComponent.End JS Routine.val:
CodeComponent.End JS Routine.allowedTypes:[]
CodeComponent.End JS Routine.allowedUpdates:[]
CodeComponent.End JS Routine.readOnly:False
CodeComponent.End JS Routine.label:End JS Routine
CodeComponent.End JS Routine.categ:Basic
CodeComponent.End JS Routine.hint:Code at the end of this repeat of the Routine (e.g. getting/storing responses); right-click checks syntax
CodeComponent.End JS Routine.allowedVals:[]
CodeComponent.End JS Routine.valType:extendedCode
CodeComponent.End JS Routine.updates:constant
CodeComponent.End JS Routine.staticUpdater:None
CodeComponent.End JS Experiment.default:
CodeComponent.End JS Experiment.val:
CodeComponent.End JS Experiment.allowedTypes:[]
CodeComponent.End JS Experiment.allowedUpdates:[]
CodeComponent.End JS Experiment.readOnly:False
CodeComponent.End JS Experiment.label:End JS Experiment
CodeComponent.End JS Experiment.categ:Basic
CodeComponent.End JS Experiment.hint:Code at the end of the entire experiment (e.g. saving files, resetting computer); right-click checks syntax
CodeComponent.End JS Experiment.allowedVals:[]
CodeComponent.End JS Experiment.valType:extendedCode
CodeComponent.End JS Experiment.updates:constant
CodeComponent.End JS Experiment.staticUpdater:None
DotsComponent.order:['name']
DotsComponent.name.default:dots
DotsComponent.name.val:dots
DotsComponent.name.allowedTypes:[]
DotsComponent.name.allowedUpdates:None
DotsComponent.name.readOnly:False
DotsComponent.name.label:Name
DotsComponent.name.categ:Basic
DotsComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
DotsComponent.name.allowedVals:[]
DotsComponent.name.valType:code
DotsComponent.name.staticUpdater:None
DotsComponent.startType.default:'time (s)'
DotsComponent.startType.val:time (s)
DotsComponent.startType.allowedTypes:[]
DotsComponent.startType.allowedUpdates:None
DotsComponent.startType.readOnly:False
DotsComponent.startType.label:start type
DotsComponent.startType.categ:Basic
DotsComponent.startType.hint:How do you want to define your start point?
DotsComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
DotsComponent.startType.valType:str
DotsComponent.startType.updates:None
DotsComponent.startType.staticUpdater:None
DotsComponent.stopType.default:'duration (s)'
DotsComponent.stopType.val:duration (s)
DotsComponent.stopType.allowedTypes:[]
DotsComponent.stopType.allowedUpdates:None
DotsComponent.stopType.readOnly:False
DotsComponent.stopType.label:stop type
DotsComponent.stopType.categ:Basic
DotsComponent.stopType.hint:How do you want to define your end point?
DotsComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
DotsComponent.stopType.valType:str
DotsComponent.stopType.updates:None
DotsComponent.stopType.staticUpdater:None
DotsComponent.startVal.default:0.0
DotsComponent.startVal.val:0.0
DotsComponent.startVal.allowedTypes:[]
DotsComponent.startVal.allowedUpdates:None
DotsComponent.startVal.readOnly:False
DotsComponent.startVal.label:Start
DotsComponent.startVal.categ:Basic
DotsComponent.startVal.hint:When does the component start?
DotsComponent.startVal.allowedVals:[]
DotsComponent.startVal.valType:code
DotsComponent.startVal.updates:None
DotsComponent.startVal.staticUpdater:None
DotsComponent.stopVal.default:1.0
DotsComponent.stopVal.val:1.0
DotsComponent.stopVal.allowedTypes:[]
DotsComponent.stopVal.allowedUpdates:[]
DotsComponent.stopVal.readOnly:False
DotsComponent.stopVal.label:Stop
DotsComponent.stopVal.categ:Basic
DotsComponent.stopVal.hint:When does the component end? (blank is endless)
DotsComponent.stopVal.allowedVals:[]
DotsComponent.stopVal.valType:code
DotsComponent.stopVal.updates:constant
DotsComponent.stopVal.staticUpdater:None
DotsComponent.startEstim.default:
DotsComponent.startEstim.val:
DotsComponent.startEstim.allowedTypes:[]
DotsComponent.startEstim.allowedUpdates:None
DotsComponent.startEstim.readOnly:False
DotsComponent.startEstim.label:Expected start (s)
DotsComponent.startEstim.categ:Basic
DotsComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
DotsComponent.startEstim.allowedVals:[]
DotsComponent.startEstim.valType:code
DotsComponent.startEstim.updates:None
DotsComponent.startEstim.staticUpdater:None
DotsComponent.durationEstim.default:
DotsComponent.durationEstim.val:
DotsComponent.durationEstim.allowedTypes:[]
DotsComponent.durationEstim.allowedUpdates:None
DotsComponent.durationEstim.readOnly:False
DotsComponent.durationEstim.label:Expected duration (s)
DotsComponent.durationEstim.categ:Basic
DotsComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
DotsComponent.durationEstim.allowedVals:[]
DotsComponent.durationEstim.valType:code
DotsComponent.durationEstim.updates:None
DotsComponent.durationEstim.staticUpdater:None
DotsComponent.units.default:'from exp settings'
DotsComponent.units.val:from exp settings
DotsComponent.units.allowedTypes:[]
DotsComponent.units.allowedUpdates:None
DotsComponent.units.readOnly:False
DotsComponent.units.label:Units
DotsComponent.units.categ:Basic
DotsComponent.units.hint:Units of dimensions for this stimulus
DotsComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
DotsComponent.units.valType:str
DotsComponent.units.updates:None
DotsComponent.units.staticUpdater:None
DotsComponent.color.default:[1.0,1.0,1.0]
DotsComponent.color.val:$[1.0,1.0,1.0]
DotsComponent.color.allowedTypes:[]
DotsComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.color.readOnly:False
DotsComponent.color.label:Color
DotsComponent.color.categ:Basic
DotsComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
DotsComponent.color.allowedVals:[]
DotsComponent.color.valType:str
DotsComponent.color.updates:constant
DotsComponent.color.staticUpdater:None
DotsComponent.opacity.default:1
DotsComponent.opacity.val:1
DotsComponent.opacity.allowedTypes:[]
DotsComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.opacity.readOnly:False
DotsComponent.opacity.label:Opacity
DotsComponent.opacity.categ:Basic
DotsComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
DotsComponent.opacity.allowedVals:[]
DotsComponent.opacity.valType:code
DotsComponent.opacity.updates:constant
DotsComponent.opacity.staticUpdater:None
DotsComponent.colorSpace.default:'rgb'
DotsComponent.colorSpace.val:rgb
DotsComponent.colorSpace.allowedTypes:[]
DotsComponent.colorSpace.allowedUpdates:None
DotsComponent.colorSpace.readOnly:False
DotsComponent.colorSpace.label:Color space
DotsComponent.colorSpace.categ:Basic
DotsComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
DotsComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
DotsComponent.colorSpace.valType:str
DotsComponent.colorSpace.updates:constant
DotsComponent.colorSpace.staticUpdater:None
DotsComponent.nDots.default:100
DotsComponent.nDots.val:100
DotsComponent.nDots.allowedTypes:[]
DotsComponent.nDots.allowedUpdates:None
DotsComponent.nDots.readOnly:False
DotsComponent.nDots.label:Number of dots
DotsComponent.nDots.categ:Dots
DotsComponent.nDots.hint:Number of dots in the field (for circular fields this will be average number of dots)
DotsComponent.nDots.allowedVals:[]
DotsComponent.nDots.valType:code
DotsComponent.nDots.updates:constant
DotsComponent.nDots.staticUpdater:None
DotsComponent.dir.default:0.0
DotsComponent.dir.val:0.0
DotsComponent.dir.allowedTypes:[]
DotsComponent.dir.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.dir.readOnly:False
DotsComponent.dir.label:Direction
DotsComponent.dir.categ:Dots
DotsComponent.dir.hint:Direction of motion for the signal dots (degrees)
DotsComponent.dir.allowedVals:[]
DotsComponent.dir.valType:code
DotsComponent.dir.updates:constant
DotsComponent.dir.staticUpdater:None
DotsComponent.speed.default:0.1
DotsComponent.speed.val:0.1
DotsComponent.speed.allowedTypes:[]
DotsComponent.speed.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.speed.readOnly:False
DotsComponent.speed.label:Speed
DotsComponent.speed.categ:Dots
DotsComponent.speed.hint:Speed of the dots (displacement per frame in the specified units)
DotsComponent.speed.allowedVals:[]
DotsComponent.speed.valType:code
DotsComponent.speed.updates:constant
DotsComponent.speed.staticUpdater:None
DotsComponent.coherence.default:1.0
DotsComponent.coherence.val:1.0
DotsComponent.coherence.allowedTypes:[]
DotsComponent.coherence.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.coherence.readOnly:False
DotsComponent.coherence.label:Coherence
DotsComponent.coherence.categ:Dots
DotsComponent.coherence.hint:Coherence of the dots (fraction moving in the signal direction on any one frame)
DotsComponent.coherence.allowedVals:[]
DotsComponent.coherence.valType:code
DotsComponent.coherence.updates:constant
DotsComponent.coherence.staticUpdater:None
DotsComponent.dotSize.default:2
DotsComponent.dotSize.val:2
DotsComponent.dotSize.allowedTypes:[]
DotsComponent.dotSize.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.dotSize.readOnly:False
DotsComponent.dotSize.label:Dot size
DotsComponent.dotSize.categ:Dots
DotsComponent.dotSize.hint:Size of the dots IN PIXELS regardless of the set units
DotsComponent.dotSize.allowedVals:[]
DotsComponent.dotSize.valType:code
DotsComponent.dotSize.updates:constant
DotsComponent.dotSize.staticUpdater:None
DotsComponent.dotLife.default:3
DotsComponent.dotLife.val:3
DotsComponent.dotLife.allowedTypes:[]
DotsComponent.dotLife.allowedUpdates:None
DotsComponent.dotLife.readOnly:False
DotsComponent.dotLife.label:Dot life-time
DotsComponent.dotLife.categ:Dots
DotsComponent.dotLife.hint:Number of frames before each dot is killed and randomly assigned a new position
DotsComponent.dotLife.allowedVals:[]
DotsComponent.dotLife.valType:code
DotsComponent.dotLife.updates:None
DotsComponent.dotLife.staticUpdater:None
DotsComponent.signalDots.default:'same'
DotsComponent.signalDots.val:same
DotsComponent.signalDots.allowedTypes:[]
DotsComponent.signalDots.allowedUpdates:None
DotsComponent.signalDots.readOnly:False
DotsComponent.signalDots.label:Signal dots
DotsComponent.signalDots.categ:Dots
DotsComponent.signalDots.hint:On each frame are the signals dots remaining the same or changing? See Scase et al.
DotsComponent.signalDots.allowedVals:['same', 'different']
DotsComponent.signalDots.valType:str
DotsComponent.signalDots.updates:None
DotsComponent.signalDots.staticUpdater:None
DotsComponent.refreshDots.default:'repeat'
DotsComponent.refreshDots.val:repeat
DotsComponent.refreshDots.allowedTypes:[]
DotsComponent.refreshDots.allowedUpdates:[]
DotsComponent.refreshDots.readOnly:False
DotsComponent.refreshDots.label:Dot refresh rule
DotsComponent.refreshDots.categ:Dots
DotsComponent.refreshDots.hint:When should the whole sample of dots be refreshed
DotsComponent.refreshDots.allowedVals:['none', 'repeat']
DotsComponent.refreshDots.valType:str
DotsComponent.refreshDots.updates:None
DotsComponent.refreshDots.staticUpdater:None
DotsComponent.noiseDots.default:'direction'
DotsComponent.noiseDots.val:direction
DotsComponent.noiseDots.allowedTypes:[]
DotsComponent.noiseDots.allowedUpdates:None
DotsComponent.noiseDots.readOnly:False
DotsComponent.noiseDots.label:Noise dots
DotsComponent.noiseDots.categ:Dots
DotsComponent.noiseDots.hint:What governs the behaviour of the noise dots? See Scase et al.
DotsComponent.noiseDots.allowedVals:['direction', 'position', 'walk']
DotsComponent.noiseDots.valType:str
DotsComponent.noiseDots.updates:None
DotsComponent.noiseDots.staticUpdater:None
DotsComponent.fieldShape.default:'circle'
DotsComponent.fieldShape.val:circle
DotsComponent.fieldShape.allowedTypes:[]
DotsComponent.fieldShape.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.fieldShape.readOnly:False
DotsComponent.fieldShape.label:Field shape
DotsComponent.fieldShape.categ:Basic
DotsComponent.fieldShape.hint:What is the shape of the field?
DotsComponent.fieldShape.allowedVals:['circle', 'square']
DotsComponent.fieldShape.valType:str
DotsComponent.fieldShape.updates:constant
DotsComponent.fieldShape.staticUpdater:None
DotsComponent.fieldSize.default:1.0
DotsComponent.fieldSize.val:1.0
DotsComponent.fieldSize.allowedTypes:[]
DotsComponent.fieldSize.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.fieldSize.readOnly:False
DotsComponent.fieldSize.label:Field size
DotsComponent.fieldSize.categ:Basic
DotsComponent.fieldSize.hint:What is the size of the field (in the specified units)?
DotsComponent.fieldSize.allowedVals:[]
DotsComponent.fieldSize.valType:code
DotsComponent.fieldSize.updates:constant
DotsComponent.fieldSize.staticUpdater:None
DotsComponent.fieldPos.default:(0.0, 0.0)
DotsComponent.fieldPos.val:(0.0, 0.0)
DotsComponent.fieldPos.allowedTypes:[]
DotsComponent.fieldPos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.fieldPos.readOnly:False
DotsComponent.fieldPos.label:Field position
DotsComponent.fieldPos.categ:Basic
DotsComponent.fieldPos.hint:Where is the field centred (in the specified units)?
DotsComponent.fieldPos.allowedVals:[]
DotsComponent.fieldPos.valType:code
DotsComponent.fieldPos.updates:constant
DotsComponent.fieldPos.staticUpdater:None
EnvGratingComponent.order:['carrier', 'mask']
EnvGratingComponent.name.default:env_grating
EnvGratingComponent.name.val:env_grating
EnvGratingComponent.name.allowedTypes:[]
EnvGratingComponent.name.allowedUpdates:None
EnvGratingComponent.name.readOnly:False
EnvGratingComponent.name.label:Name
EnvGratingComponent.name.categ:Basic
EnvGratingComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
EnvGratingComponent.name.allowedVals:[]
EnvGratingComponent.name.valType:code
EnvGratingComponent.name.staticUpdater:None
EnvGratingComponent.startType.default:'time (s)'
EnvGratingComponent.startType.val:time (s)
EnvGratingComponent.startType.allowedTypes:[]
EnvGratingComponent.startType.allowedUpdates:None
EnvGratingComponent.startType.readOnly:False
EnvGratingComponent.startType.label:start type
EnvGratingComponent.startType.categ:Basic
EnvGratingComponent.startType.hint:How do you want to define your start point?
EnvGratingComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
EnvGratingComponent.startType.valType:str
EnvGratingComponent.startType.updates:None
EnvGratingComponent.startType.staticUpdater:None
EnvGratingComponent.stopType.default:'duration (s)'
EnvGratingComponent.stopType.val:duration (s)
EnvGratingComponent.stopType.allowedTypes:[]
EnvGratingComponent.stopType.allowedUpdates:None
EnvGratingComponent.stopType.readOnly:False
EnvGratingComponent.stopType.label:stop type
EnvGratingComponent.stopType.categ:Basic
EnvGratingComponent.stopType.hint:How do you want to define your end point?
EnvGratingComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
EnvGratingComponent.stopType.valType:str
EnvGratingComponent.stopType.updates:None
EnvGratingComponent.stopType.staticUpdater:None
EnvGratingComponent.startVal.default:0.0
EnvGratingComponent.startVal.val:0.0
EnvGratingComponent.startVal.allowedTypes:[]
EnvGratingComponent.startVal.allowedUpdates:None
EnvGratingComponent.startVal.readOnly:False
EnvGratingComponent.startVal.label:Start
EnvGratingComponent.startVal.categ:Basic
EnvGratingComponent.startVal.hint:When does the component start?
EnvGratingComponent.startVal.allowedVals:[]
EnvGratingComponent.startVal.valType:code
EnvGratingComponent.startVal.updates:None
EnvGratingComponent.startVal.staticUpdater:None
EnvGratingComponent.stopVal.default:1.0
EnvGratingComponent.stopVal.val:1.0
EnvGratingComponent.stopVal.allowedTypes:[]
EnvGratingComponent.stopVal.allowedUpdates:[]
EnvGratingComponent.stopVal.readOnly:False
EnvGratingComponent.stopVal.label:Stop
EnvGratingComponent.stopVal.categ:Basic
EnvGratingComponent.stopVal.hint:When does the component end? (blank is endless)
EnvGratingComponent.stopVal.allowedVals:[]
EnvGratingComponent.stopVal.valType:code
EnvGratingComponent.stopVal.updates:constant
EnvGratingComponent.stopVal.staticUpdater:None
EnvGratingComponent.startEstim.default:
EnvGratingComponent.startEstim.val:
EnvGratingComponent.startEstim.allowedTypes:[]
EnvGratingComponent.startEstim.allowedUpdates:None
EnvGratingComponent.startEstim.readOnly:False
EnvGratingComponent.startEstim.label:Expected start (s)
EnvGratingComponent.startEstim.categ:Basic
EnvGratingComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
EnvGratingComponent.startEstim.allowedVals:[]
EnvGratingComponent.startEstim.valType:code
EnvGratingComponent.startEstim.updates:None
EnvGratingComponent.startEstim.staticUpdater:None
EnvGratingComponent.durationEstim.default:
EnvGratingComponent.durationEstim.val:
EnvGratingComponent.durationEstim.allowedTypes:[]
EnvGratingComponent.durationEstim.allowedUpdates:None
EnvGratingComponent.durationEstim.readOnly:False
EnvGratingComponent.durationEstim.label:Expected duration (s)
EnvGratingComponent.durationEstim.categ:Basic
EnvGratingComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
EnvGratingComponent.durationEstim.allowedVals:[]
EnvGratingComponent.durationEstim.valType:code
EnvGratingComponent.durationEstim.updates:None
EnvGratingComponent.durationEstim.staticUpdater:None
EnvGratingComponent.units.default:'from exp settings'
EnvGratingComponent.units.val:from exp settings
EnvGratingComponent.units.allowedTypes:[]
EnvGratingComponent.units.allowedUpdates:None
EnvGratingComponent.units.readOnly:False
EnvGratingComponent.units.label:Units
EnvGratingComponent.units.categ:Basic
EnvGratingComponent.units.hint:Units of dimensions for this stimulus
EnvGratingComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
EnvGratingComponent.units.valType:str
EnvGratingComponent.units.updates:None
EnvGratingComponent.units.staticUpdater:None
EnvGratingComponent.color.default:[1,1,1]
EnvGratingComponent.color.val:$[1,1,1]
EnvGratingComponent.color.allowedTypes:[]
EnvGratingComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.color.readOnly:False
EnvGratingComponent.color.label:Color
EnvGratingComponent.color.categ:Basic
EnvGratingComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
EnvGratingComponent.color.allowedVals:[]
EnvGratingComponent.color.valType:str
EnvGratingComponent.color.updates:constant
EnvGratingComponent.color.staticUpdater:None
EnvGratingComponent.opacity.default:1
EnvGratingComponent.opacity.val:1
EnvGratingComponent.opacity.allowedTypes:[]
EnvGratingComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.opacity.readOnly:False
EnvGratingComponent.opacity.label:Opacity
EnvGratingComponent.opacity.categ:Basic
EnvGratingComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
EnvGratingComponent.opacity.allowedVals:[]
EnvGratingComponent.opacity.valType:code
EnvGratingComponent.opacity.updates:constant
EnvGratingComponent.opacity.staticUpdater:None
EnvGratingComponent.colorSpace.default:'rgb'
EnvGratingComponent.colorSpace.val:rgb
EnvGratingComponent.colorSpace.allowedTypes:[]
EnvGratingComponent.colorSpace.allowedUpdates:None
EnvGratingComponent.colorSpace.readOnly:False
EnvGratingComponent.colorSpace.label:Color space
EnvGratingComponent.colorSpace.categ:Basic
EnvGratingComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
EnvGratingComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
EnvGratingComponent.colorSpace.valType:str
EnvGratingComponent.colorSpace.updates:constant
EnvGratingComponent.colorSpace.staticUpdater:None
EnvGratingComponent.pos.default:(0, 0)
EnvGratingComponent.pos.val:(0, 0)
EnvGratingComponent.pos.allowedTypes:[]
EnvGratingComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.pos.readOnly:False
EnvGratingComponent.pos.label:Position [x,y]
EnvGratingComponent.pos.categ:Basic
EnvGratingComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
EnvGratingComponent.pos.allowedVals:[]
EnvGratingComponent.pos.valType:code
EnvGratingComponent.pos.updates:constant
EnvGratingComponent.pos.staticUpdater:None
EnvGratingComponent.size.default:(0.5, 0.5)
EnvGratingComponent.size.val:(0.5, 0.5)
EnvGratingComponent.size.allowedTypes:[]
EnvGratingComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.size.readOnly:False
EnvGratingComponent.size.label:Size [w,h]
EnvGratingComponent.size.categ:Basic
EnvGratingComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
EnvGratingComponent.size.allowedVals:[]
EnvGratingComponent.size.valType:code
EnvGratingComponent.size.updates:constant
EnvGratingComponent.size.staticUpdater:None
EnvGratingComponent.ori.default:0
EnvGratingComponent.ori.val:0
EnvGratingComponent.ori.allowedTypes:[]
EnvGratingComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.ori.readOnly:False
EnvGratingComponent.ori.label:Carrier Orientation
EnvGratingComponent.ori.categ:Carrier
EnvGratingComponent.ori.hint:Orientation of this stimulus (in deg)
EnvGratingComponent.ori.allowedVals:[]
EnvGratingComponent.ori.valType:code
EnvGratingComponent.ori.updates:constant
EnvGratingComponent.ori.staticUpdater:None
EnvGratingComponent.carrier.default:'sin'
EnvGratingComponent.carrier.val:sin
EnvGratingComponent.carrier.allowedTypes:[]
EnvGratingComponent.carrier.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.carrier.readOnly:False
EnvGratingComponent.carrier.label:Carrier texture
EnvGratingComponent.carrier.categ:Carrier
EnvGratingComponent.carrier.hint:The (2D) texture of the background - can be sin, sqr, sinXsin... or a filename (including path)
EnvGratingComponent.carrier.allowedVals:[]
EnvGratingComponent.carrier.valType:str
EnvGratingComponent.carrier.updates:constant
EnvGratingComponent.carrier.staticUpdater:None
EnvGratingComponent.mask.default:'None'
EnvGratingComponent.mask.val:None
EnvGratingComponent.mask.allowedTypes:[]
EnvGratingComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.mask.readOnly:False
EnvGratingComponent.mask.label:Mask
EnvGratingComponent.mask.categ:Carrier
EnvGratingComponent.mask.hint:An image to define the alpha mask (ie shape)- gauss, circle... or a filename (including path)
EnvGratingComponent.mask.allowedVals:[]
EnvGratingComponent.mask.valType:str
EnvGratingComponent.mask.updates:constant
EnvGratingComponent.mask.staticUpdater:None
EnvGratingComponent.contrast.default:0.5
EnvGratingComponent.contrast.val:0.5
EnvGratingComponent.contrast.allowedTypes:[]
EnvGratingComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.contrast.readOnly:False
EnvGratingComponent.contrast.label:Carrier contrast
EnvGratingComponent.contrast.categ:Carrier
EnvGratingComponent.contrast.hint:Contrast of background carrier
EnvGratingComponent.contrast.allowedVals:[]
EnvGratingComponent.contrast.valType:code
EnvGratingComponent.contrast.updates:constant
EnvGratingComponent.contrast.staticUpdater:None
EnvGratingComponent.sf.default:1.0
EnvGratingComponent.sf.val:1.0
EnvGratingComponent.sf.allowedTypes:[]
EnvGratingComponent.sf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.sf.readOnly:False
EnvGratingComponent.sf.label:Carrier spatial frequency
EnvGratingComponent.sf.categ:Carrier
EnvGratingComponent.sf.hint:Spatial frequency of background carrier repeats across the grating in 1 or 2 dimensions, e.g. 4 or [2,3]
EnvGratingComponent.sf.allowedVals:[]
EnvGratingComponent.sf.valType:code
EnvGratingComponent.sf.updates:constant
EnvGratingComponent.sf.staticUpdater:None
EnvGratingComponent.phase.default:0.0
EnvGratingComponent.phase.val:0.0
EnvGratingComponent.phase.allowedTypes:[]
EnvGratingComponent.phase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.phase.readOnly:False
EnvGratingComponent.phase.label:Carrier phase (in cycles)
EnvGratingComponent.phase.categ:Carrier
EnvGratingComponent.phase.hint:Spatial positioning of the background carrier (wraps in range 0-1.0)
EnvGratingComponent.phase.allowedVals:[]
EnvGratingComponent.phase.valType:code
EnvGratingComponent.phase.updates:constant
EnvGratingComponent.phase.staticUpdater:None
EnvGratingComponent.texture resolution.default:128
EnvGratingComponent.texture resolution.val:128
EnvGratingComponent.texture resolution.allowedTypes:[]
EnvGratingComponent.texture resolution.allowedUpdates:[]
EnvGratingComponent.texture resolution.readOnly:False
EnvGratingComponent.texture resolution.label:Texture resolution
EnvGratingComponent.texture resolution.categ:Carrier
EnvGratingComponent.texture resolution.hint:Resolution of the texture for standard ones such as sin, sqr etc. For most cases a value of 256 pixels will suffice
EnvGratingComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
EnvGratingComponent.texture resolution.valType:code
EnvGratingComponent.texture resolution.updates:constant
EnvGratingComponent.texture resolution.staticUpdater:None
EnvGratingComponent.interpolate.default:'linear'
EnvGratingComponent.interpolate.val:linear
EnvGratingComponent.interpolate.allowedTypes:[]
EnvGratingComponent.interpolate.allowedUpdates:[]
EnvGratingComponent.interpolate.readOnly:False
EnvGratingComponent.interpolate.label:Interpolate
EnvGratingComponent.interpolate.categ:Carrier
EnvGratingComponent.interpolate.hint:How should the image be interpolated if/when rescaled
EnvGratingComponent.interpolate.allowedVals:['linear', 'nearest']
EnvGratingComponent.interpolate.valType:str
EnvGratingComponent.interpolate.updates:constant
EnvGratingComponent.interpolate.staticUpdater:None
EnvGratingComponent.envelope.default:'sin'
EnvGratingComponent.envelope.val:sin
EnvGratingComponent.envelope.allowedTypes:[]
EnvGratingComponent.envelope.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.envelope.readOnly:False
EnvGratingComponent.envelope.label:Envelope texture
EnvGratingComponent.envelope.categ:Envelope
EnvGratingComponent.envelope.hint:The (2D) texture of the envelope - can be sin, sqr, sinXsin... or a filename (including path)
EnvGratingComponent.envelope.allowedVals:[]
EnvGratingComponent.envelope.valType:str
EnvGratingComponent.envelope.updates:constant
EnvGratingComponent.envelope.staticUpdater:None
EnvGratingComponent.envsf.default:1.0
EnvGratingComponent.envsf.val:1.0
EnvGratingComponent.envsf.allowedTypes:[]
EnvGratingComponent.envsf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.envsf.readOnly:False
EnvGratingComponent.envsf.label:Envelope spatial frequency
EnvGratingComponent.envsf.categ:Envelope
EnvGratingComponent.envsf.hint:Spatial frequency of the modulation envelope repeats across the grating in 1 or 2 dimensions, e.g. 4 or [2,3]
EnvGratingComponent.envsf.allowedVals:[]
EnvGratingComponent.envsf.valType:code
EnvGratingComponent.envsf.updates:constant
EnvGratingComponent.envsf.staticUpdater:None
EnvGratingComponent.envphase.default:0.0
EnvGratingComponent.envphase.val:0.0
EnvGratingComponent.envphase.allowedTypes:[]
EnvGratingComponent.envphase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.envphase.readOnly:False
EnvGratingComponent.envphase.label:Envelope phase
EnvGratingComponent.envphase.categ:Envelope
EnvGratingComponent.envphase.hint:Spatial positioning of the modulation envelope(wraps in range 0-1.0)
EnvGratingComponent.envphase.allowedVals:[]
EnvGratingComponent.envphase.valType:code
EnvGratingComponent.envphase.updates:constant
EnvGratingComponent.envphase.staticUpdater:None
EnvGratingComponent.envori.default:0.0
EnvGratingComponent.envori.val:0.0
EnvGratingComponent.envori.allowedTypes:[]
EnvGratingComponent.envori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.envori.readOnly:False
EnvGratingComponent.envori.label:Envelope orientation
EnvGratingComponent.envori.categ:Envelope
EnvGratingComponent.envori.hint:Orientation of the modulation envelope(wraps in range 0-360)
EnvGratingComponent.envori.allowedVals:[]
EnvGratingComponent.envori.valType:code
EnvGratingComponent.envori.updates:constant
EnvGratingComponent.envori.staticUpdater:None
EnvGratingComponent.moddepth.default:1.0
EnvGratingComponent.moddepth.val:1.0
EnvGratingComponent.moddepth.allowedTypes:[]
EnvGratingComponent.moddepth.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.moddepth.readOnly:False
EnvGratingComponent.moddepth.label:Envelope modulation depth
EnvGratingComponent.moddepth.categ:Envelope
EnvGratingComponent.moddepth.hint:Modulation depth of modulation envelope
EnvGratingComponent.moddepth.allowedVals:[]
EnvGratingComponent.moddepth.valType:code
EnvGratingComponent.moddepth.updates:constant
EnvGratingComponent.moddepth.staticUpdater:None
EnvGratingComponent.beat.default:False
EnvGratingComponent.beat.val:False
EnvGratingComponent.beat.allowedTypes:[]
EnvGratingComponent.beat.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.beat.readOnly:False
EnvGratingComponent.beat.label:Is modulation a beat
EnvGratingComponent.beat.categ:Envelope
EnvGratingComponent.beat.hint:Do you want a 'beat'? [beat = carrier*envelope, no beat = carrier*(1+envelope), True/False, Y/N]
EnvGratingComponent.beat.allowedVals:[]
EnvGratingComponent.beat.valType:str
EnvGratingComponent.beat.updates:constant
EnvGratingComponent.beat.staticUpdater:None
EnvGratingComponent.blendmode.default:'avg'
EnvGratingComponent.blendmode.val:avg
EnvGratingComponent.blendmode.allowedTypes:[]
EnvGratingComponent.blendmode.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.blendmode.readOnly:False
EnvGratingComponent.blendmode.label:OpenGL blend mode
EnvGratingComponent.blendmode.categ:Basic
EnvGratingComponent.blendmode.hint:OpenGL Blendmode. Avg is most common mode in PsychoPy, add is useful if combining a beat with the carrier image or numpy array at point of display
EnvGratingComponent.blendmode.allowedVals:['avg', 'add']
EnvGratingComponent.blendmode.valType:str
EnvGratingComponent.blendmode.updates:constant
EnvGratingComponent.blendmode.staticUpdater:None
GratingComponent.order:['tex', 'mask']
GratingComponent.name.default:grating
GratingComponent.name.val:grating
GratingComponent.name.allowedTypes:[]
GratingComponent.name.allowedUpdates:None
GratingComponent.name.readOnly:False
GratingComponent.name.label:Name
GratingComponent.name.categ:Basic
GratingComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
GratingComponent.name.allowedVals:[]
GratingComponent.name.valType:code
GratingComponent.name.staticUpdater:None
GratingComponent.startType.default:'time (s)'
GratingComponent.startType.val:time (s)
GratingComponent.startType.allowedTypes:[]
GratingComponent.startType.allowedUpdates:None
GratingComponent.startType.readOnly:False
GratingComponent.startType.label:start type
GratingComponent.startType.categ:Basic
GratingComponent.startType.hint:How do you want to define your start point?
GratingComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
GratingComponent.startType.valType:str
GratingComponent.startType.updates:None
GratingComponent.startType.staticUpdater:None
GratingComponent.stopType.default:'duration (s)'
GratingComponent.stopType.val:duration (s)
GratingComponent.stopType.allowedTypes:[]
GratingComponent.stopType.allowedUpdates:None
GratingComponent.stopType.readOnly:False
GratingComponent.stopType.label:stop type
GratingComponent.stopType.categ:Basic
GratingComponent.stopType.hint:How do you want to define your end point?
GratingComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
GratingComponent.stopType.valType:str
GratingComponent.stopType.updates:None
GratingComponent.stopType.staticUpdater:None
GratingComponent.startVal.default:0.0
GratingComponent.startVal.val:0.0
GratingComponent.startVal.allowedTypes:[]
GratingComponent.startVal.allowedUpdates:None
GratingComponent.startVal.readOnly:False
GratingComponent.startVal.label:Start
GratingComponent.startVal.categ:Basic
GratingComponent.startVal.hint:When does the component start?
GratingComponent.startVal.allowedVals:[]
GratingComponent.startVal.valType:code
GratingComponent.startVal.updates:None
GratingComponent.startVal.staticUpdater:None
GratingComponent.stopVal.default:1.0
GratingComponent.stopVal.val:1.0
GratingComponent.stopVal.allowedTypes:[]
GratingComponent.stopVal.allowedUpdates:[]
GratingComponent.stopVal.readOnly:False
GratingComponent.stopVal.label:Stop
GratingComponent.stopVal.categ:Basic
GratingComponent.stopVal.hint:When does the component end? (blank is endless)
GratingComponent.stopVal.allowedVals:[]
GratingComponent.stopVal.valType:code
GratingComponent.stopVal.updates:constant
GratingComponent.stopVal.staticUpdater:None
GratingComponent.startEstim.default:
GratingComponent.startEstim.val:
GratingComponent.startEstim.allowedTypes:[]
GratingComponent.startEstim.allowedUpdates:None
GratingComponent.startEstim.readOnly:False
GratingComponent.startEstim.label:Expected start (s)
GratingComponent.startEstim.categ:Basic
GratingComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
GratingComponent.startEstim.allowedVals:[]
GratingComponent.startEstim.valType:code
GratingComponent.startEstim.updates:None
GratingComponent.startEstim.staticUpdater:None
GratingComponent.durationEstim.default:
GratingComponent.durationEstim.val:
GratingComponent.durationEstim.allowedTypes:[]
GratingComponent.durationEstim.allowedUpdates:None
GratingComponent.durationEstim.readOnly:False
GratingComponent.durationEstim.label:Expected duration (s)
GratingComponent.durationEstim.categ:Basic
GratingComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
GratingComponent.durationEstim.allowedVals:[]
GratingComponent.durationEstim.valType:code
GratingComponent.durationEstim.updates:None
GratingComponent.durationEstim.staticUpdater:None
GratingComponent.units.default:'from exp settings'
GratingComponent.units.val:from exp settings
GratingComponent.units.allowedTypes:[]
GratingComponent.units.allowedUpdates:None
GratingComponent.units.readOnly:False
GratingComponent.units.label:Units
GratingComponent.units.categ:Basic
GratingComponent.units.hint:Units of dimensions for this stimulus
GratingComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
GratingComponent.units.valType:str
GratingComponent.units.updates:None
GratingComponent.units.staticUpdater:None
GratingComponent.color.default:[1,1,1]
GratingComponent.color.val:$[1,1,1]
GratingComponent.color.allowedTypes:[]
GratingComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.color.readOnly:False
GratingComponent.color.label:Color
GratingComponent.color.categ:Basic
GratingComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
GratingComponent.color.allowedVals:[]
GratingComponent.color.valType:str
GratingComponent.color.updates:constant
GratingComponent.color.staticUpdater:None
GratingComponent.opacity.default:1
GratingComponent.opacity.val:1
GratingComponent.opacity.allowedTypes:[]
GratingComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.opacity.readOnly:False
GratingComponent.opacity.label:Opacity
GratingComponent.opacity.categ:Basic
GratingComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
GratingComponent.opacity.allowedVals:[]
GratingComponent.opacity.valType:code
GratingComponent.opacity.updates:constant
GratingComponent.opacity.staticUpdater:None
GratingComponent.colorSpace.default:'rgb'
GratingComponent.colorSpace.val:rgb
GratingComponent.colorSpace.allowedTypes:[]
GratingComponent.colorSpace.allowedUpdates:None
GratingComponent.colorSpace.readOnly:False
GratingComponent.colorSpace.label:Color space
GratingComponent.colorSpace.categ:Basic
GratingComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
GratingComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
GratingComponent.colorSpace.valType:str
GratingComponent.colorSpace.updates:constant
GratingComponent.colorSpace.staticUpdater:None
GratingComponent.pos.default:(0, 0)
GratingComponent.pos.val:(0, 0)
GratingComponent.pos.allowedTypes:[]
GratingComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.pos.readOnly:False
GratingComponent.pos.label:Position [x,y]
GratingComponent.pos.categ:Basic
GratingComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
GratingComponent.pos.allowedVals:[]
GratingComponent.pos.valType:code
GratingComponent.pos.updates:constant
GratingComponent.pos.staticUpdater:None
GratingComponent.size.default:(0.5, 0.5)
GratingComponent.size.val:(0.5, 0.5)
GratingComponent.size.allowedTypes:[]
GratingComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.size.readOnly:False
GratingComponent.size.label:Size [w,h]
GratingComponent.size.categ:Basic
GratingComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
GratingComponent.size.allowedVals:[]
GratingComponent.size.valType:code
GratingComponent.size.updates:constant
GratingComponent.size.staticUpdater:None
GratingComponent.ori.default:0
GratingComponent.ori.val:0
GratingComponent.ori.allowedTypes:[]
GratingComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.ori.readOnly:False
GratingComponent.ori.label:Orientation
GratingComponent.ori.categ:Basic
GratingComponent.ori.hint:Orientation of this stimulus (in deg)
GratingComponent.ori.allowedVals:[]
GratingComponent.ori.valType:code
GratingComponent.ori.updates:constant
GratingComponent.ori.staticUpdater:None
GratingComponent.tex.default:'sin'
GratingComponent.tex.val:sin
GratingComponent.tex.allowedTypes:[]
GratingComponent.tex.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.tex.readOnly:False
GratingComponent.tex.label:Texture
GratingComponent.tex.categ:Advanced
GratingComponent.tex.hint:The (2D) texture of the grating - can be sin, sqr, sinXsin... or a filename (including path)
GratingComponent.tex.allowedVals:[]
GratingComponent.tex.valType:str
GratingComponent.tex.updates:constant
GratingComponent.tex.staticUpdater:None
GratingComponent.mask.default:'None'
GratingComponent.mask.val:None
GratingComponent.mask.allowedTypes:[]
GratingComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.mask.readOnly:False
GratingComponent.mask.label:Mask
GratingComponent.mask.categ:Advanced
GratingComponent.mask.hint:An image to define the alpha mask (ie shape)- gauss, circle... or a filename (including path)
GratingComponent.mask.allowedVals:[]
GratingComponent.mask.valType:str
GratingComponent.mask.updates:constant
GratingComponent.mask.staticUpdater:None
GratingComponent.sf.default:None
GratingComponent.sf.val:None
GratingComponent.sf.allowedTypes:[]
GratingComponent.sf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.sf.readOnly:False
GratingComponent.sf.label:Spatial frequency
GratingComponent.sf.categ:Advanced
GratingComponent.sf.hint:Spatial frequency of image repeats across the grating in 1 or 2 dimensions, e.g. 4 or [2,3]
GratingComponent.sf.allowedVals:[]
GratingComponent.sf.valType:code
GratingComponent.sf.updates:constant
GratingComponent.sf.staticUpdater:None
GratingComponent.phase.default:0.0
GratingComponent.phase.val:0.0
GratingComponent.phase.allowedTypes:[]
GratingComponent.phase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.phase.readOnly:False
GratingComponent.phase.label:Phase (in cycles)
GratingComponent.phase.categ:Advanced
GratingComponent.phase.hint:Spatial positioning of the image on the grating (wraps in range 0-1.0)
GratingComponent.phase.allowedVals:[]
GratingComponent.phase.valType:code
GratingComponent.phase.updates:constant
GratingComponent.phase.staticUpdater:None
GratingComponent.texture resolution.default:128
GratingComponent.texture resolution.val:128
GratingComponent.texture resolution.allowedTypes:[]
GratingComponent.texture resolution.allowedUpdates:[]
GratingComponent.texture resolution.readOnly:False
GratingComponent.texture resolution.label:Texture resolution
GratingComponent.texture resolution.categ:Advanced
GratingComponent.texture resolution.hint:Resolution of the texture for standard ones such as sin, sqr etc. For most cases a value of 256 pixels will suffice
GratingComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
GratingComponent.texture resolution.valType:code
GratingComponent.texture resolution.updates:constant
GratingComponent.texture resolution.staticUpdater:None
GratingComponent.interpolate.default:'linear'
GratingComponent.interpolate.val:linear
GratingComponent.interpolate.allowedTypes:[]
GratingComponent.interpolate.allowedUpdates:[]
GratingComponent.interpolate.readOnly:False
GratingComponent.interpolate.label:Interpolate
GratingComponent.interpolate.categ:Advanced
GratingComponent.interpolate.hint:How should the image be interpolated if/when rescaled
GratingComponent.interpolate.allowedVals:['linear', 'nearest']
GratingComponent.interpolate.valType:str
GratingComponent.interpolate.updates:constant
GratingComponent.interpolate.staticUpdater:None
GratingComponent.blendmode.default:'avg'
GratingComponent.blendmode.val:avg
GratingComponent.blendmode.allowedTypes:[]
GratingComponent.blendmode.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.blendmode.readOnly:False
GratingComponent.blendmode.label:OpenGL blend mode
GratingComponent.blendmode.categ:Basic
GratingComponent.blendmode.hint:OpenGL Blendmode: avg gives traditional transparency, add is important to combine gratings)]
GratingComponent.blendmode.allowedVals:['avg', 'add']
GratingComponent.blendmode.valType:str
GratingComponent.blendmode.updates:constant
GratingComponent.blendmode.staticUpdater:None
ImageComponent.order:['name', 'image', 'pos', 'size', 'ori', 'opacity']
ImageComponent.name.default:image
ImageComponent.name.val:image
ImageComponent.name.allowedTypes:[]
ImageComponent.name.allowedUpdates:None
ImageComponent.name.readOnly:False
ImageComponent.name.label:Name
ImageComponent.name.categ:Basic
ImageComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
ImageComponent.name.allowedVals:[]
ImageComponent.name.valType:code
ImageComponent.name.staticUpdater:None
ImageComponent.startType.default:'time (s)'
ImageComponent.startType.val:time (s)
ImageComponent.startType.allowedTypes:[]
ImageComponent.startType.allowedUpdates:None
ImageComponent.startType.readOnly:False
ImageComponent.startType.label:start type
ImageComponent.startType.categ:Basic
ImageComponent.startType.hint:How do you want to define your start point?
ImageComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ImageComponent.startType.valType:str
ImageComponent.startType.updates:None
ImageComponent.startType.staticUpdater:None
ImageComponent.stopType.default:'duration (s)'
ImageComponent.stopType.val:duration (s)
ImageComponent.stopType.allowedTypes:[]
ImageComponent.stopType.allowedUpdates:None
ImageComponent.stopType.readOnly:False
ImageComponent.stopType.label:stop type
ImageComponent.stopType.categ:Basic
ImageComponent.stopType.hint:How do you want to define your end point?
ImageComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ImageComponent.stopType.valType:str
ImageComponent.stopType.updates:None
ImageComponent.stopType.staticUpdater:None
ImageComponent.startVal.default:0.0
ImageComponent.startVal.val:0.0
ImageComponent.startVal.allowedTypes:[]
ImageComponent.startVal.allowedUpdates:None
ImageComponent.startVal.readOnly:False
ImageComponent.startVal.label:Start
ImageComponent.startVal.categ:Basic
ImageComponent.startVal.hint:When does the component start?
ImageComponent.startVal.allowedVals:[]
ImageComponent.startVal.valType:code
ImageComponent.startVal.updates:None
ImageComponent.startVal.staticUpdater:None
ImageComponent.stopVal.default:1.0
ImageComponent.stopVal.val:1.0
ImageComponent.stopVal.allowedTypes:[]
ImageComponent.stopVal.allowedUpdates:[]
ImageComponent.stopVal.readOnly:False
ImageComponent.stopVal.label:Stop
ImageComponent.stopVal.categ:Basic
ImageComponent.stopVal.hint:When does the component end? (blank is endless)
ImageComponent.stopVal.allowedVals:[]
ImageComponent.stopVal.valType:code
ImageComponent.stopVal.updates:constant
ImageComponent.stopVal.staticUpdater:None
ImageComponent.startEstim.default:
ImageComponent.startEstim.val:
ImageComponent.startEstim.allowedTypes:[]
ImageComponent.startEstim.allowedUpdates:None
ImageComponent.startEstim.readOnly:False
ImageComponent.startEstim.label:Expected start (s)
ImageComponent.startEstim.categ:Basic
ImageComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ImageComponent.startEstim.allowedVals:[]
ImageComponent.startEstim.valType:code
ImageComponent.startEstim.updates:None
ImageComponent.startEstim.staticUpdater:None
ImageComponent.durationEstim.default:
ImageComponent.durationEstim.val:
ImageComponent.durationEstim.allowedTypes:[]
ImageComponent.durationEstim.allowedUpdates:None
ImageComponent.durationEstim.readOnly:False
ImageComponent.durationEstim.label:Expected duration (s)
ImageComponent.durationEstim.categ:Basic
ImageComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ImageComponent.durationEstim.allowedVals:[]
ImageComponent.durationEstim.valType:code
ImageComponent.durationEstim.updates:None
ImageComponent.durationEstim.staticUpdater:None
ImageComponent.units.default:'from exp settings'
ImageComponent.units.val:from exp settings
ImageComponent.units.allowedTypes:[]
ImageComponent.units.allowedUpdates:None
ImageComponent.units.readOnly:False
ImageComponent.units.label:Units
ImageComponent.units.categ:Basic
ImageComponent.units.hint:Units of dimensions for this stimulus
ImageComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
ImageComponent.units.valType:str
ImageComponent.units.updates:None
ImageComponent.units.staticUpdater:None
ImageComponent.color.default:[1,1,1]
ImageComponent.color.val:$[1,1,1]
ImageComponent.color.allowedTypes:[]
ImageComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.color.readOnly:False
ImageComponent.color.label:Color
ImageComponent.color.categ:Advanced
ImageComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
ImageComponent.color.allowedVals:[]
ImageComponent.color.valType:str
ImageComponent.color.updates:constant
ImageComponent.color.staticUpdater:None
ImageComponent.opacity.default:1
ImageComponent.opacity.val:1
ImageComponent.opacity.allowedTypes:[]
ImageComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.opacity.readOnly:False
ImageComponent.opacity.label:Opacity
ImageComponent.opacity.categ:Basic
ImageComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
ImageComponent.opacity.allowedVals:[]
ImageComponent.opacity.valType:code
ImageComponent.opacity.updates:constant
ImageComponent.opacity.staticUpdater:None
ImageComponent.colorSpace.default:'rgb'
ImageComponent.colorSpace.val:rgb
ImageComponent.colorSpace.allowedTypes:[]
ImageComponent.colorSpace.allowedUpdates:None
ImageComponent.colorSpace.readOnly:False
ImageComponent.colorSpace.label:Color space
ImageComponent.colorSpace.categ:Advanced
ImageComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
ImageComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
ImageComponent.colorSpace.valType:str
ImageComponent.colorSpace.updates:constant
ImageComponent.colorSpace.staticUpdater:None
ImageComponent.pos.default:(0, 0)
ImageComponent.pos.val:(0, 0)
ImageComponent.pos.allowedTypes:[]
ImageComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.pos.readOnly:False
ImageComponent.pos.label:Position [x,y]
ImageComponent.pos.categ:Basic
ImageComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
ImageComponent.pos.allowedVals:[]
ImageComponent.pos.valType:code
ImageComponent.pos.updates:constant
ImageComponent.pos.staticUpdater:None
ImageComponent.size.default:(0.5, 0.5)
ImageComponent.size.val:(0.5, 0.5)
ImageComponent.size.allowedTypes:[]
ImageComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.size.readOnly:False
ImageComponent.size.label:Size [w,h]
ImageComponent.size.categ:Basic
ImageComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
ImageComponent.size.allowedVals:[]
ImageComponent.size.valType:code
ImageComponent.size.updates:constant
ImageComponent.size.staticUpdater:None
ImageComponent.ori.default:0
ImageComponent.ori.val:0
ImageComponent.ori.allowedTypes:[]
ImageComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.ori.readOnly:False
ImageComponent.ori.label:Orientation
ImageComponent.ori.categ:Basic
ImageComponent.ori.hint:Orientation of this stimulus (in deg)
ImageComponent.ori.allowedVals:[]
ImageComponent.ori.valType:code
ImageComponent.ori.updates:constant
ImageComponent.ori.staticUpdater:None
ImageComponent.image.default:''
ImageComponent.image.val:
ImageComponent.image.allowedTypes:[]
ImageComponent.image.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.image.readOnly:False
ImageComponent.image.label:Image
ImageComponent.image.categ:Basic
ImageComponent.image.hint:The image to be displayed - a filename, including path
ImageComponent.image.allowedVals:[]
ImageComponent.image.valType:str
ImageComponent.image.updates:constant
ImageComponent.image.staticUpdater:None
ImageComponent.mask.default:'None'
ImageComponent.mask.val:None
ImageComponent.mask.allowedTypes:[]
ImageComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.mask.readOnly:False
ImageComponent.mask.label:Mask
ImageComponent.mask.categ:Advanced
ImageComponent.mask.hint:An image to define the alpha mask through which the image is seen - gauss, circle, None or a filename (including path)
ImageComponent.mask.allowedVals:[]
ImageComponent.mask.valType:str
ImageComponent.mask.updates:constant
ImageComponent.mask.staticUpdater:None
ImageComponent.texture resolution.default:128
ImageComponent.texture resolution.val:128
ImageComponent.texture resolution.allowedTypes:[]
ImageComponent.texture resolution.allowedUpdates:[]
ImageComponent.texture resolution.readOnly:False
ImageComponent.texture resolution.label:Texture resolution
ImageComponent.texture resolution.categ:Advanced
ImageComponent.texture resolution.hint:Resolution of the mask if one is used.
ImageComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
ImageComponent.texture resolution.valType:code
ImageComponent.texture resolution.updates:constant
ImageComponent.texture resolution.staticUpdater:None
ImageComponent.interpolate.default:'linear'
ImageComponent.interpolate.val:linear
ImageComponent.interpolate.allowedTypes:[]
ImageComponent.interpolate.allowedUpdates:[]
ImageComponent.interpolate.readOnly:False
ImageComponent.interpolate.label:Interpolate
ImageComponent.interpolate.categ:Advanced
ImageComponent.interpolate.hint:How should the image be interpolated if/when rescaled
ImageComponent.interpolate.allowedVals:['linear', 'nearest']
ImageComponent.interpolate.valType:str
ImageComponent.interpolate.updates:constant
ImageComponent.interpolate.staticUpdater:None
ImageComponent.flipVert.default:False
ImageComponent.flipVert.val:False
ImageComponent.flipVert.allowedTypes:[]
ImageComponent.flipVert.allowedUpdates:[]
ImageComponent.flipVert.readOnly:False
ImageComponent.flipVert.label:Flip vertically
ImageComponent.flipVert.categ:Advanced
ImageComponent.flipVert.hint:Should the image be flipped vertically (top to bottom)?
ImageComponent.flipVert.allowedVals:[]
ImageComponent.flipVert.valType:bool
ImageComponent.flipVert.updates:constant
ImageComponent.flipVert.staticUpdater:None
ImageComponent.flipHoriz.default:False
ImageComponent.flipHoriz.val:False
ImageComponent.flipHoriz.allowedTypes:[]
ImageComponent.flipHoriz.allowedUpdates:[]
ImageComponent.flipHoriz.readOnly:False
ImageComponent.flipHoriz.label:Flip horizontally
ImageComponent.flipHoriz.categ:Advanced
ImageComponent.flipHoriz.hint:Should the image be flipped horizontally (left to right)?
ImageComponent.flipHoriz.allowedVals:[]
ImageComponent.flipHoriz.valType:bool
ImageComponent.flipHoriz.updates:constant
ImageComponent.flipHoriz.staticUpdater:None
KeyboardComponent.order:['forceEndRoutine', 'allowedKeys', 'store', 'storeCorrect', 'correctAns']
KeyboardComponent.name.default:key_resp
KeyboardComponent.name.val:key_resp
KeyboardComponent.name.allowedTypes:[]
KeyboardComponent.name.allowedUpdates:None
KeyboardComponent.name.readOnly:False
KeyboardComponent.name.label:Name
KeyboardComponent.name.categ:Basic
KeyboardComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
KeyboardComponent.name.allowedVals:[]
KeyboardComponent.name.valType:code
KeyboardComponent.name.staticUpdater:None
KeyboardComponent.startType.default:'time (s)'
KeyboardComponent.startType.val:time (s)
KeyboardComponent.startType.allowedTypes:[]
KeyboardComponent.startType.allowedUpdates:None
KeyboardComponent.startType.readOnly:False
KeyboardComponent.startType.label:start type
KeyboardComponent.startType.categ:Basic
KeyboardComponent.startType.hint:How do you want to define your start point?
KeyboardComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
KeyboardComponent.startType.valType:str
KeyboardComponent.startType.updates:None
KeyboardComponent.startType.staticUpdater:None
KeyboardComponent.stopType.default:'duration (s)'
KeyboardComponent.stopType.val:duration (s)
KeyboardComponent.stopType.allowedTypes:[]
KeyboardComponent.stopType.allowedUpdates:None
KeyboardComponent.stopType.readOnly:False
KeyboardComponent.stopType.label:stop type
KeyboardComponent.stopType.categ:Basic
KeyboardComponent.stopType.hint:How do you want to define your end point?
KeyboardComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
KeyboardComponent.stopType.valType:str
KeyboardComponent.stopType.updates:None
KeyboardComponent.stopType.staticUpdater:None
KeyboardComponent.startVal.default:0.0
KeyboardComponent.startVal.val:0.0
KeyboardComponent.startVal.allowedTypes:[]
KeyboardComponent.startVal.allowedUpdates:None
KeyboardComponent.startVal.readOnly:False
KeyboardComponent.startVal.label:Start
KeyboardComponent.startVal.categ:Basic
KeyboardComponent.startVal.hint:When does the component start?
KeyboardComponent.startVal.allowedVals:[]
KeyboardComponent.startVal.valType:code
KeyboardComponent.startVal.updates:None
KeyboardComponent.startVal.staticUpdater:None
KeyboardComponent.stopVal.default:
KeyboardComponent.stopVal.val:
KeyboardComponent.stopVal.allowedTypes:[]
KeyboardComponent.stopVal.allowedUpdates:[]
KeyboardComponent.stopVal.readOnly:False
KeyboardComponent.stopVal.label:Stop
KeyboardComponent.stopVal.categ:Basic
KeyboardComponent.stopVal.hint:When does the component end? (blank is endless)
KeyboardComponent.stopVal.allowedVals:[]
KeyboardComponent.stopVal.valType:code
KeyboardComponent.stopVal.updates:constant
KeyboardComponent.stopVal.staticUpdater:None
KeyboardComponent.startEstim.default:
KeyboardComponent.startEstim.val:
KeyboardComponent.startEstim.allowedTypes:[]
KeyboardComponent.startEstim.allowedUpdates:None
KeyboardComponent.startEstim.readOnly:False
KeyboardComponent.startEstim.label:Expected start (s)
KeyboardComponent.startEstim.categ:Basic
KeyboardComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
KeyboardComponent.startEstim.allowedVals:[]
KeyboardComponent.startEstim.valType:code
KeyboardComponent.startEstim.updates:None
KeyboardComponent.startEstim.staticUpdater:None
KeyboardComponent.durationEstim.default:
KeyboardComponent.durationEstim.val:
KeyboardComponent.durationEstim.allowedTypes:[]
KeyboardComponent.durationEstim.allowedUpdates:None
KeyboardComponent.durationEstim.readOnly:False
KeyboardComponent.durationEstim.label:Expected duration (s)
KeyboardComponent.durationEstim.categ:Basic
KeyboardComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
KeyboardComponent.durationEstim.allowedVals:[]
KeyboardComponent.durationEstim.valType:code
KeyboardComponent.durationEstim.updates:None
KeyboardComponent.durationEstim.staticUpdater:None
KeyboardComponent.allowedKeys.default:'y','n','left','right','space'
KeyboardComponent.allowedKeys.val:'y','n','left','right','space'
KeyboardComponent.allowedKeys.allowedTypes:[]
KeyboardComponent.allowedKeys.allowedUpdates:['constant', 'set every repeat']
KeyboardComponent.allowedKeys.readOnly:False
KeyboardComponent.allowedKeys.label:Allowed keys
KeyboardComponent.allowedKeys.categ:Basic
KeyboardComponent.allowedKeys.hint:A comma-separated list of keys (with quotes), such as 'q','right','space','left'
KeyboardComponent.allowedKeys.allowedVals:[]
KeyboardComponent.allowedKeys.valType:code
KeyboardComponent.allowedKeys.updates:constant
KeyboardComponent.allowedKeys.staticUpdater:None
KeyboardComponent.discard previous.default:True
KeyboardComponent.discard previous.val:True
KeyboardComponent.discard previous.allowedTypes:[]
KeyboardComponent.discard previous.allowedUpdates:None
KeyboardComponent.discard previous.readOnly:False
KeyboardComponent.discard previous.label:Discard previous
KeyboardComponent.discard previous.categ:Basic
KeyboardComponent.discard previous.hint:Do you want to discard all responses occuring before the onset of this component?
KeyboardComponent.discard previous.allowedVals:[]
KeyboardComponent.discard previous.valType:bool
KeyboardComponent.discard previous.updates:constant
KeyboardComponent.discard previous.staticUpdater:None
KeyboardComponent.store.default:'last key'
KeyboardComponent.store.val:last key
KeyboardComponent.store.allowedTypes:[]
KeyboardComponent.store.allowedUpdates:None
KeyboardComponent.store.readOnly:False
KeyboardComponent.store.label:Store
KeyboardComponent.store.categ:Basic
KeyboardComponent.store.hint:Choose which (if any) responses to store at the end of a trial
KeyboardComponent.store.allowedVals:['last key', 'first key', 'all keys', 'nothing']
KeyboardComponent.store.valType:str
KeyboardComponent.store.updates:constant
KeyboardComponent.store.staticUpdater:None
KeyboardComponent.forceEndRoutine.default:True
KeyboardComponent.forceEndRoutine.val:True
KeyboardComponent.forceEndRoutine.allowedTypes:[]
KeyboardComponent.forceEndRoutine.allowedUpdates:None
KeyboardComponent.forceEndRoutine.readOnly:False
KeyboardComponent.forceEndRoutine.label:Force end of Routine
KeyboardComponent.forceEndRoutine.categ:Basic
KeyboardComponent.forceEndRoutine.hint:Should a response force the end of the Routine (e.g end the trial)?
KeyboardComponent.forceEndRoutine.allowedVals:[]
KeyboardComponent.forceEndRoutine.valType:bool
KeyboardComponent.forceEndRoutine.updates:constant
KeyboardComponent.forceEndRoutine.staticUpdater:None
KeyboardComponent.storeCorrect.default:False
KeyboardComponent.storeCorrect.val:False
KeyboardComponent.storeCorrect.allowedTypes:[]
KeyboardComponent.storeCorrect.allowedUpdates:None
KeyboardComponent.storeCorrect.readOnly:False
KeyboardComponent.storeCorrect.label:Store correct
KeyboardComponent.storeCorrect.categ:Basic
KeyboardComponent.storeCorrect.hint:Do you want to save the response as correct/incorrect?
KeyboardComponent.storeCorrect.allowedVals:[]
KeyboardComponent.storeCorrect.valType:bool
KeyboardComponent.storeCorrect.updates:constant
KeyboardComponent.storeCorrect.staticUpdater:None
KeyboardComponent.correctAns.default:''
KeyboardComponent.correctAns.val:
KeyboardComponent.correctAns.allowedTypes:[]
KeyboardComponent.correctAns.allowedUpdates:None
KeyboardComponent.correctAns.readOnly:False
KeyboardComponent.correctAns.label:Correct answer
KeyboardComponent.correctAns.categ:Basic
KeyboardComponent.correctAns.hint:What is the 'correct' key? Might be helpful to add a correctAns column and use $correctAns to compare to the key press.
KeyboardComponent.correctAns.allowedVals:[]
KeyboardComponent.correctAns.valType:str
KeyboardComponent.correctAns.updates:constant
KeyboardComponent.correctAns.staticUpdater:None
KeyboardComponent.syncScreenRefresh.default:True
KeyboardComponent.syncScreenRefresh.val:True
KeyboardComponent.syncScreenRefresh.allowedTypes:[]
KeyboardComponent.syncScreenRefresh.allowedUpdates:None
KeyboardComponent.syncScreenRefresh.readOnly:False
KeyboardComponent.syncScreenRefresh.label:sync RT with screen
KeyboardComponent.syncScreenRefresh.categ:Basic
KeyboardComponent.syncScreenRefresh.hint:A reaction time to a visual stimulus should be based on when the screen flipped
KeyboardComponent.syncScreenRefresh.allowedVals:[]
KeyboardComponent.syncScreenRefresh.valType:bool
KeyboardComponent.syncScreenRefresh.updates:constant
KeyboardComponent.syncScreenRefresh.staticUpdater:None
MicrophoneComponent.order:['name']
MicrophoneComponent.name.default:mic_1
MicrophoneComponent.name.val:mic_1
MicrophoneComponent.name.allowedTypes:[]
MicrophoneComponent.name.allowedUpdates:None
MicrophoneComponent.name.readOnly:False
MicrophoneComponent.name.label:Name
MicrophoneComponent.name.categ:Basic
MicrophoneComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
MicrophoneComponent.name.allowedVals:[]
MicrophoneComponent.name.valType:code
MicrophoneComponent.name.staticUpdater:None
MicrophoneComponent.startType.default:'time (s)'
MicrophoneComponent.startType.val:time (s)
MicrophoneComponent.startType.allowedTypes:[]
MicrophoneComponent.startType.allowedUpdates:None
MicrophoneComponent.startType.readOnly:False
MicrophoneComponent.startType.label:start type
MicrophoneComponent.startType.categ:Basic
MicrophoneComponent.startType.hint:How do you want to define your start point?
MicrophoneComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
MicrophoneComponent.startType.valType:str
MicrophoneComponent.startType.updates:None
MicrophoneComponent.startType.staticUpdater:None
MicrophoneComponent.stopType.default:'duration (s)'
MicrophoneComponent.stopType.val:duration (s)
MicrophoneComponent.stopType.allowedTypes:[]
MicrophoneComponent.stopType.allowedUpdates:None
MicrophoneComponent.stopType.readOnly:False
MicrophoneComponent.stopType.label:stop type
MicrophoneComponent.stopType.categ:Basic
MicrophoneComponent.stopType.hint:The duration of the recording in seconds; blank = 0 sec
MicrophoneComponent.stopType.allowedVals:['duration (s)']
MicrophoneComponent.stopType.valType:str
MicrophoneComponent.stopType.updates:None
MicrophoneComponent.stopType.staticUpdater:None
MicrophoneComponent.startVal.default:0.0
MicrophoneComponent.startVal.val:0.0
MicrophoneComponent.startVal.allowedTypes:[]
MicrophoneComponent.startVal.allowedUpdates:None
MicrophoneComponent.startVal.readOnly:False
MicrophoneComponent.startVal.label:Start
MicrophoneComponent.startVal.categ:Basic
MicrophoneComponent.startVal.hint:When does the component start?
MicrophoneComponent.startVal.allowedVals:[]
MicrophoneComponent.startVal.valType:code
MicrophoneComponent.startVal.updates:None
MicrophoneComponent.startVal.staticUpdater:None
MicrophoneComponent.stopVal.default:2.0
MicrophoneComponent.stopVal.val:2.0
MicrophoneComponent.stopVal.allowedTypes:[]
MicrophoneComponent.stopVal.allowedUpdates:[]
MicrophoneComponent.stopVal.readOnly:False
MicrophoneComponent.stopVal.label:Stop
MicrophoneComponent.stopVal.categ:Basic
MicrophoneComponent.stopVal.hint:When does the component end? (blank is endless)
MicrophoneComponent.stopVal.allowedVals:[]
MicrophoneComponent.stopVal.valType:code
MicrophoneComponent.stopVal.updates:constant
MicrophoneComponent.stopVal.staticUpdater:None
MicrophoneComponent.startEstim.default:
MicrophoneComponent.startEstim.val:
MicrophoneComponent.startEstim.allowedTypes:[]
MicrophoneComponent.startEstim.allowedUpdates:None
MicrophoneComponent.startEstim.readOnly:False
MicrophoneComponent.startEstim.label:Expected start (s)
MicrophoneComponent.startEstim.categ:Basic
MicrophoneComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
MicrophoneComponent.startEstim.allowedVals:[]
MicrophoneComponent.startEstim.valType:code
MicrophoneComponent.startEstim.updates:None
MicrophoneComponent.startEstim.staticUpdater:None
MicrophoneComponent.durationEstim.default:
MicrophoneComponent.durationEstim.val:
MicrophoneComponent.durationEstim.allowedTypes:[]
MicrophoneComponent.durationEstim.allowedUpdates:None
MicrophoneComponent.durationEstim.readOnly:False
MicrophoneComponent.durationEstim.label:Expected duration (s)
MicrophoneComponent.durationEstim.categ:Basic
MicrophoneComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
MicrophoneComponent.durationEstim.allowedVals:[]
MicrophoneComponent.durationEstim.valType:code
MicrophoneComponent.durationEstim.updates:None
MicrophoneComponent.durationEstim.staticUpdater:None
MicrophoneComponent.stereo.default:False
MicrophoneComponent.stereo.val:False
MicrophoneComponent.stereo.allowedTypes:[]
MicrophoneComponent.stereo.allowedUpdates:None
MicrophoneComponent.stereo.readOnly:False
MicrophoneComponent.stereo.label:Stereo
MicrophoneComponent.stereo.categ:Basic
MicrophoneComponent.stereo.hint:Record two channels (stereo) or one (mono, smaller file)
MicrophoneComponent.stereo.allowedVals:[]
MicrophoneComponent.stereo.valType:bool
MicrophoneComponent.stereo.updates:None
MicrophoneComponent.stereo.staticUpdater:None
MouseComponent.order:['name', 'forceEndRoutineOnPress', 'saveMouseState', 'timeRelativeTo', 'newClicksOnly', 'clickable', 'saveParamsClickable']
MouseComponent.name.default:mouse
MouseComponent.name.val:mouse
MouseComponent.name.allowedTypes:[]
MouseComponent.name.allowedUpdates:None
MouseComponent.name.readOnly:False
MouseComponent.name.label:Name
MouseComponent.name.categ:Basic
MouseComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
MouseComponent.name.allowedVals:[]
MouseComponent.name.valType:code
MouseComponent.name.staticUpdater:None
MouseComponent.startType.default:'time (s)'
MouseComponent.startType.val:time (s)
MouseComponent.startType.allowedTypes:[]
MouseComponent.startType.allowedUpdates:None
MouseComponent.startType.readOnly:False
MouseComponent.startType.label:start type
MouseComponent.startType.categ:Basic
MouseComponent.startType.hint:How do you want to define your start point?
MouseComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
MouseComponent.startType.valType:str
MouseComponent.startType.updates:None
MouseComponent.startType.staticUpdater:None
MouseComponent.stopType.default:'duration (s)'
MouseComponent.stopType.val:duration (s)
MouseComponent.stopType.allowedTypes:[]
MouseComponent.stopType.allowedUpdates:None
MouseComponent.stopType.readOnly:False
MouseComponent.stopType.label:stop type
MouseComponent.stopType.categ:Basic
MouseComponent.stopType.hint:How do you want to define your end point?
MouseComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
MouseComponent.stopType.valType:str
MouseComponent.stopType.updates:None
MouseComponent.stopType.staticUpdater:None
MouseComponent.startVal.default:0.0
MouseComponent.startVal.val:0.0
MouseComponent.startVal.allowedTypes:[]
MouseComponent.startVal.allowedUpdates:None
MouseComponent.startVal.readOnly:False
MouseComponent.startVal.label:Start
MouseComponent.startVal.categ:Basic
MouseComponent.startVal.hint:When does the component start?
MouseComponent.startVal.allowedVals:[]
MouseComponent.startVal.valType:code
MouseComponent.startVal.updates:None
MouseComponent.startVal.staticUpdater:None
MouseComponent.stopVal.default:1.0
MouseComponent.stopVal.val:1.0
MouseComponent.stopVal.allowedTypes:[]
MouseComponent.stopVal.allowedUpdates:[]
MouseComponent.stopVal.readOnly:False
MouseComponent.stopVal.label:Stop
MouseComponent.stopVal.categ:Basic
MouseComponent.stopVal.hint:When does the component end? (blank is endless)
MouseComponent.stopVal.allowedVals:[]
MouseComponent.stopVal.valType:code
MouseComponent.stopVal.updates:constant
MouseComponent.stopVal.staticUpdater:None
MouseComponent.startEstim.default:
MouseComponent.startEstim.val:
MouseComponent.startEstim.allowedTypes:[]
MouseComponent.startEstim.allowedUpdates:None
MouseComponent.startEstim.readOnly:False
MouseComponent.startEstim.label:Expected start (s)
MouseComponent.startEstim.categ:Basic
MouseComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
MouseComponent.startEstim.allowedVals:[]
MouseComponent.startEstim.valType:code
MouseComponent.startEstim.updates:None
MouseComponent.startEstim.staticUpdater:None
MouseComponent.durationEstim.default:
MouseComponent.durationEstim.val:
MouseComponent.durationEstim.allowedTypes:[]
MouseComponent.durationEstim.allowedUpdates:None
MouseComponent.durationEstim.readOnly:False
MouseComponent.durationEstim.label:Expected duration (s)
MouseComponent.durationEstim.categ:Basic
MouseComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
MouseComponent.durationEstim.allowedVals:[]
MouseComponent.durationEstim.valType:code
MouseComponent.durationEstim.updates:None
MouseComponent.durationEstim.staticUpdater:None
MouseComponent.saveMouseState.default:'final'
MouseComponent.saveMouseState.val:final
MouseComponent.saveMouseState.allowedTypes:[]
MouseComponent.saveMouseState.allowedUpdates:None
MouseComponent.saveMouseState.readOnly:False
MouseComponent.saveMouseState.label:Save mouse state
MouseComponent.saveMouseState.categ:Basic
MouseComponent.saveMouseState.hint:How often should the mouse state (x,y,buttons) be stored? On every video frame, every click or just at the end of the Routine?
MouseComponent.saveMouseState.allowedVals:['final', 'on click', 'every frame', 'never']
MouseComponent.saveMouseState.valType:str
MouseComponent.saveMouseState.updates:None
MouseComponent.saveMouseState.staticUpdater:None
MouseComponent.forceEndRoutineOnPress.default:'any click'
MouseComponent.forceEndRoutineOnPress.val:any click
MouseComponent.forceEndRoutineOnPress.allowedTypes:[]
MouseComponent.forceEndRoutineOnPress.allowedUpdates:None
MouseComponent.forceEndRoutineOnPress.readOnly:False
MouseComponent.forceEndRoutineOnPress.label:End Routine on press
MouseComponent.forceEndRoutineOnPress.categ:Basic
MouseComponent.forceEndRoutineOnPress.hint:Should a button press force the end of the routine (e.g end the trial)?
MouseComponent.forceEndRoutineOnPress.allowedVals:['never', 'any click', 'valid click']
MouseComponent.forceEndRoutineOnPress.valType:str
MouseComponent.forceEndRoutineOnPress.updates:constant
MouseComponent.forceEndRoutineOnPress.staticUpdater:None
MouseComponent.timeRelativeTo.default:'routine'
MouseComponent.timeRelativeTo.val:routine
MouseComponent.timeRelativeTo.allowedTypes:[]
MouseComponent.timeRelativeTo.allowedUpdates:None
MouseComponent.timeRelativeTo.readOnly:False
MouseComponent.timeRelativeTo.label:Time relative to
MouseComponent.timeRelativeTo.categ:Basic
MouseComponent.timeRelativeTo.hint:What should the values of mouse.time should be relative to?
MouseComponent.timeRelativeTo.allowedVals:['experiment', 'routine']
MouseComponent.timeRelativeTo.valType:str
MouseComponent.timeRelativeTo.updates:constant
MouseComponent.timeRelativeTo.staticUpdater:None
MouseComponent.newClicksOnly.default:True
MouseComponent.newClicksOnly.val:True
MouseComponent.newClicksOnly.allowedTypes:[]
MouseComponent.newClicksOnly.allowedUpdates:None
MouseComponent.newClicksOnly.readOnly:False
MouseComponent.newClicksOnly.label:New clicks only
MouseComponent.newClicksOnly.categ:Basic
MouseComponent.newClicksOnly.hint:If the mouse button is already down when we startchecking then wait for it to be released beforerecording as a new click.
MouseComponent.newClicksOnly.allowedVals:[]
MouseComponent.newClicksOnly.valType:bool
MouseComponent.newClicksOnly.updates:constant
MouseComponent.newClicksOnly.staticUpdater:None
MouseComponent.clickable.default:
MouseComponent.clickable.val:
MouseComponent.clickable.allowedTypes:[]
MouseComponent.clickable.allowedUpdates:None
MouseComponent.clickable.readOnly:False
MouseComponent.clickable.label:Clickable stimuli
MouseComponent.clickable.categ:Basic
MouseComponent.clickable.hint:A comma-separated list of your stimulus names that can be "clicked" by the participant. e.g. target, foil
MouseComponent.clickable.allowedVals:[]
MouseComponent.clickable.valType:code
MouseComponent.clickable.updates:constant
MouseComponent.clickable.staticUpdater:None
MouseComponent.saveParamsClickable.default:name,
MouseComponent.saveParamsClickable.val:name,
MouseComponent.saveParamsClickable.allowedTypes:[]
MouseComponent.saveParamsClickable.allowedUpdates:[]
MouseComponent.saveParamsClickable.readOnly:False
MouseComponent.saveParamsClickable.label:Store params for clicked
MouseComponent.saveParamsClickable.categ:Basic
MouseComponent.saveParamsClickable.hint:The params (e.g. name, text), for which you want to store the current value, for the stimulus that was"clicked" by the mouse. Make sure that all the clickable objects have all these params.
MouseComponent.saveParamsClickable.allowedVals:[]
MouseComponent.saveParamsClickable.valType:code
MouseComponent.saveParamsClickable.updates:constant
MouseComponent.saveParamsClickable.staticUpdater:None
MovieComponent.order:['forceEndRoutine']
MovieComponent.name.default:movie
MovieComponent.name.val:movie
MovieComponent.name.allowedTypes:[]
MovieComponent.name.allowedUpdates:None
MovieComponent.name.readOnly:False
MovieComponent.name.label:Name
MovieComponent.name.categ:Basic
MovieComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
MovieComponent.name.allowedVals:[]
MovieComponent.name.valType:code
MovieComponent.name.staticUpdater:None
MovieComponent.startType.default:'time (s)'
MovieComponent.startType.val:time (s)
MovieComponent.startType.allowedTypes:[]
MovieComponent.startType.allowedUpdates:None
MovieComponent.startType.readOnly:False
MovieComponent.startType.label:start type
MovieComponent.startType.categ:Basic
MovieComponent.startType.hint:How do you want to define your start point?
MovieComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
MovieComponent.startType.valType:str
MovieComponent.startType.updates:None
MovieComponent.startType.staticUpdater:None
MovieComponent.stopType.default:'duration (s)'
MovieComponent.stopType.val:duration (s)
MovieComponent.stopType.allowedTypes:[]
MovieComponent.stopType.allowedUpdates:None
MovieComponent.stopType.readOnly:False
MovieComponent.stopType.label:stop type
MovieComponent.stopType.categ:Basic
MovieComponent.stopType.hint:How do you want to define your end point?
MovieComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
MovieComponent.stopType.valType:str
MovieComponent.stopType.updates:None
MovieComponent.stopType.staticUpdater:None
MovieComponent.startVal.default:0.0
MovieComponent.startVal.val:0.0
MovieComponent.startVal.allowedTypes:[]
MovieComponent.startVal.allowedUpdates:None
MovieComponent.startVal.readOnly:False
MovieComponent.startVal.label:Start
MovieComponent.startVal.categ:Basic
MovieComponent.startVal.hint:When does the component start?
MovieComponent.startVal.allowedVals:[]
MovieComponent.startVal.valType:code
MovieComponent.startVal.updates:None
MovieComponent.startVal.staticUpdater:None
MovieComponent.stopVal.default:1.0
MovieComponent.stopVal.val:1.0
MovieComponent.stopVal.allowedTypes:[]
MovieComponent.stopVal.allowedUpdates:[]
MovieComponent.stopVal.readOnly:False
MovieComponent.stopVal.label:Stop
MovieComponent.stopVal.categ:Basic
MovieComponent.stopVal.hint:When does the component end? (blank to use the duration of the media)
MovieComponent.stopVal.allowedVals:[]
MovieComponent.stopVal.valType:code
MovieComponent.stopVal.updates:constant
MovieComponent.stopVal.staticUpdater:None
MovieComponent.startEstim.default:
MovieComponent.startEstim.val:
MovieComponent.startEstim.allowedTypes:[]
MovieComponent.startEstim.allowedUpdates:None
MovieComponent.startEstim.readOnly:False
MovieComponent.startEstim.label:Expected start (s)
MovieComponent.startEstim.categ:Basic
MovieComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
MovieComponent.startEstim.allowedVals:[]
MovieComponent.startEstim.valType:code
MovieComponent.startEstim.updates:None
MovieComponent.startEstim.staticUpdater:None
MovieComponent.durationEstim.default:
MovieComponent.durationEstim.val:
MovieComponent.durationEstim.allowedTypes:[]
MovieComponent.durationEstim.allowedUpdates:None
MovieComponent.durationEstim.readOnly:False
MovieComponent.durationEstim.label:Expected duration (s)
MovieComponent.durationEstim.categ:Basic
MovieComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
MovieComponent.durationEstim.allowedVals:[]
MovieComponent.durationEstim.valType:code
MovieComponent.durationEstim.updates:None
MovieComponent.durationEstim.staticUpdater:None
MovieComponent.units.default:'from exp settings'
MovieComponent.units.val:from exp settings
MovieComponent.units.allowedTypes:[]
MovieComponent.units.allowedUpdates:None
MovieComponent.units.readOnly:False
MovieComponent.units.label:Units
MovieComponent.units.categ:Basic
MovieComponent.units.hint:Units of dimensions for this stimulus
MovieComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
MovieComponent.units.valType:str
MovieComponent.units.updates:None
MovieComponent.units.staticUpdater:None
MovieComponent.opacity.default:1
MovieComponent.opacity.val:1
MovieComponent.opacity.allowedTypes:[]
MovieComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
MovieComponent.opacity.readOnly:False
MovieComponent.opacity.label:Opacity
MovieComponent.opacity.categ:Basic
MovieComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
MovieComponent.opacity.allowedVals:[]
MovieComponent.opacity.valType:code
MovieComponent.opacity.updates:constant
MovieComponent.opacity.staticUpdater:None
MovieComponent.pos.default:(0, 0)
MovieComponent.pos.val:(0, 0)
MovieComponent.pos.allowedTypes:[]
MovieComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
MovieComponent.pos.readOnly:False
MovieComponent.pos.label:Position [x,y]
MovieComponent.pos.categ:Basic
MovieComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
MovieComponent.pos.allowedVals:[]
MovieComponent.pos.valType:code
MovieComponent.pos.updates:constant
MovieComponent.pos.staticUpdater:None
MovieComponent.size.default:
MovieComponent.size.val:
MovieComponent.size.allowedTypes:[]
MovieComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
MovieComponent.size.readOnly:False
MovieComponent.size.label:Size [w,h]
MovieComponent.size.categ:Basic
MovieComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
MovieComponent.size.allowedVals:[]
MovieComponent.size.valType:code
MovieComponent.size.updates:constant
MovieComponent.size.staticUpdater:None
MovieComponent.ori.default:0
MovieComponent.ori.val:0
MovieComponent.ori.allowedTypes:[]
MovieComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
MovieComponent.ori.readOnly:False
MovieComponent.ori.label:Orientation
MovieComponent.ori.categ:Basic
MovieComponent.ori.hint:Orientation of this stimulus (in deg)
MovieComponent.ori.allowedVals:[]
MovieComponent.ori.valType:code
MovieComponent.ori.updates:constant
MovieComponent.ori.staticUpdater:None
MovieComponent.movie.default:''
MovieComponent.movie.val:
MovieComponent.movie.allowedTypes:[]
MovieComponent.movie.allowedUpdates:['constant', 'set every repeat']
MovieComponent.movie.readOnly:False
MovieComponent.movie.label:Movie file
MovieComponent.movie.categ:Basic
MovieComponent.movie.hint:A filename for the movie (including path)
MovieComponent.movie.allowedVals:[]
MovieComponent.movie.valType:str
MovieComponent.movie.updates:constant
MovieComponent.movie.staticUpdater:None
MovieComponent.backend.default:'moviepy'
MovieComponent.backend.val:moviepy
MovieComponent.backend.allowedTypes:[]
MovieComponent.backend.allowedUpdates:None
MovieComponent.backend.readOnly:False
MovieComponent.backend.label:backend
MovieComponent.backend.categ:Basic
MovieComponent.backend.hint:What underlying lib to use for loading movies
MovieComponent.backend.allowedVals:['moviepy', 'avbin', 'opencv']
MovieComponent.backend.valType:str
MovieComponent.backend.updates:None
MovieComponent.backend.staticUpdater:None
MovieComponent.No audio.default:False
MovieComponent.No audio.val:False
MovieComponent.No audio.allowedTypes:[]
MovieComponent.No audio.allowedUpdates:None
MovieComponent.No audio.readOnly:False
MovieComponent.No audio.label:No audio
MovieComponent.No audio.categ:Basic
MovieComponent.No audio.hint:Prevent the audio stream from being loaded/processed (moviepy and opencv only)
MovieComponent.No audio.allowedVals:[]
MovieComponent.No audio.valType:bool
MovieComponent.No audio.updates:None
MovieComponent.No audio.staticUpdater:None
MovieComponent.forceEndRoutine.default:False
MovieComponent.forceEndRoutine.val:False
MovieComponent.forceEndRoutine.allowedTypes:[]
MovieComponent.forceEndRoutine.allowedUpdates:[]
MovieComponent.forceEndRoutine.readOnly:False
MovieComponent.forceEndRoutine.label:Force end of Routine
MovieComponent.forceEndRoutine.categ:Basic
MovieComponent.forceEndRoutine.hint:Should the end of the movie cause the end of the routine (e.g. trial)?
MovieComponent.forceEndRoutine.allowedVals:[]
MovieComponent.forceEndRoutine.valType:bool
MovieComponent.forceEndRoutine.updates:constant
MovieComponent.forceEndRoutine.staticUpdater:None
NoiseStimComponent.order:['tex', 'mask']
NoiseStimComponent.name.default:noise
NoiseStimComponent.name.val:noise
NoiseStimComponent.name.allowedTypes:[]
NoiseStimComponent.name.allowedUpdates:None
NoiseStimComponent.name.readOnly:False
NoiseStimComponent.name.label:Name
NoiseStimComponent.name.categ:Basic
NoiseStimComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
NoiseStimComponent.name.allowedVals:[]
NoiseStimComponent.name.valType:code
NoiseStimComponent.name.staticUpdater:None
NoiseStimComponent.startType.default:'time (s)'
NoiseStimComponent.startType.val:time (s)
NoiseStimComponent.startType.allowedTypes:[]
NoiseStimComponent.startType.allowedUpdates:None
NoiseStimComponent.startType.readOnly:False
NoiseStimComponent.startType.label:start type
NoiseStimComponent.startType.categ:Basic
NoiseStimComponent.startType.hint:How do you want to define your start point?
NoiseStimComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
NoiseStimComponent.startType.valType:str
NoiseStimComponent.startType.updates:None
NoiseStimComponent.startType.staticUpdater:None
NoiseStimComponent.stopType.default:'duration (s)'
NoiseStimComponent.stopType.val:duration (s)
NoiseStimComponent.stopType.allowedTypes:[]
NoiseStimComponent.stopType.allowedUpdates:None
NoiseStimComponent.stopType.readOnly:False
NoiseStimComponent.stopType.label:stop type
NoiseStimComponent.stopType.categ:Basic
NoiseStimComponent.stopType.hint:How do you want to define your end point?
NoiseStimComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
NoiseStimComponent.stopType.valType:str
NoiseStimComponent.stopType.updates:None
NoiseStimComponent.stopType.staticUpdater:None
NoiseStimComponent.startVal.default:0.0
NoiseStimComponent.startVal.val:0.0
NoiseStimComponent.startVal.allowedTypes:[]
NoiseStimComponent.startVal.allowedUpdates:None
NoiseStimComponent.startVal.readOnly:False
NoiseStimComponent.startVal.label:Start
NoiseStimComponent.startVal.categ:Basic
NoiseStimComponent.startVal.hint:When does the component start?
NoiseStimComponent.startVal.allowedVals:[]
NoiseStimComponent.startVal.valType:code
NoiseStimComponent.startVal.updates:None
NoiseStimComponent.startVal.staticUpdater:None
NoiseStimComponent.stopVal.default:1.0
NoiseStimComponent.stopVal.val:1.0
NoiseStimComponent.stopVal.allowedTypes:[]
NoiseStimComponent.stopVal.allowedUpdates:[]
NoiseStimComponent.stopVal.readOnly:False
NoiseStimComponent.stopVal.label:Stop
NoiseStimComponent.stopVal.categ:Basic
NoiseStimComponent.stopVal.hint:When does the component end? (blank is endless)
NoiseStimComponent.stopVal.allowedVals:[]
NoiseStimComponent.stopVal.valType:code
NoiseStimComponent.stopVal.updates:constant
NoiseStimComponent.stopVal.staticUpdater:None
NoiseStimComponent.startEstim.default:
NoiseStimComponent.startEstim.val:
NoiseStimComponent.startEstim.allowedTypes:[]
NoiseStimComponent.startEstim.allowedUpdates:None
NoiseStimComponent.startEstim.readOnly:False
NoiseStimComponent.startEstim.label:Expected start (s)
NoiseStimComponent.startEstim.categ:Basic
NoiseStimComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
NoiseStimComponent.startEstim.allowedVals:[]
NoiseStimComponent.startEstim.valType:code
NoiseStimComponent.startEstim.updates:None
NoiseStimComponent.startEstim.staticUpdater:None
NoiseStimComponent.durationEstim.default:
NoiseStimComponent.durationEstim.val:
NoiseStimComponent.durationEstim.allowedTypes:[]
NoiseStimComponent.durationEstim.allowedUpdates:None
NoiseStimComponent.durationEstim.readOnly:False
NoiseStimComponent.durationEstim.label:Expected duration (s)
NoiseStimComponent.durationEstim.categ:Basic
NoiseStimComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
NoiseStimComponent.durationEstim.allowedVals:[]
NoiseStimComponent.durationEstim.valType:code
NoiseStimComponent.durationEstim.updates:None
NoiseStimComponent.durationEstim.staticUpdater:None
NoiseStimComponent.units.default:'from exp settings'
NoiseStimComponent.units.val:from exp settings
NoiseStimComponent.units.allowedTypes:[]
NoiseStimComponent.units.allowedUpdates:None
NoiseStimComponent.units.readOnly:False
NoiseStimComponent.units.label:Units
NoiseStimComponent.units.categ:Basic
NoiseStimComponent.units.hint:Units of dimensions for this stimulus
NoiseStimComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
NoiseStimComponent.units.valType:str
NoiseStimComponent.units.updates:None
NoiseStimComponent.units.staticUpdater:None
NoiseStimComponent.color.default:[1,1,1]
NoiseStimComponent.color.val:$[1,1,1]
NoiseStimComponent.color.allowedTypes:[]
NoiseStimComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.color.readOnly:False
NoiseStimComponent.color.label:Color
NoiseStimComponent.color.categ:Basic
NoiseStimComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
NoiseStimComponent.color.allowedVals:[]
NoiseStimComponent.color.valType:str
NoiseStimComponent.color.updates:constant
NoiseStimComponent.color.staticUpdater:None
NoiseStimComponent.opacity.default:1
NoiseStimComponent.opacity.val:1
NoiseStimComponent.opacity.allowedTypes:[]
NoiseStimComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.opacity.readOnly:False
NoiseStimComponent.opacity.label:Opacity
NoiseStimComponent.opacity.categ:Basic
NoiseStimComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
NoiseStimComponent.opacity.allowedVals:[]
NoiseStimComponent.opacity.valType:code
NoiseStimComponent.opacity.updates:constant
NoiseStimComponent.opacity.staticUpdater:None
NoiseStimComponent.colorSpace.default:'rgb'
NoiseStimComponent.colorSpace.val:rgb
NoiseStimComponent.colorSpace.allowedTypes:[]
NoiseStimComponent.colorSpace.allowedUpdates:None
NoiseStimComponent.colorSpace.readOnly:False
NoiseStimComponent.colorSpace.label:Color space
NoiseStimComponent.colorSpace.categ:Basic
NoiseStimComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
NoiseStimComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
NoiseStimComponent.colorSpace.valType:str
NoiseStimComponent.colorSpace.updates:constant
NoiseStimComponent.colorSpace.staticUpdater:None
NoiseStimComponent.pos.default:(0, 0)
NoiseStimComponent.pos.val:(0, 0)
NoiseStimComponent.pos.allowedTypes:[]
NoiseStimComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.pos.readOnly:False
NoiseStimComponent.pos.label:Position [x,y]
NoiseStimComponent.pos.categ:Basic
NoiseStimComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
NoiseStimComponent.pos.allowedVals:[]
NoiseStimComponent.pos.valType:code
NoiseStimComponent.pos.updates:constant
NoiseStimComponent.pos.staticUpdater:None
NoiseStimComponent.size.default:(0.5, 0.5)
NoiseStimComponent.size.val:(0.5, 0.5)
NoiseStimComponent.size.allowedTypes:[]
NoiseStimComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.size.readOnly:False
NoiseStimComponent.size.label:Size [w,h]
NoiseStimComponent.size.categ:Basic
NoiseStimComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
NoiseStimComponent.size.allowedVals:[]
NoiseStimComponent.size.valType:code
NoiseStimComponent.size.updates:constant
NoiseStimComponent.size.staticUpdater:None
NoiseStimComponent.ori.default:0
NoiseStimComponent.ori.val:0
NoiseStimComponent.ori.allowedTypes:[]
NoiseStimComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.ori.readOnly:False
NoiseStimComponent.ori.label:Orientation
NoiseStimComponent.ori.categ:Advanced
NoiseStimComponent.ori.hint:Orientation of this stimulus (in deg)
NoiseStimComponent.ori.allowedVals:[]
NoiseStimComponent.ori.valType:code
NoiseStimComponent.ori.updates:constant
NoiseStimComponent.ori.staticUpdater:None
NoiseStimComponent.noiseImage.default:'None'
NoiseStimComponent.noiseImage.val:None
NoiseStimComponent.noiseImage.allowedTypes:[]
NoiseStimComponent.noiseImage.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseImage.readOnly:False
NoiseStimComponent.noiseImage.label:Image from which to derive noise spectrum
NoiseStimComponent.noiseImage.categ:Image noise
NoiseStimComponent.noiseImage.hint:An image from which to derive the frequency spectrum for the noise. Give filename (including path)
NoiseStimComponent.noiseImage.allowedVals:[]
NoiseStimComponent.noiseImage.valType:str
NoiseStimComponent.noiseImage.updates:constant
NoiseStimComponent.noiseImage.staticUpdater:None
NoiseStimComponent.mask.default:'None'
NoiseStimComponent.mask.val:None
NoiseStimComponent.mask.allowedTypes:[]
NoiseStimComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.mask.readOnly:False
NoiseStimComponent.mask.label:Mask
NoiseStimComponent.mask.categ:Advanced
NoiseStimComponent.mask.hint:An image to define the alpha mask (ie shape)- gauss, circle... or a filename (including path)
NoiseStimComponent.mask.allowedVals:[]
NoiseStimComponent.mask.valType:str
NoiseStimComponent.mask.updates:constant
NoiseStimComponent.mask.staticUpdater:None
NoiseStimComponent.contrast.default:1.0
NoiseStimComponent.contrast.val:1.0
NoiseStimComponent.contrast.allowedTypes:[]
NoiseStimComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.contrast.readOnly:False
NoiseStimComponent.contrast.label:Contrast
NoiseStimComponent.contrast.categ:Advanced
NoiseStimComponent.contrast.hint:Michaelson contrast of the image
NoiseStimComponent.contrast.allowedVals:[]
NoiseStimComponent.contrast.valType:code
NoiseStimComponent.contrast.updates:constant
NoiseStimComponent.contrast.staticUpdater:None
NoiseStimComponent.sf.default:None
NoiseStimComponent.sf.val:None
NoiseStimComponent.sf.allowedTypes:[]
NoiseStimComponent.sf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.sf.readOnly:False
NoiseStimComponent.sf.label:Final spatial frequency
NoiseStimComponent.sf.categ:Advanced
NoiseStimComponent.sf.hint:Final spatial frequency of image in 1 or 2 dimensions, e.g. 4 or [2,3] use None to set to 1 cycle per unit length or 1 cycle per image if units=pix
NoiseStimComponent.sf.allowedVals:[]
NoiseStimComponent.sf.valType:code
NoiseStimComponent.sf.updates:constant
NoiseStimComponent.sf.staticUpdater:None
NoiseStimComponent.phase.default:0.0
NoiseStimComponent.phase.val:0.0
NoiseStimComponent.phase.allowedTypes:[]
NoiseStimComponent.phase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.phase.readOnly:False
NoiseStimComponent.phase.label:Phase (in cycles)
NoiseStimComponent.phase.categ:Advanced
NoiseStimComponent.phase.hint:Spatial positioning of the image  (wraps in range 0-1.0)
NoiseStimComponent.phase.allowedVals:[]
NoiseStimComponent.phase.valType:code
NoiseStimComponent.phase.updates:constant
NoiseStimComponent.phase.staticUpdater:None
NoiseStimComponent.texture resolution.default:128
NoiseStimComponent.texture resolution.val:128
NoiseStimComponent.texture resolution.allowedTypes:[]
NoiseStimComponent.texture resolution.allowedUpdates:[]
NoiseStimComponent.texture resolution.readOnly:False
NoiseStimComponent.texture resolution.label:Texture resolution
NoiseStimComponent.texture resolution.categ:Advanced
NoiseStimComponent.texture resolution.hint:Resolution of the texture for standard ones such as sin, sqr etc. For most cases a value of 256 pixels will suffice
NoiseStimComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
NoiseStimComponent.texture resolution.valType:code
NoiseStimComponent.texture resolution.updates:constant
NoiseStimComponent.texture resolution.staticUpdater:None
NoiseStimComponent.interpolate.default:'nearest'
NoiseStimComponent.interpolate.val:nearest
NoiseStimComponent.interpolate.allowedTypes:[]
NoiseStimComponent.interpolate.allowedUpdates:[]
NoiseStimComponent.interpolate.readOnly:False
NoiseStimComponent.interpolate.label:Interpolate
NoiseStimComponent.interpolate.categ:Advanced
NoiseStimComponent.interpolate.hint:How should the image be interpolated if/when rescaled
NoiseStimComponent.interpolate.allowedVals:['linear', 'nearest']
NoiseStimComponent.interpolate.valType:str
NoiseStimComponent.interpolate.updates:constant
NoiseStimComponent.interpolate.staticUpdater:None
NoiseStimComponent.noiseType.default:'Binary'
NoiseStimComponent.noiseType.val:Binary
NoiseStimComponent.noiseType.allowedTypes:[]
NoiseStimComponent.noiseType.allowedUpdates:[]
NoiseStimComponent.noiseType.readOnly:False
NoiseStimComponent.noiseType.label:Type of noise
NoiseStimComponent.noiseType.categ: Noise
NoiseStimComponent.noiseType.hint:Type of noise (Binary, Normal, Gabor, Isotropic, White, Coloured, Filtered, Image)
NoiseStimComponent.noiseType.allowedVals:['Binary', 'Normal', 'Uniform', 'Gabor', 'Isotropic', 'White', 'Filtered', 'Image']
NoiseStimComponent.noiseType.valType:str
NoiseStimComponent.noiseType.updates:constant
NoiseStimComponent.noiseType.staticUpdater:None
NoiseStimComponent.noiseElementSize.default:0.0625
NoiseStimComponent.noiseElementSize.val:0.0625
NoiseStimComponent.noiseElementSize.allowedTypes:[]
NoiseStimComponent.noiseElementSize.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseElementSize.readOnly:False
NoiseStimComponent.noiseElementSize.label:Noise element size for pixelated noise
NoiseStimComponent.noiseElementSize.categ:Binary/Normal/Uniform
NoiseStimComponent.noiseElementSize.hint:(Binary, Normal an Uniform only) Size of noise elements
NoiseStimComponent.noiseElementSize.allowedVals:[]
NoiseStimComponent.noiseElementSize.valType:code
NoiseStimComponent.noiseElementSize.updates:constant
NoiseStimComponent.noiseElementSize.staticUpdater:None
NoiseStimComponent.noiseBaseSf.default:8.0
NoiseStimComponent.noiseBaseSf.val:8.0
NoiseStimComponent.noiseBaseSf.allowedTypes:[]
NoiseStimComponent.noiseBaseSf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseBaseSf.readOnly:False
NoiseStimComponent.noiseBaseSf.label:Base spatial frequency
NoiseStimComponent.noiseBaseSf.categ:Gabor/Isotropic
NoiseStimComponent.noiseBaseSf.hint:Base spatial frequency
NoiseStimComponent.noiseBaseSf.allowedVals:[]
NoiseStimComponent.noiseBaseSf.valType:code
NoiseStimComponent.noiseBaseSf.updates:constant
NoiseStimComponent.noiseBaseSf.staticUpdater:None
NoiseStimComponent.noiseBW.default:1
NoiseStimComponent.noiseBW.val:1
NoiseStimComponent.noiseBW.allowedTypes:[]
NoiseStimComponent.noiseBW.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseBW.readOnly:False
NoiseStimComponent.noiseBW.label:Spatial frequency bandwidth
NoiseStimComponent.noiseBW.categ:Gabor/Isotropic
NoiseStimComponent.noiseBW.hint:Spatial frequency bandwidth in octaves - Full width half height
NoiseStimComponent.noiseBW.allowedVals:[]
NoiseStimComponent.noiseBW.valType:code
NoiseStimComponent.noiseBW.updates:constant
NoiseStimComponent.noiseBW.staticUpdater:None
NoiseStimComponent.noiseBWO.default:1
NoiseStimComponent.noiseBWO.val:1
NoiseStimComponent.noiseBWO.allowedTypes:[]
NoiseStimComponent.noiseBWO.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseBWO.readOnly:False
NoiseStimComponent.noiseBWO.label:Orientation bandwidth for Gabor noise
NoiseStimComponent.noiseBWO.categ:Gabor/Isotropic
NoiseStimComponent.noiseBWO.hint:Orientation bandwidth in degrees (Gabor only) - Full width half height
NoiseStimComponent.noiseBWO.allowedVals:[]
NoiseStimComponent.noiseBWO.valType:code
NoiseStimComponent.noiseBWO.updates:constant
NoiseStimComponent.noiseBWO.staticUpdater:None
NoiseStimComponent.noiseFractalPower.default:0.0
NoiseStimComponent.noiseFractalPower.val:0.0
NoiseStimComponent.noiseFractalPower.allowedTypes:[]
NoiseStimComponent.noiseFractalPower.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseFractalPower.readOnly:False
NoiseStimComponent.noiseFractalPower.label:Skew in frequency spectrum
NoiseStimComponent.noiseFractalPower.categ:Filtered
NoiseStimComponent.noiseFractalPower.hint:Exponent for spectral slope (A=f^Exponent) of noise negative exponents look nice. -1='pink noise', 0='white noise' (changes the spatial frequency spectrum - does not make the noise colourful)
NoiseStimComponent.noiseFractalPower.allowedVals:[]
NoiseStimComponent.noiseFractalPower.valType:code
NoiseStimComponent.noiseFractalPower.updates:constant
NoiseStimComponent.noiseFractalPower.staticUpdater:None
NoiseStimComponent.noiseFilterOrder.default:0.0
NoiseStimComponent.noiseFilterOrder.val:0.0
NoiseStimComponent.noiseFilterOrder.allowedTypes:[]
NoiseStimComponent.noiseFilterOrder.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseFilterOrder.readOnly:False
NoiseStimComponent.noiseFilterOrder.label:Order of filter
NoiseStimComponent.noiseFilterOrder.categ:Filtered
NoiseStimComponent.noiseFilterOrder.hint:Order of filter - higher = steeper fall off, zero = no filter
NoiseStimComponent.noiseFilterOrder.allowedVals:[]
NoiseStimComponent.noiseFilterOrder.valType:code
NoiseStimComponent.noiseFilterOrder.updates:constant
NoiseStimComponent.noiseFilterOrder.staticUpdater:None
NoiseStimComponent.noiseFilterUpper.default:8.0
NoiseStimComponent.noiseFilterUpper.val:8.0
NoiseStimComponent.noiseFilterUpper.allowedTypes:[]
NoiseStimComponent.noiseFilterUpper.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseFilterUpper.readOnly:False
NoiseStimComponent.noiseFilterUpper.label:Upper cut off frequency
NoiseStimComponent.noiseFilterUpper.categ:Filtered
NoiseStimComponent.noiseFilterUpper.hint:Upper cutoff frequency
NoiseStimComponent.noiseFilterUpper.allowedVals:[]
NoiseStimComponent.noiseFilterUpper.valType:code
NoiseStimComponent.noiseFilterUpper.updates:constant
NoiseStimComponent.noiseFilterUpper.staticUpdater:None
NoiseStimComponent.noiseFilterLower.default:1.0
NoiseStimComponent.noiseFilterLower.val:1.0
NoiseStimComponent.noiseFilterLower.allowedTypes:[]
NoiseStimComponent.noiseFilterLower.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseFilterLower.readOnly:False
NoiseStimComponent.noiseFilterLower.label:Lower cut off frequency
NoiseStimComponent.noiseFilterLower.categ:Filtered
NoiseStimComponent.noiseFilterLower.hint:Lower cutoff frequency
NoiseStimComponent.noiseFilterLower.allowedVals:[]
NoiseStimComponent.noiseFilterLower.valType:code
NoiseStimComponent.noiseFilterLower.updates:constant
NoiseStimComponent.noiseFilterLower.staticUpdater:None
NoiseStimComponent.noiseClip.default:3.0
NoiseStimComponent.noiseClip.val:3.0
NoiseStimComponent.noiseClip.allowedTypes:[]
NoiseStimComponent.noiseClip.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseClip.readOnly:False
NoiseStimComponent.noiseClip.label:Number of standard deviations at which to clip noise
NoiseStimComponent.noiseClip.categ: Noise
NoiseStimComponent.noiseClip.hint:Truncate high and low values beyound stated standard deviations from mean (not used for binary or uniform noise; scales rather than clips normal noise). The higher this is the lower the final RMS contrast. If low noise may appear binary
NoiseStimComponent.noiseClip.allowedVals:[]
NoiseStimComponent.noiseClip.valType:code
NoiseStimComponent.noiseClip.updates:constant
NoiseStimComponent.noiseClip.staticUpdater:None
NoiseStimComponent.noiseNewSample.default:'None'
NoiseStimComponent.noiseNewSample.val:None
NoiseStimComponent.noiseNewSample.allowedTypes:[]
NoiseStimComponent.noiseNewSample.allowedUpdates:[]
NoiseStimComponent.noiseNewSample.readOnly:False
NoiseStimComponent.noiseNewSample.label:How to update noise sample
NoiseStimComponent.noiseNewSample.categ: Noise
NoiseStimComponent.noiseNewSample.hint:How to update noise if not otherwise required by other changes (none, repeat, N-frames, Seconds)
NoiseStimComponent.noiseNewSample.allowedVals:['None', 'Repeat', 'N-frames', 'Seconds']
NoiseStimComponent.noiseNewSample.valType:str
NoiseStimComponent.noiseNewSample.updates:constant
NoiseStimComponent.noiseNewSample.staticUpdater:None
NoiseStimComponent.noiseNewSampleWhen.default:'1'
NoiseStimComponent.noiseNewSampleWhen.val:1
NoiseStimComponent.noiseNewSampleWhen.allowedTypes:[]
NoiseStimComponent.noiseNewSampleWhen.allowedUpdates:[]
NoiseStimComponent.noiseNewSampleWhen.readOnly:False
NoiseStimComponent.noiseNewSampleWhen.label:When to update noise sample
NoiseStimComponent.noiseNewSampleWhen.categ: Noise
NoiseStimComponent.noiseNewSampleWhen.hint:How often to update noise (in frames or seconds) - can be a variable, ignored if any noise characteristic is updating on every frame
NoiseStimComponent.noiseNewSampleWhen.allowedVals:[]
NoiseStimComponent.noiseNewSampleWhen.valType:str
NoiseStimComponent.noiseNewSampleWhen.updates:constant
NoiseStimComponent.noiseNewSampleWhen.staticUpdater:None
NoiseStimComponent.blendmode.default:'avg'
NoiseStimComponent.blendmode.val:avg
NoiseStimComponent.blendmode.allowedTypes:[]
NoiseStimComponent.blendmode.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.blendmode.readOnly:False
NoiseStimComponent.blendmode.label:OpenGL blend mode
NoiseStimComponent.blendmode.categ:Basic
NoiseStimComponent.blendmode.hint:OpenGL Blendmode [avg, add (avg is most common mode in PsychoPy, add is used if you want to generate the sum of two components)]
NoiseStimComponent.blendmode.allowedVals:['avg', 'add']
NoiseStimComponent.blendmode.valType:str
NoiseStimComponent.blendmode.updates:constant
NoiseStimComponent.blendmode.staticUpdater:None
ParallelOutComponent.order:['address', 'startData', 'stopData']
ParallelOutComponent.name.default:p_port
ParallelOutComponent.name.val:p_port
ParallelOutComponent.name.allowedTypes:[]
ParallelOutComponent.name.allowedUpdates:None
ParallelOutComponent.name.readOnly:False
ParallelOutComponent.name.label:Name
ParallelOutComponent.name.categ:Basic
ParallelOutComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
ParallelOutComponent.name.allowedVals:[]
ParallelOutComponent.name.valType:code
ParallelOutComponent.name.staticUpdater:None
ParallelOutComponent.startType.default:'time (s)'
ParallelOutComponent.startType.val:time (s)
ParallelOutComponent.startType.allowedTypes:[]
ParallelOutComponent.startType.allowedUpdates:None
ParallelOutComponent.startType.readOnly:False
ParallelOutComponent.startType.label:start type
ParallelOutComponent.startType.categ:Basic
ParallelOutComponent.startType.hint:How do you want to define your start point?
ParallelOutComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ParallelOutComponent.startType.valType:str
ParallelOutComponent.startType.updates:None
ParallelOutComponent.startType.staticUpdater:None
ParallelOutComponent.stopType.default:'duration (s)'
ParallelOutComponent.stopType.val:duration (s)
ParallelOutComponent.stopType.allowedTypes:[]
ParallelOutComponent.stopType.allowedUpdates:None
ParallelOutComponent.stopType.readOnly:False
ParallelOutComponent.stopType.label:stop type
ParallelOutComponent.stopType.categ:Basic
ParallelOutComponent.stopType.hint:How do you want to define your end point?
ParallelOutComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ParallelOutComponent.stopType.valType:str
ParallelOutComponent.stopType.updates:None
ParallelOutComponent.stopType.staticUpdater:None
ParallelOutComponent.startVal.default:0.0
ParallelOutComponent.startVal.val:0.0
ParallelOutComponent.startVal.allowedTypes:[]
ParallelOutComponent.startVal.allowedUpdates:None
ParallelOutComponent.startVal.readOnly:False
ParallelOutComponent.startVal.label:Start
ParallelOutComponent.startVal.categ:Basic
ParallelOutComponent.startVal.hint:When does the component start?
ParallelOutComponent.startVal.allowedVals:[]
ParallelOutComponent.startVal.valType:code
ParallelOutComponent.startVal.updates:None
ParallelOutComponent.startVal.staticUpdater:None
ParallelOutComponent.stopVal.default:1.0
ParallelOutComponent.stopVal.val:1.0
ParallelOutComponent.stopVal.allowedTypes:[]
ParallelOutComponent.stopVal.allowedUpdates:[]
ParallelOutComponent.stopVal.readOnly:False
ParallelOutComponent.stopVal.label:Stop
ParallelOutComponent.stopVal.categ:Basic
ParallelOutComponent.stopVal.hint:When does the component end? (blank is endless)
ParallelOutComponent.stopVal.allowedVals:[]
ParallelOutComponent.stopVal.valType:code
ParallelOutComponent.stopVal.updates:constant
ParallelOutComponent.stopVal.staticUpdater:None
ParallelOutComponent.startEstim.default:
ParallelOutComponent.startEstim.val:
ParallelOutComponent.startEstim.allowedTypes:[]
ParallelOutComponent.startEstim.allowedUpdates:None
ParallelOutComponent.startEstim.readOnly:False
ParallelOutComponent.startEstim.label:Expected start (s)
ParallelOutComponent.startEstim.categ:Basic
ParallelOutComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ParallelOutComponent.startEstim.allowedVals:[]
ParallelOutComponent.startEstim.valType:code
ParallelOutComponent.startEstim.updates:None
ParallelOutComponent.startEstim.staticUpdater:None
ParallelOutComponent.durationEstim.default:
ParallelOutComponent.durationEstim.val:
ParallelOutComponent.durationEstim.allowedTypes:[]
ParallelOutComponent.durationEstim.allowedUpdates:None
ParallelOutComponent.durationEstim.readOnly:False
ParallelOutComponent.durationEstim.label:Expected duration (s)
ParallelOutComponent.durationEstim.categ:Basic
ParallelOutComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ParallelOutComponent.durationEstim.allowedVals:[]
ParallelOutComponent.durationEstim.valType:code
ParallelOutComponent.durationEstim.updates:None
ParallelOutComponent.durationEstim.staticUpdater:None
ParallelOutComponent.address.default:'0x0378'
ParallelOutComponent.address.val:0x0378
ParallelOutComponent.address.allowedTypes:[]
ParallelOutComponent.address.allowedUpdates:None
ParallelOutComponent.address.readOnly:False
ParallelOutComponent.address.label:Port address
ParallelOutComponent.address.categ:Basic
ParallelOutComponent.address.hint:Parallel port to be used (you can change these options in preferences>general)
ParallelOutComponent.address.allowedVals:['0x0378', '0x03BC', 'LabJack U3']
ParallelOutComponent.address.valType:str
ParallelOutComponent.address.updates:None
ParallelOutComponent.address.staticUpdater:None
ParallelOutComponent.startData.default:1
ParallelOutComponent.startData.val:1
ParallelOutComponent.startData.allowedTypes:[]
ParallelOutComponent.startData.allowedUpdates:None
ParallelOutComponent.startData.readOnly:False
ParallelOutComponent.startData.label:Start data
ParallelOutComponent.startData.categ:Basic
ParallelOutComponent.startData.hint:Data to be sent at 'start'
ParallelOutComponent.startData.allowedVals:[]
ParallelOutComponent.startData.valType:code
ParallelOutComponent.startData.updates:None
ParallelOutComponent.startData.staticUpdater:None
ParallelOutComponent.stopData.default:0
ParallelOutComponent.stopData.val:0
ParallelOutComponent.stopData.allowedTypes:[]
ParallelOutComponent.stopData.allowedUpdates:None
ParallelOutComponent.stopData.readOnly:False
ParallelOutComponent.stopData.label:Stop data
ParallelOutComponent.stopData.categ:Basic
ParallelOutComponent.stopData.hint:Data to be sent at 'end'
ParallelOutComponent.stopData.allowedVals:[]
ParallelOutComponent.stopData.valType:code
ParallelOutComponent.stopData.updates:None
ParallelOutComponent.stopData.staticUpdater:None
ParallelOutComponent.syncScreen.default:True
ParallelOutComponent.syncScreen.val:True
ParallelOutComponent.syncScreen.allowedTypes:[]
ParallelOutComponent.syncScreen.allowedUpdates:[]
ParallelOutComponent.syncScreen.readOnly:False
ParallelOutComponent.syncScreen.label:Sync to screen
ParallelOutComponent.syncScreen.categ:Basic
ParallelOutComponent.syncScreen.hint:If the parallel port data relates to visual stimuli then sync its pulse to the screen refresh
ParallelOutComponent.syncScreen.allowedVals:[True, False]
ParallelOutComponent.syncScreen.valType:bool
ParallelOutComponent.syncScreen.updates:constant
ParallelOutComponent.syncScreen.staticUpdater:None
PatchComponent.order:['name']
PatchComponent.name.default:patch
PatchComponent.name.val:patch
PatchComponent.name.allowedTypes:[]
PatchComponent.name.allowedUpdates:None
PatchComponent.name.readOnly:False
PatchComponent.name.label:Name
PatchComponent.name.categ:Basic
PatchComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
PatchComponent.name.allowedVals:[]
PatchComponent.name.valType:code
PatchComponent.name.staticUpdater:None
PatchComponent.startType.default:'time (s)'
PatchComponent.startType.val:time (s)
PatchComponent.startType.allowedTypes:[]
PatchComponent.startType.allowedUpdates:None
PatchComponent.startType.readOnly:False
PatchComponent.startType.label:start type
PatchComponent.startType.categ:Basic
PatchComponent.startType.hint:How do you want to define your start point?
PatchComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
PatchComponent.startType.valType:str
PatchComponent.startType.updates:None
PatchComponent.startType.staticUpdater:None
PatchComponent.stopType.default:'duration (s)'
PatchComponent.stopType.val:duration (s)
PatchComponent.stopType.allowedTypes:[]
PatchComponent.stopType.allowedUpdates:None
PatchComponent.stopType.readOnly:False
PatchComponent.stopType.label:stop type
PatchComponent.stopType.categ:Basic
PatchComponent.stopType.hint:How do you want to define your end point?
PatchComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
PatchComponent.stopType.valType:str
PatchComponent.stopType.updates:None
PatchComponent.stopType.staticUpdater:None
PatchComponent.startVal.default:0.0
PatchComponent.startVal.val:0.0
PatchComponent.startVal.allowedTypes:[]
PatchComponent.startVal.allowedUpdates:None
PatchComponent.startVal.readOnly:False
PatchComponent.startVal.label:Start
PatchComponent.startVal.categ:Basic
PatchComponent.startVal.hint:When does the component start?
PatchComponent.startVal.allowedVals:[]
PatchComponent.startVal.valType:code
PatchComponent.startVal.updates:None
PatchComponent.startVal.staticUpdater:None
PatchComponent.stopVal.default:1.0
PatchComponent.stopVal.val:1.0
PatchComponent.stopVal.allowedTypes:[]
PatchComponent.stopVal.allowedUpdates:[]
PatchComponent.stopVal.readOnly:False
PatchComponent.stopVal.label:Stop
PatchComponent.stopVal.categ:Basic
PatchComponent.stopVal.hint:When does the component end? (blank is endless)
PatchComponent.stopVal.allowedVals:[]
PatchComponent.stopVal.valType:code
PatchComponent.stopVal.updates:constant
PatchComponent.stopVal.staticUpdater:None
PatchComponent.startEstim.default:
PatchComponent.startEstim.val:
PatchComponent.startEstim.allowedTypes:[]
PatchComponent.startEstim.allowedUpdates:None
PatchComponent.startEstim.readOnly:False
PatchComponent.startEstim.label:Expected start (s)
PatchComponent.startEstim.categ:Basic
PatchComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
PatchComponent.startEstim.allowedVals:[]
PatchComponent.startEstim.valType:code
PatchComponent.startEstim.updates:None
PatchComponent.startEstim.staticUpdater:None
PatchComponent.durationEstim.default:
PatchComponent.durationEstim.val:
PatchComponent.durationEstim.allowedTypes:[]
PatchComponent.durationEstim.allowedUpdates:None
PatchComponent.durationEstim.readOnly:False
PatchComponent.durationEstim.label:Expected duration (s)
PatchComponent.durationEstim.categ:Basic
PatchComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
PatchComponent.durationEstim.allowedVals:[]
PatchComponent.durationEstim.valType:code
PatchComponent.durationEstim.updates:None
PatchComponent.durationEstim.staticUpdater:None
PatchComponent.units.default:'from exp settings'
PatchComponent.units.val:from exp settings
PatchComponent.units.allowedTypes:[]
PatchComponent.units.allowedUpdates:None
PatchComponent.units.readOnly:False
PatchComponent.units.label:Units
PatchComponent.units.categ:Basic
PatchComponent.units.hint:Units of dimensions for this stimulus
PatchComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
PatchComponent.units.valType:str
PatchComponent.units.updates:None
PatchComponent.units.staticUpdater:None
PatchComponent.color.default:[1,1,1]
PatchComponent.color.val:$[1,1,1]
PatchComponent.color.allowedTypes:[]
PatchComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.color.readOnly:False
PatchComponent.color.label:Color
PatchComponent.color.categ:Advanced
PatchComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
PatchComponent.color.allowedVals:[]
PatchComponent.color.valType:str
PatchComponent.color.updates:constant
PatchComponent.color.staticUpdater:None
PatchComponent.opacity.default:1
PatchComponent.opacity.val:1
PatchComponent.opacity.allowedTypes:[]
PatchComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.opacity.readOnly:False
PatchComponent.opacity.label:Opacity
PatchComponent.opacity.categ:Basic
PatchComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
PatchComponent.opacity.allowedVals:[]
PatchComponent.opacity.valType:code
PatchComponent.opacity.updates:constant
PatchComponent.opacity.staticUpdater:None
PatchComponent.colorSpace.default:'rgb'
PatchComponent.colorSpace.val:rgb
PatchComponent.colorSpace.allowedTypes:[]
PatchComponent.colorSpace.allowedUpdates:None
PatchComponent.colorSpace.readOnly:False
PatchComponent.colorSpace.label:Color space
PatchComponent.colorSpace.categ:Advanced
PatchComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
PatchComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
PatchComponent.colorSpace.valType:str
PatchComponent.colorSpace.updates:constant
PatchComponent.colorSpace.staticUpdater:None
PatchComponent.pos.default:(0, 0)
PatchComponent.pos.val:(0, 0)
PatchComponent.pos.allowedTypes:[]
PatchComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.pos.readOnly:False
PatchComponent.pos.label:Position [x,y]
PatchComponent.pos.categ:Basic
PatchComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
PatchComponent.pos.allowedVals:[]
PatchComponent.pos.valType:code
PatchComponent.pos.updates:constant
PatchComponent.pos.staticUpdater:None
PatchComponent.size.default:(0.5, 0.5)
PatchComponent.size.val:(0.5, 0.5)
PatchComponent.size.allowedTypes:[]
PatchComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.size.readOnly:False
PatchComponent.size.label:Size [w,h]
PatchComponent.size.categ:Basic
PatchComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
PatchComponent.size.allowedVals:[]
PatchComponent.size.valType:code
PatchComponent.size.updates:constant
PatchComponent.size.staticUpdater:None
PatchComponent.ori.default:0
PatchComponent.ori.val:0
PatchComponent.ori.allowedTypes:[]
PatchComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.ori.readOnly:False
PatchComponent.ori.label:Orientation
PatchComponent.ori.categ:Basic
PatchComponent.ori.hint:Orientation of this stimulus (in deg)
PatchComponent.ori.allowedVals:[]
PatchComponent.ori.valType:code
PatchComponent.ori.updates:constant
PatchComponent.ori.staticUpdater:None
PatchComponent.image.default:'sin'
PatchComponent.image.val:sin
PatchComponent.image.allowedTypes:[]
PatchComponent.image.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.image.readOnly:False
PatchComponent.image.label:Image/tex
PatchComponent.image.categ:Basic
PatchComponent.image.hint:The image to be displayed - 'sin','sqr'... or a filename (including path)
PatchComponent.image.allowedVals:[]
PatchComponent.image.valType:str
PatchComponent.image.updates:constant
PatchComponent.image.staticUpdater:None
PatchComponent.mask.default:'None'
PatchComponent.mask.val:None
PatchComponent.mask.allowedTypes:[]
PatchComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.mask.readOnly:False
PatchComponent.mask.label:Mask
PatchComponent.mask.categ:Basic
PatchComponent.mask.hint:An image to define the alpha mask (ie shape)- gauss, circle... or a filename (including path)
PatchComponent.mask.allowedVals:[]
PatchComponent.mask.valType:str
PatchComponent.mask.updates:constant
PatchComponent.mask.staticUpdater:None
PatchComponent.sf.default:None
PatchComponent.sf.val:None
PatchComponent.sf.allowedTypes:[]
PatchComponent.sf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.sf.readOnly:False
PatchComponent.sf.label:Spatial frequency
PatchComponent.sf.categ:Advanced
PatchComponent.sf.hint:Spatial frequency of image repeats across the patch, e.g. 4 or [2,3]
PatchComponent.sf.allowedVals:[]
PatchComponent.sf.valType:code
PatchComponent.sf.updates:constant
PatchComponent.sf.staticUpdater:None
PatchComponent.phase.default:0.0
PatchComponent.phase.val:0.0
PatchComponent.phase.allowedTypes:[]
PatchComponent.phase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.phase.readOnly:False
PatchComponent.phase.label:Phase (in cycles)
PatchComponent.phase.categ:Advanced
PatchComponent.phase.hint:Spatial positioning of the image on the patch (in range 0-1.0)
PatchComponent.phase.allowedVals:[]
PatchComponent.phase.valType:code
PatchComponent.phase.updates:constant
PatchComponent.phase.staticUpdater:None
PatchComponent.texture resolution.default:128
PatchComponent.texture resolution.val:128
PatchComponent.texture resolution.allowedTypes:[]
PatchComponent.texture resolution.allowedUpdates:[]
PatchComponent.texture resolution.readOnly:False
PatchComponent.texture resolution.label:Texture resolution
PatchComponent.texture resolution.categ:Advanced
PatchComponent.texture resolution.hint:Resolution of the texture for standard ones such as sin, sqr etc. For most cases a value of 256 pixels will suffice
PatchComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
PatchComponent.texture resolution.valType:code
PatchComponent.texture resolution.updates:constant
PatchComponent.texture resolution.staticUpdater:None
PatchComponent.interpolate.default:'linear'
PatchComponent.interpolate.val:linear
PatchComponent.interpolate.allowedTypes:[]
PatchComponent.interpolate.allowedUpdates:[]
PatchComponent.interpolate.readOnly:False
PatchComponent.interpolate.label:Interpolate
PatchComponent.interpolate.categ:Advanced
PatchComponent.interpolate.hint:How should the image be interpolated if/when rescaled
PatchComponent.interpolate.allowedVals:['linear', 'nearest']
PatchComponent.interpolate.valType:str
PatchComponent.interpolate.updates:constant
PatchComponent.interpolate.staticUpdater:None
PolygonComponent.order:['shape', 'nVertices']
PolygonComponent.name.default:polygon
PolygonComponent.name.val:polygon
PolygonComponent.name.allowedTypes:[]
PolygonComponent.name.allowedUpdates:None
PolygonComponent.name.readOnly:False
PolygonComponent.name.label:Name
PolygonComponent.name.categ:Basic
PolygonComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
PolygonComponent.name.allowedVals:[]
PolygonComponent.name.valType:code
PolygonComponent.name.staticUpdater:None
PolygonComponent.startType.default:'time (s)'
PolygonComponent.startType.val:time (s)
PolygonComponent.startType.allowedTypes:[]
PolygonComponent.startType.allowedUpdates:None
PolygonComponent.startType.readOnly:False
PolygonComponent.startType.label:start type
PolygonComponent.startType.categ:Basic
PolygonComponent.startType.hint:How do you want to define your start point?
PolygonComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
PolygonComponent.startType.valType:str
PolygonComponent.startType.updates:None
PolygonComponent.startType.staticUpdater:None
PolygonComponent.stopType.default:'duration (s)'
PolygonComponent.stopType.val:duration (s)
PolygonComponent.stopType.allowedTypes:[]
PolygonComponent.stopType.allowedUpdates:None
PolygonComponent.stopType.readOnly:False
PolygonComponent.stopType.label:stop type
PolygonComponent.stopType.categ:Basic
PolygonComponent.stopType.hint:How do you want to define your end point?
PolygonComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
PolygonComponent.stopType.valType:str
PolygonComponent.stopType.updates:None
PolygonComponent.stopType.staticUpdater:None
PolygonComponent.startVal.default:0.0
PolygonComponent.startVal.val:0.0
PolygonComponent.startVal.allowedTypes:[]
PolygonComponent.startVal.allowedUpdates:None
PolygonComponent.startVal.readOnly:False
PolygonComponent.startVal.label:Start
PolygonComponent.startVal.categ:Basic
PolygonComponent.startVal.hint:When does the component start?
PolygonComponent.startVal.allowedVals:[]
PolygonComponent.startVal.valType:code
PolygonComponent.startVal.updates:None
PolygonComponent.startVal.staticUpdater:None
PolygonComponent.stopVal.default:1.0
PolygonComponent.stopVal.val:1.0
PolygonComponent.stopVal.allowedTypes:[]
PolygonComponent.stopVal.allowedUpdates:[]
PolygonComponent.stopVal.readOnly:False
PolygonComponent.stopVal.label:Stop
PolygonComponent.stopVal.categ:Basic
PolygonComponent.stopVal.hint:When does the component end? (blank is endless)
PolygonComponent.stopVal.allowedVals:[]
PolygonComponent.stopVal.valType:code
PolygonComponent.stopVal.updates:constant
PolygonComponent.stopVal.staticUpdater:None
PolygonComponent.startEstim.default:
PolygonComponent.startEstim.val:
PolygonComponent.startEstim.allowedTypes:[]
PolygonComponent.startEstim.allowedUpdates:None
PolygonComponent.startEstim.readOnly:False
PolygonComponent.startEstim.label:Expected start (s)
PolygonComponent.startEstim.categ:Basic
PolygonComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
PolygonComponent.startEstim.allowedVals:[]
PolygonComponent.startEstim.valType:code
PolygonComponent.startEstim.updates:None
PolygonComponent.startEstim.staticUpdater:None
PolygonComponent.durationEstim.default:
PolygonComponent.durationEstim.val:
PolygonComponent.durationEstim.allowedTypes:[]
PolygonComponent.durationEstim.allowedUpdates:None
PolygonComponent.durationEstim.readOnly:False
PolygonComponent.durationEstim.label:Expected duration (s)
PolygonComponent.durationEstim.categ:Basic
PolygonComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
PolygonComponent.durationEstim.allowedVals:[]
PolygonComponent.durationEstim.valType:code
PolygonComponent.durationEstim.updates:None
PolygonComponent.durationEstim.staticUpdater:None
PolygonComponent.units.default:'from exp settings'
PolygonComponent.units.val:from exp settings
PolygonComponent.units.allowedTypes:[]
PolygonComponent.units.allowedUpdates:None
PolygonComponent.units.readOnly:False
PolygonComponent.units.label:Units
PolygonComponent.units.categ:Basic
PolygonComponent.units.hint:Units of dimensions for this stimulus
PolygonComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
PolygonComponent.units.valType:str
PolygonComponent.units.updates:None
PolygonComponent.units.staticUpdater:None
PolygonComponent.opacity.default:1
PolygonComponent.opacity.val:1
PolygonComponent.opacity.allowedTypes:[]
PolygonComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.opacity.readOnly:False
PolygonComponent.opacity.label:Opacity
PolygonComponent.opacity.categ:Basic
PolygonComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
PolygonComponent.opacity.allowedVals:[]
PolygonComponent.opacity.valType:code
PolygonComponent.opacity.updates:constant
PolygonComponent.opacity.staticUpdater:None
PolygonComponent.pos.default:(0, 0)
PolygonComponent.pos.val:(0, 0)
PolygonComponent.pos.allowedTypes:[]
PolygonComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.pos.readOnly:False
PolygonComponent.pos.label:Position [x,y]
PolygonComponent.pos.categ:Basic
PolygonComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
PolygonComponent.pos.allowedVals:[]
PolygonComponent.pos.valType:code
PolygonComponent.pos.updates:constant
PolygonComponent.pos.staticUpdater:None
PolygonComponent.size.default:(0.5, 0.5)
PolygonComponent.size.val:(0.5, 0.5)
PolygonComponent.size.allowedTypes:[]
PolygonComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.size.readOnly:False
PolygonComponent.size.label:Size [w,h]
PolygonComponent.size.categ:Basic
PolygonComponent.size.hint:Size of this stimulus [w,h]. Note that for a line only the first value is used, for triangle and rect the [w,h] is as expected,
 but for higher-order polygons it represents the [w,h] of the ellipse that the polygon sits on!! 
PolygonComponent.size.allowedVals:[]
PolygonComponent.size.valType:code
PolygonComponent.size.updates:constant
PolygonComponent.size.staticUpdater:None
PolygonComponent.ori.default:0
PolygonComponent.ori.val:0
PolygonComponent.ori.allowedTypes:[]
PolygonComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.ori.readOnly:False
PolygonComponent.ori.label:Orientation
PolygonComponent.ori.categ:Basic
PolygonComponent.ori.hint:Orientation of this stimulus (in deg)
PolygonComponent.ori.allowedVals:[]
PolygonComponent.ori.valType:code
PolygonComponent.ori.updates:constant
PolygonComponent.ori.staticUpdater:None
PolygonComponent.nVertices.default:4
PolygonComponent.nVertices.val:4
PolygonComponent.nVertices.allowedTypes:[]
PolygonComponent.nVertices.allowedUpdates:['constant']
PolygonComponent.nVertices.readOnly:False
PolygonComponent.nVertices.label:Num. vertices
PolygonComponent.nVertices.categ:Basic
PolygonComponent.nVertices.hint:How many vertices in your regular polygon?
PolygonComponent.nVertices.allowedVals:[]
PolygonComponent.nVertices.valType:int
PolygonComponent.nVertices.updates:constant
PolygonComponent.nVertices.staticUpdater:None
PolygonComponent.shape.default:'triangle'
PolygonComponent.shape.val:triangle
PolygonComponent.shape.allowedTypes:[]
PolygonComponent.shape.allowedUpdates:['constant']
PolygonComponent.shape.readOnly:False
PolygonComponent.shape.label:Shape
PolygonComponent.shape.categ:Basic
PolygonComponent.shape.hint:What shape is this? With 'regular polygon...' you can set number of vertices
PolygonComponent.shape.allowedVals:['line', 'triangle', 'rectangle', 'cross', 'regular polygon...']
PolygonComponent.shape.valType:str
PolygonComponent.shape.updates:constant
PolygonComponent.shape.staticUpdater:None
PolygonComponent.fillColorSpace.default:'rgb'
PolygonComponent.fillColorSpace.val:rgb
PolygonComponent.fillColorSpace.allowedTypes:[]
PolygonComponent.fillColorSpace.allowedUpdates:None
PolygonComponent.fillColorSpace.readOnly:False
PolygonComponent.fillColorSpace.label:Fill color-space
PolygonComponent.fillColorSpace.categ:Advanced
PolygonComponent.fillColorSpace.hint:Choice of color space for the fill color (rgb, dkl, lms, hsv)
PolygonComponent.fillColorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv', 'rgb255']
PolygonComponent.fillColorSpace.valType:str
PolygonComponent.fillColorSpace.updates:constant
PolygonComponent.fillColorSpace.staticUpdater:None
PolygonComponent.fillColor.default:[1,1,1]
PolygonComponent.fillColor.val:$[1,1,1]
PolygonComponent.fillColor.allowedTypes:[]
PolygonComponent.fillColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.fillColor.readOnly:False
PolygonComponent.fillColor.label:Fill color
PolygonComponent.fillColor.categ:Advanced
PolygonComponent.fillColor.hint:Fill color of this shape; Right-click to bring up a color-picker (rgb only)
PolygonComponent.fillColor.allowedVals:[]
PolygonComponent.fillColor.valType:str
PolygonComponent.fillColor.updates:constant
PolygonComponent.fillColor.staticUpdater:None
PolygonComponent.lineColorSpace.default:'rgb'
PolygonComponent.lineColorSpace.val:rgb
PolygonComponent.lineColorSpace.allowedTypes:[]
PolygonComponent.lineColorSpace.allowedUpdates:None
PolygonComponent.lineColorSpace.readOnly:False
PolygonComponent.lineColorSpace.label:Line color-space
PolygonComponent.lineColorSpace.categ:Advanced
PolygonComponent.lineColorSpace.hint:Choice of color space for the fill color (rgb, dkl, lms, hsv)
PolygonComponent.lineColorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
PolygonComponent.lineColorSpace.valType:str
PolygonComponent.lineColorSpace.updates:constant
PolygonComponent.lineColorSpace.staticUpdater:None
PolygonComponent.lineColor.default:[1,1,1]
PolygonComponent.lineColor.val:$[1,1,1]
PolygonComponent.lineColor.allowedTypes:[]
PolygonComponent.lineColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.lineColor.readOnly:False
PolygonComponent.lineColor.label:Line color
PolygonComponent.lineColor.categ:Advanced
PolygonComponent.lineColor.hint:Line color of this shape; Right-click to bring up a color-picker (rgb only)
PolygonComponent.lineColor.allowedVals:[]
PolygonComponent.lineColor.valType:str
PolygonComponent.lineColor.updates:constant
PolygonComponent.lineColor.staticUpdater:None
PolygonComponent.lineWidth.default:1
PolygonComponent.lineWidth.val:1
PolygonComponent.lineWidth.allowedTypes:[]
PolygonComponent.lineWidth.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.lineWidth.readOnly:False
PolygonComponent.lineWidth.label:Line width
PolygonComponent.lineWidth.categ:Basic
PolygonComponent.lineWidth.hint:Width of the shape's line (always in pixels - this does NOT use 'units')
PolygonComponent.lineWidth.allowedVals:[]
PolygonComponent.lineWidth.valType:code
PolygonComponent.lineWidth.updates:constant
PolygonComponent.lineWidth.staticUpdater:None
PolygonComponent.interpolate.default:'linear'
PolygonComponent.interpolate.val:linear
PolygonComponent.interpolate.allowedTypes:[]
PolygonComponent.interpolate.allowedUpdates:[]
PolygonComponent.interpolate.readOnly:False
PolygonComponent.interpolate.label:Interpolate
PolygonComponent.interpolate.categ:Advanced
PolygonComponent.interpolate.hint:How should the image be interpolated if/when rescaled
PolygonComponent.interpolate.allowedVals:['linear', 'nearest']
PolygonComponent.interpolate.valType:str
PolygonComponent.interpolate.updates:constant
PolygonComponent.interpolate.staticUpdater:None
RatingScaleComponent.order:['name', 'visualAnalogScale', 'categoryChoices', 'scaleDescription', 'low', 'high', 'labels', 'markerStart', 'size', 'pos', 'tickHeight']
RatingScaleComponent.name.default:rating
RatingScaleComponent.name.val:rating
RatingScaleComponent.name.allowedTypes:[]
RatingScaleComponent.name.allowedUpdates:None
RatingScaleComponent.name.readOnly:False
RatingScaleComponent.name.label:Name
RatingScaleComponent.name.categ:Basic
RatingScaleComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
RatingScaleComponent.name.allowedVals:[]
RatingScaleComponent.name.valType:code
RatingScaleComponent.name.staticUpdater:None
RatingScaleComponent.startType.default:'time (s)'
RatingScaleComponent.startType.val:time (s)
RatingScaleComponent.startType.allowedTypes:[]
RatingScaleComponent.startType.allowedUpdates:None
RatingScaleComponent.startType.readOnly:False
RatingScaleComponent.startType.label:start type
RatingScaleComponent.startType.categ:Basic
RatingScaleComponent.startType.hint:How do you want to define your start point?
RatingScaleComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
RatingScaleComponent.startType.valType:str
RatingScaleComponent.startType.updates:None
RatingScaleComponent.startType.staticUpdater:None
RatingScaleComponent.stopType.default:'condition'
RatingScaleComponent.stopType.val:condition
RatingScaleComponent.stopType.allowedTypes:[]
RatingScaleComponent.stopType.allowedUpdates:None
RatingScaleComponent.stopType.readOnly:False
RatingScaleComponent.stopType.label:stop type
RatingScaleComponent.stopType.categ:Basic
RatingScaleComponent.stopType.hint:How do you want to define your end point?
RatingScaleComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
RatingScaleComponent.stopType.valType:str
RatingScaleComponent.stopType.updates:None
RatingScaleComponent.stopType.staticUpdater:None
RatingScaleComponent.startVal.default:0.0
RatingScaleComponent.startVal.val:0.0
RatingScaleComponent.startVal.allowedTypes:[]
RatingScaleComponent.startVal.allowedUpdates:None
RatingScaleComponent.startVal.readOnly:False
RatingScaleComponent.startVal.label:Start
RatingScaleComponent.startVal.categ:Basic
RatingScaleComponent.startVal.hint:When does the component start?
RatingScaleComponent.startVal.allowedVals:[]
RatingScaleComponent.startVal.valType:code
RatingScaleComponent.startVal.updates:None
RatingScaleComponent.startVal.staticUpdater:None
RatingScaleComponent.stopVal.default:
RatingScaleComponent.stopVal.val:
RatingScaleComponent.stopVal.allowedTypes:[]
RatingScaleComponent.stopVal.allowedUpdates:[]
RatingScaleComponent.stopVal.readOnly:False
RatingScaleComponent.stopVal.label:Stop
RatingScaleComponent.stopVal.categ:Basic
RatingScaleComponent.stopVal.hint:When does the component end? (blank is endless)
RatingScaleComponent.stopVal.allowedVals:[]
RatingScaleComponent.stopVal.valType:code
RatingScaleComponent.stopVal.updates:constant
RatingScaleComponent.stopVal.staticUpdater:None
RatingScaleComponent.startEstim.default:
RatingScaleComponent.startEstim.val:
RatingScaleComponent.startEstim.allowedTypes:[]
RatingScaleComponent.startEstim.allowedUpdates:None
RatingScaleComponent.startEstim.readOnly:False
RatingScaleComponent.startEstim.label:Expected start (s)
RatingScaleComponent.startEstim.categ:Basic
RatingScaleComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
RatingScaleComponent.startEstim.allowedVals:[]
RatingScaleComponent.startEstim.valType:code
RatingScaleComponent.startEstim.updates:None
RatingScaleComponent.startEstim.staticUpdater:None
RatingScaleComponent.durationEstim.default:
RatingScaleComponent.durationEstim.val:
RatingScaleComponent.durationEstim.allowedTypes:[]
RatingScaleComponent.durationEstim.allowedUpdates:None
RatingScaleComponent.durationEstim.readOnly:False
RatingScaleComponent.durationEstim.label:Expected duration (s)
RatingScaleComponent.durationEstim.categ:Basic
RatingScaleComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
RatingScaleComponent.durationEstim.allowedVals:[]
RatingScaleComponent.durationEstim.valType:code
RatingScaleComponent.durationEstim.updates:None
RatingScaleComponent.durationEstim.staticUpdater:None
RatingScaleComponent.visualAnalogScale.default:False
RatingScaleComponent.visualAnalogScale.val:False
RatingScaleComponent.visualAnalogScale.allowedTypes:[]
RatingScaleComponent.visualAnalogScale.allowedUpdates:[]
RatingScaleComponent.visualAnalogScale.readOnly:False
RatingScaleComponent.visualAnalogScale.label:Visual analog scale
RatingScaleComponent.visualAnalogScale.categ:Basic
RatingScaleComponent.visualAnalogScale.hint:Show a continuous visual analog scale; returns 0.00 to 1.00; takes precedence over numeric scale or categorical choices
RatingScaleComponent.visualAnalogScale.allowedVals:[]
RatingScaleComponent.visualAnalogScale.valType:bool
RatingScaleComponent.visualAnalogScale.updates:constant
RatingScaleComponent.visualAnalogScale.staticUpdater:None
RatingScaleComponent.categoryChoices.default:''
RatingScaleComponent.categoryChoices.val:
RatingScaleComponent.categoryChoices.allowedTypes:[]
RatingScaleComponent.categoryChoices.allowedUpdates:[]
RatingScaleComponent.categoryChoices.readOnly:False
RatingScaleComponent.categoryChoices.label:Category choices
RatingScaleComponent.categoryChoices.categ:Basic
RatingScaleComponent.categoryChoices.hint:A list of categories (non-numeric alternatives) to present, space or comma-separated; these take precedence over a numeric scale
RatingScaleComponent.categoryChoices.allowedVals:[]
RatingScaleComponent.categoryChoices.valType:str
RatingScaleComponent.categoryChoices.updates:constant
RatingScaleComponent.categoryChoices.staticUpdater:None
RatingScaleComponent.scaleDescription.default:''
RatingScaleComponent.scaleDescription.val:
RatingScaleComponent.scaleDescription.allowedTypes:[]
RatingScaleComponent.scaleDescription.allowedUpdates:[]
RatingScaleComponent.scaleDescription.readOnly:False
RatingScaleComponent.scaleDescription.label:Scale description
RatingScaleComponent.scaleDescription.categ:Basic
RatingScaleComponent.scaleDescription.hint:Brief instructions, such as a description of the scale numbers as seen by the subject.
RatingScaleComponent.scaleDescription.allowedVals:[]
RatingScaleComponent.scaleDescription.valType:str
RatingScaleComponent.scaleDescription.updates:constant
RatingScaleComponent.scaleDescription.staticUpdater:None
RatingScaleComponent.low.default:1
RatingScaleComponent.low.val:1
RatingScaleComponent.low.allowedTypes:[]
RatingScaleComponent.low.allowedUpdates:[]
RatingScaleComponent.low.readOnly:False
RatingScaleComponent.low.label:Lowest value
RatingScaleComponent.low.categ:Basic
RatingScaleComponent.low.hint:Lowest rating (low end of the scale); not used for categories.
RatingScaleComponent.low.allowedVals:[]
RatingScaleComponent.low.valType:code
RatingScaleComponent.low.updates:constant
RatingScaleComponent.low.staticUpdater:None
RatingScaleComponent.high.default:7
RatingScaleComponent.high.val:7
RatingScaleComponent.high.allowedTypes:[]
RatingScaleComponent.high.allowedUpdates:[]
RatingScaleComponent.high.readOnly:False
RatingScaleComponent.high.label:Highest value
RatingScaleComponent.high.categ:Basic
RatingScaleComponent.high.hint:Highest rating (top end of the scale); not used for categories.
RatingScaleComponent.high.allowedVals:[]
RatingScaleComponent.high.valType:code
RatingScaleComponent.high.updates:constant
RatingScaleComponent.high.staticUpdater:None
RatingScaleComponent.labels.default:''
RatingScaleComponent.labels.val:
RatingScaleComponent.labels.allowedTypes:[]
RatingScaleComponent.labels.allowedUpdates:[]
RatingScaleComponent.labels.readOnly:False
RatingScaleComponent.labels.label:Labels
RatingScaleComponent.labels.categ:Basic
RatingScaleComponent.labels.hint:Labels for the ends of the scale, separated by commas
RatingScaleComponent.labels.allowedVals:[]
RatingScaleComponent.labels.valType:str
RatingScaleComponent.labels.updates:constant
RatingScaleComponent.labels.staticUpdater:None
RatingScaleComponent.marker.default:'triangle'
RatingScaleComponent.marker.val:triangle
RatingScaleComponent.marker.allowedTypes:[]
RatingScaleComponent.marker.allowedUpdates:[]
RatingScaleComponent.marker.readOnly:False
RatingScaleComponent.marker.label:Marker type
RatingScaleComponent.marker.categ:Basic
RatingScaleComponent.marker.hint:Style for the marker: triangle, circle, glow, slider, hover
RatingScaleComponent.marker.allowedVals:[]
RatingScaleComponent.marker.valType:str
RatingScaleComponent.marker.updates:constant
RatingScaleComponent.marker.staticUpdater:None
RatingScaleComponent.markerStart.default:''
RatingScaleComponent.markerStart.val:
RatingScaleComponent.markerStart.allowedTypes:[]
RatingScaleComponent.markerStart.allowedUpdates:[]
RatingScaleComponent.markerStart.readOnly:False
RatingScaleComponent.markerStart.label:Marker start
RatingScaleComponent.markerStart.categ:Basic
RatingScaleComponent.markerStart.hint:initial position for the marker
RatingScaleComponent.markerStart.allowedVals:[]
RatingScaleComponent.markerStart.valType:str
RatingScaleComponent.markerStart.updates:constant
RatingScaleComponent.markerStart.staticUpdater:None
RatingScaleComponent.singleClick.default:False
RatingScaleComponent.singleClick.val:False
RatingScaleComponent.singleClick.allowedTypes:[]
RatingScaleComponent.singleClick.allowedUpdates:[]
RatingScaleComponent.singleClick.readOnly:False
RatingScaleComponent.singleClick.label:Single click
RatingScaleComponent.singleClick.categ:Advanced
RatingScaleComponent.singleClick.hint:Should clicking the line accept that rating (without needing to confirm via 'accept')?
RatingScaleComponent.singleClick.allowedVals:[]
RatingScaleComponent.singleClick.valType:bool
RatingScaleComponent.singleClick.updates:constant
RatingScaleComponent.singleClick.staticUpdater:None
RatingScaleComponent.disappear.default:False
RatingScaleComponent.disappear.val:False
RatingScaleComponent.disappear.allowedTypes:[]
RatingScaleComponent.disappear.allowedUpdates:[]
RatingScaleComponent.disappear.readOnly:False
RatingScaleComponent.disappear.label:Disappear
RatingScaleComponent.disappear.categ:Advanced
RatingScaleComponent.disappear.hint:Hide the scale when a rating has been accepted; False to remain on-screen
RatingScaleComponent.disappear.allowedVals:[]
RatingScaleComponent.disappear.valType:bool
RatingScaleComponent.disappear.updates:constant
RatingScaleComponent.disappear.staticUpdater:None
RatingScaleComponent.showAccept.default:True
RatingScaleComponent.showAccept.val:True
RatingScaleComponent.showAccept.allowedTypes:[]
RatingScaleComponent.showAccept.allowedUpdates:[]
RatingScaleComponent.showAccept.readOnly:False
RatingScaleComponent.showAccept.label:Show accept
RatingScaleComponent.showAccept.categ:Advanced
RatingScaleComponent.showAccept.hint:Should the accept button by visible?
RatingScaleComponent.showAccept.allowedVals:[]
RatingScaleComponent.showAccept.valType:bool
RatingScaleComponent.showAccept.updates:constant
RatingScaleComponent.showAccept.staticUpdater:None
RatingScaleComponent.storeRating.default:True
RatingScaleComponent.storeRating.val:True
RatingScaleComponent.storeRating.allowedTypes:[]
RatingScaleComponent.storeRating.allowedUpdates:[]
RatingScaleComponent.storeRating.readOnly:False
RatingScaleComponent.storeRating.label:Store rating
RatingScaleComponent.storeRating.categ:Advanced
RatingScaleComponent.storeRating.hint:store the rating
RatingScaleComponent.storeRating.allowedVals:[]
RatingScaleComponent.storeRating.valType:bool
RatingScaleComponent.storeRating.updates:constant
RatingScaleComponent.storeRating.staticUpdater:None
RatingScaleComponent.storeRatingTime.default:True
RatingScaleComponent.storeRatingTime.val:True
RatingScaleComponent.storeRatingTime.allowedTypes:[]
RatingScaleComponent.storeRatingTime.allowedUpdates:[]
RatingScaleComponent.storeRatingTime.readOnly:False
RatingScaleComponent.storeRatingTime.label:Store rating time
RatingScaleComponent.storeRatingTime.categ:Advanced
RatingScaleComponent.storeRatingTime.hint:store the time taken to make the choice (in seconds)
RatingScaleComponent.storeRatingTime.allowedVals:[]
RatingScaleComponent.storeRatingTime.valType:bool
RatingScaleComponent.storeRatingTime.updates:constant
RatingScaleComponent.storeRatingTime.staticUpdater:None
RatingScaleComponent.storeHistory.default:False
RatingScaleComponent.storeHistory.val:False
RatingScaleComponent.storeHistory.allowedTypes:[]
RatingScaleComponent.storeHistory.allowedUpdates:[]
RatingScaleComponent.storeHistory.readOnly:False
RatingScaleComponent.storeHistory.label:Store history
RatingScaleComponent.storeHistory.categ:Advanced
RatingScaleComponent.storeHistory.hint:store the history of (selection, time)
RatingScaleComponent.storeHistory.allowedVals:[]
RatingScaleComponent.storeHistory.valType:bool
RatingScaleComponent.storeHistory.updates:constant
RatingScaleComponent.storeHistory.staticUpdater:None
RatingScaleComponent.forceEndRoutine.default:True
RatingScaleComponent.forceEndRoutine.val:True
RatingScaleComponent.forceEndRoutine.allowedTypes:[]
RatingScaleComponent.forceEndRoutine.allowedUpdates:[]
RatingScaleComponent.forceEndRoutine.readOnly:False
RatingScaleComponent.forceEndRoutine.label:Force end of Routine
RatingScaleComponent.forceEndRoutine.categ:Advanced
RatingScaleComponent.forceEndRoutine.hint:Should accepting a rating cause the end of the routine (e.g. trial)?
RatingScaleComponent.forceEndRoutine.allowedVals:[]
RatingScaleComponent.forceEndRoutine.valType:bool
RatingScaleComponent.forceEndRoutine.updates:constant
RatingScaleComponent.forceEndRoutine.staticUpdater:None
RatingScaleComponent.size.default:1.0
RatingScaleComponent.size.val:1.0
RatingScaleComponent.size.allowedTypes:[]
RatingScaleComponent.size.allowedUpdates:[]
RatingScaleComponent.size.readOnly:False
RatingScaleComponent.size.label:Size
RatingScaleComponent.size.categ:Advanced
RatingScaleComponent.size.hint:Relative size on the screen; size > 1 is larger than default; size < 1 is smaller
RatingScaleComponent.size.allowedVals:[]
RatingScaleComponent.size.valType:code
RatingScaleComponent.size.updates:constant
RatingScaleComponent.size.staticUpdater:None
RatingScaleComponent.tickHeight.default:''
RatingScaleComponent.tickHeight.val:
RatingScaleComponent.tickHeight.allowedTypes:[]
RatingScaleComponent.tickHeight.allowedUpdates:[]
RatingScaleComponent.tickHeight.readOnly:False
RatingScaleComponent.tickHeight.label:Tick height
RatingScaleComponent.tickHeight.categ:Advanced
RatingScaleComponent.tickHeight.hint:height of tick marks (1 is upward, 0 is hidden, -1 is downward)
RatingScaleComponent.tickHeight.allowedVals:[]
RatingScaleComponent.tickHeight.valType:str
RatingScaleComponent.tickHeight.updates:constant
RatingScaleComponent.tickHeight.staticUpdater:None
RatingScaleComponent.pos.default:'0, -0.4'
RatingScaleComponent.pos.val:0, -0.4
RatingScaleComponent.pos.allowedTypes:[]
RatingScaleComponent.pos.allowedUpdates:[]
RatingScaleComponent.pos.readOnly:False
RatingScaleComponent.pos.label:Position [x,y]
RatingScaleComponent.pos.categ:Advanced
RatingScaleComponent.pos.hint:x,y position on the screen
RatingScaleComponent.pos.allowedVals:[]
RatingScaleComponent.pos.valType:str
RatingScaleComponent.pos.updates:constant
RatingScaleComponent.pos.staticUpdater:None
RatingScaleComponent.customize_everything.default:''
RatingScaleComponent.customize_everything.val:
RatingScaleComponent.customize_everything.allowedTypes:[]
RatingScaleComponent.customize_everything.allowedUpdates:[]
RatingScaleComponent.customize_everything.readOnly:False
RatingScaleComponent.customize_everything.label:Customize everything :
RatingScaleComponent.customize_everything.categ:Custom
RatingScaleComponent.customize_everything.hint:Use this text to create the rating scale as you would in a code component; overrides all dialog settings except time parameters, forceEndRoutine, storeRatingTime, storeRating
RatingScaleComponent.customize_everything.allowedVals:[]
RatingScaleComponent.customize_everything.valType:str
RatingScaleComponent.customize_everything.updates:constant
RatingScaleComponent.customize_everything.staticUpdater:None
SettingsComponent.order:['expName', 'Show info dlg', 'Experiment info', 'Data filename', 'Save excel file', 'Save csv file', 'Save wide csv file', 'Save psydat file', 'Save log file', 'logging level', 'Monitor', 'Screen', 'Full-screen window', 'Window size (pixels)', 'color', 'colorSpace', 'Units', 'HTML path']
SettingsComponent.expName.default:''
SettingsComponent.expName.val:
SettingsComponent.expName.allowedTypes:[]
SettingsComponent.expName.allowedUpdates:None
SettingsComponent.expName.readOnly:False
SettingsComponent.expName.label:Experiment name
SettingsComponent.expName.categ:Basic
SettingsComponent.expName.hint:Name of the entire experiment (taken by default from the filename on save)
SettingsComponent.expName.allowedVals:[]
SettingsComponent.expName.valType:str
SettingsComponent.expName.updates:None
SettingsComponent.expName.staticUpdater:None
SettingsComponent.Show info dlg.default:True
SettingsComponent.Show info dlg.val:True
SettingsComponent.Show info dlg.allowedTypes:[]
SettingsComponent.Show info dlg.allowedUpdates:None
SettingsComponent.Show info dlg.readOnly:False
SettingsComponent.Show info dlg.label:Show info dialog
SettingsComponent.Show info dlg.categ:Basic
SettingsComponent.Show info dlg.hint:Start the experiment with a dialog to set info (e.g.participant or condition)
SettingsComponent.Show info dlg.allowedVals:[]
SettingsComponent.Show info dlg.valType:bool
SettingsComponent.Show info dlg.updates:None
SettingsComponent.Show info dlg.staticUpdater:None
SettingsComponent.Enable Escape.default:True
SettingsComponent.Enable Escape.val:True
SettingsComponent.Enable Escape.allowedTypes:[]
SettingsComponent.Enable Escape.allowedUpdates:None
SettingsComponent.Enable Escape.readOnly:False
SettingsComponent.Enable Escape.label:Enable Escape key
SettingsComponent.Enable Escape.categ:Basic
SettingsComponent.Enable Escape.hint:Enable the <esc> key, to allow subjects to quit / break out of the experiment
SettingsComponent.Enable Escape.allowedVals:[]
SettingsComponent.Enable Escape.valType:bool
SettingsComponent.Enable Escape.updates:None
SettingsComponent.Enable Escape.staticUpdater:None
SettingsComponent.Experiment info.default:{'participant':'', 'session':'001'}
SettingsComponent.Experiment info.val:{'participant':'', 'session':'001'}
SettingsComponent.Experiment info.allowedTypes:[]
SettingsComponent.Experiment info.allowedUpdates:None
SettingsComponent.Experiment info.readOnly:False
SettingsComponent.Experiment info.label:Experiment info
SettingsComponent.Experiment info.categ:Basic
SettingsComponent.Experiment info.hint:The info to present in a dialog box. Right-click to check syntax and preview the dialog box.
SettingsComponent.Experiment info.allowedVals:[]
SettingsComponent.Experiment info.valType:code
SettingsComponent.Experiment info.updates:None
SettingsComponent.Experiment info.staticUpdater:None
SettingsComponent.Use version.default:''
SettingsComponent.Use version.val:
SettingsComponent.Use version.allowedTypes:[]
SettingsComponent.Use version.allowedUpdates:None
SettingsComponent.Use version.readOnly:False
SettingsComponent.Use version.label:Use PsychoPy version
SettingsComponent.Use version.categ:Basic
SettingsComponent.Use version.hint:The version of PsychoPy to use when running the experiment.
SettingsComponent.Use version.allowedVals:['latest', '3', '3.0', '', '3.0.0alpha1']
SettingsComponent.Use version.valType:str
SettingsComponent.Use version.updates:None
SettingsComponent.Use version.staticUpdater:None
SettingsComponent.Full-screen window.default:True
SettingsComponent.Full-screen window.val:True
SettingsComponent.Full-screen window.allowedTypes:[]
SettingsComponent.Full-screen window.allowedUpdates:None
SettingsComponent.Full-screen window.readOnly:False
SettingsComponent.Full-screen window.label:Full-screen window
SettingsComponent.Full-screen window.categ:Screen
SettingsComponent.Full-screen window.hint:Run the experiment full-screen (recommended)
SettingsComponent.Full-screen window.allowedVals:[]
SettingsComponent.Full-screen window.valType:bool
SettingsComponent.Full-screen window.updates:None
SettingsComponent.Full-screen window.staticUpdater:None
SettingsComponent.Window size (pixels).default:(1024, 768)
SettingsComponent.Window size (pixels).val:(1024, 768)
SettingsComponent.Window size (pixels).allowedTypes:[]
SettingsComponent.Window size (pixels).allowedUpdates:None
SettingsComponent.Window size (pixels).readOnly:False
SettingsComponent.Window size (pixels).label:Window size (pixels)
SettingsComponent.Window size (pixels).categ:Screen
SettingsComponent.Window size (pixels).hint:Size of window (if not fullscreen)
SettingsComponent.Window size (pixels).allowedVals:[]
SettingsComponent.Window size (pixels).valType:code
SettingsComponent.Window size (pixels).updates:None
SettingsComponent.Window size (pixels).staticUpdater:None
SettingsComponent.Screen.default:1.0
SettingsComponent.Screen.val:1
SettingsComponent.Screen.allowedTypes:[]
SettingsComponent.Screen.allowedUpdates:None
SettingsComponent.Screen.readOnly:False
SettingsComponent.Screen.label:Screen
SettingsComponent.Screen.categ:Screen
SettingsComponent.Screen.hint:Which physical screen to run on (1 or 2)
SettingsComponent.Screen.allowedVals:[]
SettingsComponent.Screen.valType:num
SettingsComponent.Screen.updates:None
SettingsComponent.Screen.staticUpdater:None
SettingsComponent.Monitor.default:'testMonitor'
SettingsComponent.Monitor.val:testMonitor
SettingsComponent.Monitor.allowedTypes:[]
SettingsComponent.Monitor.allowedUpdates:None
SettingsComponent.Monitor.readOnly:False
SettingsComponent.Monitor.label:Monitor
SettingsComponent.Monitor.categ:Screen
SettingsComponent.Monitor.hint:Name of the monitor (from Monitor Center). Right-click to go there, then copy & paste a monitor name here.
SettingsComponent.Monitor.allowedVals:[]
SettingsComponent.Monitor.valType:str
SettingsComponent.Monitor.updates:None
SettingsComponent.Monitor.staticUpdater:None
SettingsComponent.color.default:[0,0,0]
SettingsComponent.color.val:$[0,0,0]
SettingsComponent.color.allowedTypes:[]
SettingsComponent.color.allowedUpdates:None
SettingsComponent.color.readOnly:False
SettingsComponent.color.label:Color
SettingsComponent.color.categ:Screen
SettingsComponent.color.hint:Color of the screen (e.g. black, $[1.0,1.0,1.0], $variable. Right-click to bring up a color-picker.)
SettingsComponent.color.allowedVals:[]
SettingsComponent.color.valType:str
SettingsComponent.color.updates:None
SettingsComponent.color.staticUpdater:None
SettingsComponent.colorSpace.default:'rgb'
SettingsComponent.colorSpace.val:rgb
SettingsComponent.colorSpace.allowedTypes:[]
SettingsComponent.colorSpace.allowedUpdates:None
SettingsComponent.colorSpace.readOnly:False
SettingsComponent.colorSpace.label:Color space
SettingsComponent.colorSpace.categ:Screen
SettingsComponent.colorSpace.hint:Needed if color is defined numerically (see PsychoPy documentation on color spaces)
SettingsComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv', 'hex']
SettingsComponent.colorSpace.valType:str
SettingsComponent.colorSpace.updates:None
SettingsComponent.colorSpace.staticUpdater:None
SettingsComponent.Units.default:'use prefs'
SettingsComponent.Units.val:use prefs
SettingsComponent.Units.allowedTypes:[]
SettingsComponent.Units.allowedUpdates:None
SettingsComponent.Units.readOnly:False
SettingsComponent.Units.label:Units
SettingsComponent.Units.categ:Screen
SettingsComponent.Units.hint:Units to use for window/stimulus coordinates (e.g. cm, pix, deg)
SettingsComponent.Units.allowedVals:['use prefs', 'deg', 'pix', 'cm', 'norm', 'height', 'degFlatPos', 'degFlat']
SettingsComponent.Units.valType:str
SettingsComponent.Units.updates:None
SettingsComponent.Units.staticUpdater:None
SettingsComponent.blendMode.default:'avg'
SettingsComponent.blendMode.val:avg
SettingsComponent.blendMode.allowedTypes:[]
SettingsComponent.blendMode.allowedUpdates:None
SettingsComponent.blendMode.readOnly:False
SettingsComponent.blendMode.label:Blend mode
SettingsComponent.blendMode.categ:Screen
SettingsComponent.blendMode.hint:Should new stimuli be added or averaged with the stimuli that have been drawn already
SettingsComponent.blendMode.allowedVals:['add', 'avg']
SettingsComponent.blendMode.valType:str
SettingsComponent.blendMode.updates:None
SettingsComponent.blendMode.staticUpdater:None
SettingsComponent.Show mouse.default:False
SettingsComponent.Show mouse.val:False
SettingsComponent.Show mouse.allowedTypes:[]
SettingsComponent.Show mouse.allowedUpdates:None
SettingsComponent.Show mouse.readOnly:False
SettingsComponent.Show mouse.label:Show mouse
SettingsComponent.Show mouse.categ:Screen
SettingsComponent.Show mouse.hint:Should the mouse be visible on screen?
SettingsComponent.Show mouse.allowedVals:[]
SettingsComponent.Show mouse.valType:bool
SettingsComponent.Show mouse.updates:None
SettingsComponent.Show mouse.staticUpdater:None
SettingsComponent.Data filename.default:u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])
SettingsComponent.Data filename.val:u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])
SettingsComponent.Data filename.allowedTypes:[]
SettingsComponent.Data filename.allowedUpdates:None
SettingsComponent.Data filename.readOnly:False
SettingsComponent.Data filename.label:Data filename
SettingsComponent.Data filename.categ:Data
SettingsComponent.Data filename.hint:Code to create your custom file name base. Don't give a file extension - this will be added.
SettingsComponent.Data filename.allowedVals:[]
SettingsComponent.Data filename.valType:code
SettingsComponent.Data filename.updates:None
SettingsComponent.Data filename.staticUpdater:None
SettingsComponent.Save log file.default:True
SettingsComponent.Save log file.val:True
SettingsComponent.Save log file.allowedTypes:[]
SettingsComponent.Save log file.allowedUpdates:None
SettingsComponent.Save log file.readOnly:False
SettingsComponent.Save log file.label:Save log file
SettingsComponent.Save log file.categ:Data
SettingsComponent.Save log file.hint:Save a detailed log (more detailed than the excel/csv files) of the entire experiment
SettingsComponent.Save log file.allowedVals:[]
SettingsComponent.Save log file.valType:bool
SettingsComponent.Save log file.updates:None
SettingsComponent.Save log file.staticUpdater:None
SettingsComponent.Save wide csv file.default:True
SettingsComponent.Save wide csv file.val:True
SettingsComponent.Save wide csv file.allowedTypes:[]
SettingsComponent.Save wide csv file.allowedUpdates:None
SettingsComponent.Save wide csv file.readOnly:False
SettingsComponent.Save wide csv file.label:Save csv file (trial-by-trial)
SettingsComponent.Save wide csv file.categ:Data
SettingsComponent.Save wide csv file.hint:Save data from loops in comma-separated-value (.csv) format for maximum portability
SettingsComponent.Save wide csv file.allowedVals:[]
SettingsComponent.Save wide csv file.valType:bool
SettingsComponent.Save wide csv file.updates:None
SettingsComponent.Save wide csv file.staticUpdater:None
SettingsComponent.Save csv file.default:False
SettingsComponent.Save csv file.val:False
SettingsComponent.Save csv file.allowedTypes:[]
SettingsComponent.Save csv file.allowedUpdates:None
SettingsComponent.Save csv file.readOnly:False
SettingsComponent.Save csv file.label:Save csv file (summaries)
SettingsComponent.Save csv file.categ:Data
SettingsComponent.Save csv file.hint:Save data from loops in comma-separated-value (.csv) format for maximum portability
SettingsComponent.Save csv file.allowedVals:[]
SettingsComponent.Save csv file.valType:bool
SettingsComponent.Save csv file.updates:None
SettingsComponent.Save csv file.staticUpdater:None
SettingsComponent.Save excel file.default:False
SettingsComponent.Save excel file.val:False
SettingsComponent.Save excel file.allowedTypes:[]
SettingsComponent.Save excel file.allowedUpdates:None
SettingsComponent.Save excel file.readOnly:False
SettingsComponent.Save excel file.label:Save excel file
SettingsComponent.Save excel file.categ:Data
SettingsComponent.Save excel file.hint:Save data from loops in Excel (.xlsx) format
SettingsComponent.Save excel file.allowedVals:[]
SettingsComponent.Save excel file.valType:bool
SettingsComponent.Save excel file.updates:None
SettingsComponent.Save excel file.staticUpdater:None
SettingsComponent.Save psydat file.default:True
SettingsComponent.Save psydat file.val:True
SettingsComponent.Save psydat file.allowedTypes:[]
SettingsComponent.Save psydat file.allowedUpdates:None
SettingsComponent.Save psydat file.readOnly:False
SettingsComponent.Save psydat file.label:Save psydat file
SettingsComponent.Save psydat file.categ:Data
SettingsComponent.Save psydat file.hint:Save data from loops in psydat format. This is useful for python programmers to generate analysis scripts.
SettingsComponent.Save psydat file.allowedVals:[True]
SettingsComponent.Save psydat file.valType:bool
SettingsComponent.Save psydat file.updates:None
SettingsComponent.Save psydat file.staticUpdater:None
SettingsComponent.logging level.default:exp
SettingsComponent.logging level.val:exp
SettingsComponent.logging level.allowedTypes:[]
SettingsComponent.logging level.allowedUpdates:None
SettingsComponent.logging level.readOnly:False
SettingsComponent.logging level.label:Logging level
SettingsComponent.logging level.categ:Data
SettingsComponent.logging level.hint:How much output do you want in the log files? ('error' is fewest messages, 'debug' is most)
SettingsComponent.logging level.allowedVals:['error', 'warning', 'data', 'exp', 'info', 'debug']
SettingsComponent.logging level.valType:code
SettingsComponent.logging level.updates:None
SettingsComponent.logging level.staticUpdater:None
SettingsComponent.HTML path.default:'html'
SettingsComponent.HTML path.val:html
SettingsComponent.HTML path.allowedTypes:[]
SettingsComponent.HTML path.allowedUpdates:None
SettingsComponent.HTML path.readOnly:False
SettingsComponent.HTML path.label:Output path
SettingsComponent.HTML path.categ:Online
SettingsComponent.HTML path.hint:Place the HTML files will be saved locally 
SettingsComponent.HTML path.allowedVals:[]
SettingsComponent.HTML path.valType:str
SettingsComponent.HTML path.updates:None
SettingsComponent.HTML path.staticUpdater:None
SettingsComponent.JS libs.default:'packaged'
SettingsComponent.JS libs.val:packaged
SettingsComponent.JS libs.allowedTypes:[]
SettingsComponent.JS libs.allowedUpdates:None
SettingsComponent.JS libs.readOnly:False
SettingsComponent.JS libs.label:JS libs
SettingsComponent.JS libs.categ:Online
SettingsComponent.JS libs.hint:Should we package a copy of the JS libs or useremote copies (http:/www.psychopy.org/js)?
SettingsComponent.JS libs.allowedVals:['packaged']
SettingsComponent.JS libs.valType:str
SettingsComponent.JS libs.updates:None
SettingsComponent.JS libs.staticUpdater:None
SettingsComponent.Completion URL.default:'completionURL'
SettingsComponent.Completion URL.val:completionURL
SettingsComponent.Completion URL.allowedTypes:[]
SettingsComponent.Completion URL.allowedUpdates:None
SettingsComponent.Completion URL.readOnly:False
SettingsComponent.Completion URL.label:Completion URL
SettingsComponent.Completion URL.categ:Online
SettingsComponent.Completion URL.hint:Where should participants be redirected after the experiment INSERT COMPLETION URL E.G.?
SettingsComponent.Completion URL.allowedVals:[]
SettingsComponent.Completion URL.valType:str
SettingsComponent.Completion URL.updates:None
SettingsComponent.Completion URL.staticUpdater:None
SliderComponent.order:['name', 'size', 'pos', 'ticks', 'labels', 'granularity', 'font', 'flip', 'color', 'styles']
SliderComponent.name.default:slider
SliderComponent.name.val:slider
SliderComponent.name.allowedTypes:[]
SliderComponent.name.allowedUpdates:None
SliderComponent.name.readOnly:False
SliderComponent.name.label:Name
SliderComponent.name.categ:Basic
SliderComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
SliderComponent.name.allowedVals:[]
SliderComponent.name.valType:code
SliderComponent.name.staticUpdater:None
SliderComponent.startType.default:'time (s)'
SliderComponent.startType.val:time (s)
SliderComponent.startType.allowedTypes:[]
SliderComponent.startType.allowedUpdates:None
SliderComponent.startType.readOnly:False
SliderComponent.startType.label:start type
SliderComponent.startType.categ:Basic
SliderComponent.startType.hint:How do you want to define your start point?
SliderComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
SliderComponent.startType.valType:str
SliderComponent.startType.updates:None
SliderComponent.startType.staticUpdater:None
SliderComponent.stopType.default:'condition'
SliderComponent.stopType.val:condition
SliderComponent.stopType.allowedTypes:[]
SliderComponent.stopType.allowedUpdates:None
SliderComponent.stopType.readOnly:False
SliderComponent.stopType.label:stop type
SliderComponent.stopType.categ:Basic
SliderComponent.stopType.hint:How do you want to define your end point?
SliderComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
SliderComponent.stopType.valType:str
SliderComponent.stopType.updates:None
SliderComponent.stopType.staticUpdater:None
SliderComponent.startVal.default:0.0
SliderComponent.startVal.val:0.0
SliderComponent.startVal.allowedTypes:[]
SliderComponent.startVal.allowedUpdates:None
SliderComponent.startVal.readOnly:False
SliderComponent.startVal.label:Start
SliderComponent.startVal.categ:Basic
SliderComponent.startVal.hint:When does the component start?
SliderComponent.startVal.allowedVals:[]
SliderComponent.startVal.valType:code
SliderComponent.startVal.updates:None
SliderComponent.startVal.staticUpdater:None
SliderComponent.stopVal.default:
SliderComponent.stopVal.val:
SliderComponent.stopVal.allowedTypes:[]
SliderComponent.stopVal.allowedUpdates:[]
SliderComponent.stopVal.readOnly:False
SliderComponent.stopVal.label:Stop
SliderComponent.stopVal.categ:Basic
SliderComponent.stopVal.hint:When does the component end? (blank is endless)
SliderComponent.stopVal.allowedVals:[]
SliderComponent.stopVal.valType:code
SliderComponent.stopVal.updates:constant
SliderComponent.stopVal.staticUpdater:None
SliderComponent.startEstim.default:
SliderComponent.startEstim.val:
SliderComponent.startEstim.allowedTypes:[]
SliderComponent.startEstim.allowedUpdates:None
SliderComponent.startEstim.readOnly:False
SliderComponent.startEstim.label:Expected start (s)
SliderComponent.startEstim.categ:Basic
SliderComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
SliderComponent.startEstim.allowedVals:[]
SliderComponent.startEstim.valType:code
SliderComponent.startEstim.updates:None
SliderComponent.startEstim.staticUpdater:None
SliderComponent.durationEstim.default:
SliderComponent.durationEstim.val:
SliderComponent.durationEstim.allowedTypes:[]
SliderComponent.durationEstim.allowedUpdates:None
SliderComponent.durationEstim.readOnly:False
SliderComponent.durationEstim.label:Expected duration (s)
SliderComponent.durationEstim.categ:Basic
SliderComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
SliderComponent.durationEstim.allowedVals:[]
SliderComponent.durationEstim.valType:code
SliderComponent.durationEstim.updates:None
SliderComponent.durationEstim.staticUpdater:None
SliderComponent.units.default:'from exp settings'
SliderComponent.units.val:from exp settings
SliderComponent.units.allowedTypes:[]
SliderComponent.units.allowedUpdates:None
SliderComponent.units.readOnly:False
SliderComponent.units.label:Units
SliderComponent.units.categ:Basic
SliderComponent.units.hint:Units of dimensions for this stimulus
SliderComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
SliderComponent.units.valType:str
SliderComponent.units.updates:None
SliderComponent.units.staticUpdater:None
SliderComponent.color.default:'LightGray'
SliderComponent.color.val:LightGray
SliderComponent.color.allowedTypes:[]
SliderComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.color.readOnly:False
SliderComponent.color.label:Color
SliderComponent.color.categ:Appearance
SliderComponent.color.hint:Color of the lines and labels (might beoverridden by the style setting)
SliderComponent.color.allowedVals:[]
SliderComponent.color.valType:str
SliderComponent.color.updates:constant
SliderComponent.color.staticUpdater:None
SliderComponent.opacity.default:1
SliderComponent.opacity.val:1
SliderComponent.opacity.allowedTypes:[]
SliderComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.opacity.readOnly:False
SliderComponent.opacity.label:Opacity
SliderComponent.opacity.categ:Basic
SliderComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
SliderComponent.opacity.allowedVals:[]
SliderComponent.opacity.valType:code
SliderComponent.opacity.updates:constant
SliderComponent.opacity.staticUpdater:None
SliderComponent.colorSpace.default:'rgb'
SliderComponent.colorSpace.val:rgb
SliderComponent.colorSpace.allowedTypes:[]
SliderComponent.colorSpace.allowedUpdates:None
SliderComponent.colorSpace.readOnly:False
SliderComponent.colorSpace.label:Color space
SliderComponent.colorSpace.categ:Basic
SliderComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
SliderComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
SliderComponent.colorSpace.valType:str
SliderComponent.colorSpace.updates:constant
SliderComponent.colorSpace.staticUpdater:None
SliderComponent.pos.default:(0, -0.4)
SliderComponent.pos.val:(0, -0.4)
SliderComponent.pos.allowedTypes:[]
SliderComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.pos.readOnly:False
SliderComponent.pos.label:Position [x,y]
SliderComponent.pos.categ:Basic
SliderComponent.pos.hint:x,y position on the screen
SliderComponent.pos.allowedVals:[]
SliderComponent.pos.valType:code
SliderComponent.pos.updates:constant
SliderComponent.pos.staticUpdater:None
SliderComponent.size.default:(1.0, 0.1)
SliderComponent.size.val:(1.0, 0.1)
SliderComponent.size.allowedTypes:[]
SliderComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.size.readOnly:False
SliderComponent.size.label:Size
SliderComponent.size.categ:Basic
SliderComponent.size.hint:Size on screen. e.g. (500,10) pix for horizontal,(10,500) pix for vertical
SliderComponent.size.allowedVals:[]
SliderComponent.size.valType:code
SliderComponent.size.updates:constant
SliderComponent.size.staticUpdater:None
SliderComponent.ori.default:0
SliderComponent.ori.val:0
SliderComponent.ori.allowedTypes:[]
SliderComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.ori.readOnly:False
SliderComponent.ori.label:Orientation
SliderComponent.ori.categ:Basic
SliderComponent.ori.hint:Orientation of this stimulus (in deg)
SliderComponent.ori.allowedVals:[]
SliderComponent.ori.valType:code
SliderComponent.ori.updates:constant
SliderComponent.ori.staticUpdater:None
SliderComponent.ticks.default:(1, 2, 3, 4, 5)
SliderComponent.ticks.val:(1, 2, 3, 4, 5)
SliderComponent.ticks.allowedTypes:[]
SliderComponent.ticks.allowedUpdates:['constant', 'set every repeat']
SliderComponent.ticks.readOnly:False
SliderComponent.ticks.label:Ticks
SliderComponent.ticks.categ:Basic
SliderComponent.ticks.hint:Tick positions (numerical) on the scale, separated by commas
SliderComponent.ticks.allowedVals:[]
SliderComponent.ticks.valType:list
SliderComponent.ticks.updates:constant
SliderComponent.ticks.staticUpdater:None
SliderComponent.labels.default:[]
SliderComponent.labels.val:
SliderComponent.labels.allowedTypes:[]
SliderComponent.labels.allowedUpdates:['constant', 'set every repeat']
SliderComponent.labels.readOnly:False
SliderComponent.labels.label:Labels
SliderComponent.labels.categ:Basic
SliderComponent.labels.hint:Labels for the tick marks on the scale, separated by commas
SliderComponent.labels.allowedVals:[]
SliderComponent.labels.valType:list
SliderComponent.labels.updates:constant
SliderComponent.labels.staticUpdater:None
SliderComponent.granularity.default:0
SliderComponent.granularity.val:0
SliderComponent.granularity.allowedTypes:[]
SliderComponent.granularity.allowedUpdates:['constant', 'set every repeat']
SliderComponent.granularity.readOnly:False
SliderComponent.granularity.label:Granularity
SliderComponent.granularity.categ:Basic
SliderComponent.granularity.hint:Specifies the minimum step size (0 for a continuous scale, 1 for integer rating scale)
SliderComponent.granularity.allowedVals:[]
SliderComponent.granularity.valType:code
SliderComponent.granularity.updates:constant
SliderComponent.granularity.staticUpdater:None
SliderComponent.forceEndRoutine.default:True
SliderComponent.forceEndRoutine.val:True
SliderComponent.forceEndRoutine.allowedTypes:[]
SliderComponent.forceEndRoutine.allowedUpdates:[]
SliderComponent.forceEndRoutine.readOnly:False
SliderComponent.forceEndRoutine.label:Force end of Routine
SliderComponent.forceEndRoutine.categ:Basic
SliderComponent.forceEndRoutine.hint:Should setting a rating (releasing the mouse) cause the end of the routine (e.g. trial)?
SliderComponent.forceEndRoutine.allowedVals:[]
SliderComponent.forceEndRoutine.valType:bool
SliderComponent.forceEndRoutine.updates:constant
SliderComponent.forceEndRoutine.staticUpdater:None
SliderComponent.flip.default:False
SliderComponent.flip.val:False
SliderComponent.flip.allowedTypes:[]
SliderComponent.flip.allowedUpdates:[]
SliderComponent.flip.readOnly:False
SliderComponent.flip.label:Flip
SliderComponent.flip.categ:Appearance
SliderComponent.flip.hint:By default the labels will be on the bottom or left of the scale, but this can bee flipped to the other side.
SliderComponent.flip.allowedVals:[]
SliderComponent.flip.valType:bool
SliderComponent.flip.updates:constant
SliderComponent.flip.staticUpdater:None
SliderComponent.font.default:'HelveticaBold'
SliderComponent.font.val:HelveticaBold
SliderComponent.font.allowedTypes:[]
SliderComponent.font.allowedUpdates:['constant', 'set every repeat']
SliderComponent.font.readOnly:False
SliderComponent.font.label:Font
SliderComponent.font.categ:Appearance
SliderComponent.font.hint:Font for the labels
SliderComponent.font.allowedVals:[]
SliderComponent.font.valType:str
SliderComponent.font.updates:constant
SliderComponent.font.staticUpdater:None
SliderComponent.styles.default:['rating']
SliderComponent.styles.val:['rating']
SliderComponent.styles.allowedTypes:[]
SliderComponent.styles.allowedUpdates:None
SliderComponent.styles.readOnly:False
SliderComponent.styles.label:Styles
SliderComponent.styles.categ:Appearance
SliderComponent.styles.hint:Styles determine the appearance of the slider
SliderComponent.styles.allowedVals:['slider', 'rating', 'labels45', 'whiteOnBlack', 'triangleMarker']
SliderComponent.styles.valType:fixedList
SliderComponent.styles.updates:constant
SliderComponent.styles.staticUpdater:None
SliderComponent.storeRating.default:True
SliderComponent.storeRating.val:True
SliderComponent.storeRating.allowedTypes:[]
SliderComponent.storeRating.allowedUpdates:[]
SliderComponent.storeRating.readOnly:False
SliderComponent.storeRating.label:Store rating
SliderComponent.storeRating.categ:Data
SliderComponent.storeRating.hint:store the rating
SliderComponent.storeRating.allowedVals:[]
SliderComponent.storeRating.valType:bool
SliderComponent.storeRating.updates:constant
SliderComponent.storeRating.staticUpdater:None
SliderComponent.storeRatingTime.default:True
SliderComponent.storeRatingTime.val:True
SliderComponent.storeRatingTime.allowedTypes:[]
SliderComponent.storeRatingTime.allowedUpdates:[]
SliderComponent.storeRatingTime.readOnly:False
SliderComponent.storeRatingTime.label:Store rating time
SliderComponent.storeRatingTime.categ:Data
SliderComponent.storeRatingTime.hint:Store the time taken to make the choice (in seconds)
SliderComponent.storeRatingTime.allowedVals:[]
SliderComponent.storeRatingTime.valType:bool
SliderComponent.storeRatingTime.updates:constant
SliderComponent.storeRatingTime.staticUpdater:None
SliderComponent.storeHistory.default:False
SliderComponent.storeHistory.val:False
SliderComponent.storeHistory.allowedTypes:[]
SliderComponent.storeHistory.allowedUpdates:[]
SliderComponent.storeHistory.readOnly:False
SliderComponent.storeHistory.label:Store history
SliderComponent.storeHistory.categ:Data
SliderComponent.storeHistory.hint:store the history of (selection, time)
SliderComponent.storeHistory.allowedVals:[]
SliderComponent.storeHistory.valType:bool
SliderComponent.storeHistory.updates:constant
SliderComponent.storeHistory.staticUpdater:None
SoundComponent.order:['sound', 'volume']
SoundComponent.name.default:sound_1
SoundComponent.name.val:sound_1
SoundComponent.name.allowedTypes:[]
SoundComponent.name.allowedUpdates:None
SoundComponent.name.readOnly:False
SoundComponent.name.label:Name
SoundComponent.name.categ:Basic
SoundComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
SoundComponent.name.allowedVals:[]
SoundComponent.name.valType:code
SoundComponent.name.staticUpdater:None
SoundComponent.startType.default:'time (s)'
SoundComponent.startType.val:time (s)
SoundComponent.startType.allowedTypes:[]
SoundComponent.startType.allowedUpdates:None
SoundComponent.startType.readOnly:False
SoundComponent.startType.label:start type
SoundComponent.startType.categ:Basic
SoundComponent.startType.hint:How do you want to define your start point?
SoundComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
SoundComponent.startType.valType:str
SoundComponent.startType.updates:None
SoundComponent.startType.staticUpdater:None
SoundComponent.stopType.default:'duration (s)'
SoundComponent.stopType.val:duration (s)
SoundComponent.stopType.allowedTypes:[]
SoundComponent.stopType.allowedUpdates:None
SoundComponent.stopType.readOnly:False
SoundComponent.stopType.label:stop type
SoundComponent.stopType.categ:Basic
SoundComponent.stopType.hint:The maximum duration of a sound in seconds
SoundComponent.stopType.allowedVals:['duration (s)']
SoundComponent.stopType.valType:str
SoundComponent.stopType.updates:None
SoundComponent.stopType.staticUpdater:None
SoundComponent.startVal.default:0.0
SoundComponent.startVal.val:0.0
SoundComponent.startVal.allowedTypes:[]
SoundComponent.startVal.allowedUpdates:None
SoundComponent.startVal.readOnly:False
SoundComponent.startVal.label:Start
SoundComponent.startVal.categ:Basic
SoundComponent.startVal.hint:When does the component start?
SoundComponent.startVal.allowedVals:[]
SoundComponent.startVal.valType:code
SoundComponent.startVal.updates:None
SoundComponent.startVal.staticUpdater:None
SoundComponent.stopVal.default:1.0
SoundComponent.stopVal.val:1.0
SoundComponent.stopVal.allowedTypes:[]
SoundComponent.stopVal.allowedUpdates:[]
SoundComponent.stopVal.readOnly:False
SoundComponent.stopVal.label:Stop
SoundComponent.stopVal.categ:Basic
SoundComponent.stopVal.hint:When does the component end? (blank to use the duration of the media)
SoundComponent.stopVal.allowedVals:[]
SoundComponent.stopVal.valType:code
SoundComponent.stopVal.updates:constant
SoundComponent.stopVal.staticUpdater:None
SoundComponent.startEstim.default:
SoundComponent.startEstim.val:
SoundComponent.startEstim.allowedTypes:[]
SoundComponent.startEstim.allowedUpdates:None
SoundComponent.startEstim.readOnly:False
SoundComponent.startEstim.label:Expected start (s)
SoundComponent.startEstim.categ:Basic
SoundComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
SoundComponent.startEstim.allowedVals:[]
SoundComponent.startEstim.valType:code
SoundComponent.startEstim.updates:None
SoundComponent.startEstim.staticUpdater:None
SoundComponent.durationEstim.default:
SoundComponent.durationEstim.val:
SoundComponent.durationEstim.allowedTypes:[]
SoundComponent.durationEstim.allowedUpdates:None
SoundComponent.durationEstim.readOnly:False
SoundComponent.durationEstim.label:Expected duration (s)
SoundComponent.durationEstim.categ:Basic
SoundComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
SoundComponent.durationEstim.allowedVals:[]
SoundComponent.durationEstim.valType:code
SoundComponent.durationEstim.updates:None
SoundComponent.durationEstim.staticUpdater:None
SoundComponent.sound.default:'A'
SoundComponent.sound.val:A
SoundComponent.sound.allowedTypes:[]
SoundComponent.sound.allowedUpdates:['constant', 'set every repeat']
SoundComponent.sound.readOnly:False
SoundComponent.sound.label:Sound
SoundComponent.sound.categ:Basic
SoundComponent.sound.hint:A sound can be a note name (e.g. A or Bf), a number to specify Hz (e.g. 440) or a filename
SoundComponent.sound.allowedVals:[]
SoundComponent.sound.valType:str
SoundComponent.sound.updates:constant
SoundComponent.sound.staticUpdater:None
SoundComponent.volume.default:1
SoundComponent.volume.val:1
SoundComponent.volume.allowedTypes:[]
SoundComponent.volume.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SoundComponent.volume.readOnly:False
SoundComponent.volume.label:Volume
SoundComponent.volume.categ:Basic
SoundComponent.volume.hint:The volume (in range 0 to 1)
SoundComponent.volume.allowedVals:[]
SoundComponent.volume.valType:code
SoundComponent.volume.updates:constant
SoundComponent.volume.staticUpdater:None
SoundComponent.syncScreenRefresh.default:True
SoundComponent.syncScreenRefresh.val:True
SoundComponent.syncScreenRefresh.allowedTypes:[]
SoundComponent.syncScreenRefresh.allowedUpdates:None
SoundComponent.syncScreenRefresh.readOnly:False
SoundComponent.syncScreenRefresh.label:sync RT with screen
SoundComponent.syncScreenRefresh.categ:Basic
SoundComponent.syncScreenRefresh.hint:A reaction time to a sound stimulus should be based on when the screen flipped
SoundComponent.syncScreenRefresh.allowedVals:[]
SoundComponent.syncScreenRefresh.valType:bool
SoundComponent.syncScreenRefresh.updates:constant
SoundComponent.syncScreenRefresh.staticUpdater:None
StaticComponent.order:['name']
StaticComponent.name.default:ISI
StaticComponent.name.val:ISI
StaticComponent.name.allowedTypes:[]
StaticComponent.name.allowedUpdates:None
StaticComponent.name.readOnly:False
StaticComponent.name.label:Name
StaticComponent.name.categ:Basic
StaticComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
StaticComponent.name.allowedVals:[]
StaticComponent.name.valType:code
StaticComponent.name.staticUpdater:None
StaticComponent.startType.default:'time (s)'
StaticComponent.startType.val:time (s)
StaticComponent.startType.allowedTypes:[]
StaticComponent.startType.allowedUpdates:None
StaticComponent.startType.readOnly:False
StaticComponent.startType.label:
StaticComponent.startType.categ:Basic
StaticComponent.startType.hint:How do you want to define your start point?
StaticComponent.startType.allowedVals:['time (s)', 'frame N']
StaticComponent.startType.valType:str
StaticComponent.startType.updates:None
StaticComponent.startType.staticUpdater:None
StaticComponent.stopType.default:'duration (s)'
StaticComponent.stopType.val:duration (s)
StaticComponent.stopType.allowedTypes:[]
StaticComponent.stopType.allowedUpdates:None
StaticComponent.stopType.readOnly:False
StaticComponent.stopType.label:
StaticComponent.stopType.categ:Basic
StaticComponent.stopType.hint:How do you want to define your end point?
StaticComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N']
StaticComponent.stopType.valType:str
StaticComponent.stopType.updates:None
StaticComponent.stopType.staticUpdater:None
StaticComponent.startVal.default:0.0
StaticComponent.startVal.val:0.0
StaticComponent.startVal.allowedTypes:[]
StaticComponent.startVal.allowedUpdates:None
StaticComponent.startVal.readOnly:False
StaticComponent.startVal.label:
StaticComponent.startVal.categ:Basic
StaticComponent.startVal.hint:When does the component start?
StaticComponent.startVal.allowedVals:[]
StaticComponent.startVal.valType:code
StaticComponent.startVal.updates:None
StaticComponent.startVal.staticUpdater:None
StaticComponent.stopVal.default:0.5
StaticComponent.stopVal.val:0.5
StaticComponent.stopVal.allowedTypes:[]
StaticComponent.stopVal.allowedUpdates:[]
StaticComponent.stopVal.readOnly:False
StaticComponent.stopVal.label:
StaticComponent.stopVal.categ:Basic
StaticComponent.stopVal.hint:When does the component end? (blank is endless)
StaticComponent.stopVal.allowedVals:[]
StaticComponent.stopVal.valType:code
StaticComponent.stopVal.updates:constant
StaticComponent.stopVal.staticUpdater:None
StaticComponent.startEstim.default:
StaticComponent.startEstim.val:
StaticComponent.startEstim.allowedTypes:[]
StaticComponent.startEstim.allowedUpdates:None
StaticComponent.startEstim.readOnly:False
StaticComponent.startEstim.label:
StaticComponent.startEstim.categ:Basic
StaticComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
StaticComponent.startEstim.allowedVals:[]
StaticComponent.startEstim.valType:code
StaticComponent.startEstim.updates:None
StaticComponent.startEstim.staticUpdater:None
StaticComponent.durationEstim.default:
StaticComponent.durationEstim.val:
StaticComponent.durationEstim.allowedTypes:[]
StaticComponent.durationEstim.allowedUpdates:None
StaticComponent.durationEstim.readOnly:False
StaticComponent.durationEstim.label:
StaticComponent.durationEstim.categ:Basic
StaticComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
StaticComponent.durationEstim.allowedVals:[]
StaticComponent.durationEstim.valType:code
StaticComponent.durationEstim.updates:None
StaticComponent.durationEstim.staticUpdater:None
StaticComponent.code.default:
StaticComponent.code.val:
StaticComponent.code.allowedTypes:[]
StaticComponent.code.allowedUpdates:None
StaticComponent.code.readOnly:False
StaticComponent.code.label:Custom code
StaticComponent.code.categ:Basic
StaticComponent.code.hint:Custom code to be run during the static period (after updates)
StaticComponent.code.allowedVals:[]
StaticComponent.code.valType:code
StaticComponent.code.updates:None
StaticComponent.code.staticUpdater:None
TextComponent.order:['name']
TextComponent.name.default:text
TextComponent.name.val:text
TextComponent.name.allowedTypes:[]
TextComponent.name.allowedUpdates:None
TextComponent.name.readOnly:False
TextComponent.name.label:Name
TextComponent.name.categ:Basic
TextComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
TextComponent.name.allowedVals:[]
TextComponent.name.valType:code
TextComponent.name.staticUpdater:None
TextComponent.startType.default:'time (s)'
TextComponent.startType.val:time (s)
TextComponent.startType.allowedTypes:[]
TextComponent.startType.allowedUpdates:None
TextComponent.startType.readOnly:False
TextComponent.startType.label:start type
TextComponent.startType.categ:Basic
TextComponent.startType.hint:How do you want to define your start point?
TextComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
TextComponent.startType.valType:str
TextComponent.startType.updates:None
TextComponent.startType.staticUpdater:None
TextComponent.stopType.default:'duration (s)'
TextComponent.stopType.val:duration (s)
TextComponent.stopType.allowedTypes:[]
TextComponent.stopType.allowedUpdates:None
TextComponent.stopType.readOnly:False
TextComponent.stopType.label:stop type
TextComponent.stopType.categ:Basic
TextComponent.stopType.hint:How do you want to define your end point?
TextComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
TextComponent.stopType.valType:str
TextComponent.stopType.updates:None
TextComponent.stopType.staticUpdater:None
TextComponent.startVal.default:0.0
TextComponent.startVal.val:0.0
TextComponent.startVal.allowedTypes:[]
TextComponent.startVal.allowedUpdates:None
TextComponent.startVal.readOnly:False
TextComponent.startVal.label:Start
TextComponent.startVal.categ:Basic
TextComponent.startVal.hint:When does the component start?
TextComponent.startVal.allowedVals:[]
TextComponent.startVal.valType:code
TextComponent.startVal.updates:None
TextComponent.startVal.staticUpdater:None
TextComponent.stopVal.default:1.0
TextComponent.stopVal.val:1.0
TextComponent.stopVal.allowedTypes:[]
TextComponent.stopVal.allowedUpdates:[]
TextComponent.stopVal.readOnly:False
TextComponent.stopVal.label:Stop
TextComponent.stopVal.categ:Basic
TextComponent.stopVal.hint:When does the component end? (blank is endless)
TextComponent.stopVal.allowedVals:[]
TextComponent.stopVal.valType:code
TextComponent.stopVal.updates:constant
TextComponent.stopVal.staticUpdater:None
TextComponent.startEstim.default:
TextComponent.startEstim.val:
TextComponent.startEstim.allowedTypes:[]
TextComponent.startEstim.allowedUpdates:None
TextComponent.startEstim.readOnly:False
TextComponent.startEstim.label:Expected start (s)
TextComponent.startEstim.categ:Basic
TextComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
TextComponent.startEstim.allowedVals:[]
TextComponent.startEstim.valType:code
TextComponent.startEstim.updates:None
TextComponent.startEstim.staticUpdater:None
TextComponent.durationEstim.default:
TextComponent.durationEstim.val:
TextComponent.durationEstim.allowedTypes:[]
TextComponent.durationEstim.allowedUpdates:None
TextComponent.durationEstim.readOnly:False
TextComponent.durationEstim.label:Expected duration (s)
TextComponent.durationEstim.categ:Basic
TextComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
TextComponent.durationEstim.allowedVals:[]
TextComponent.durationEstim.valType:code
TextComponent.durationEstim.updates:None
TextComponent.durationEstim.staticUpdater:None
TextComponent.units.default:'from exp settings'
TextComponent.units.val:from exp settings
TextComponent.units.allowedTypes:[]
TextComponent.units.allowedUpdates:None
TextComponent.units.readOnly:False
TextComponent.units.label:Units
TextComponent.units.categ:Advanced
TextComponent.units.hint:Units of dimensions for this stimulus
TextComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
TextComponent.units.valType:str
TextComponent.units.updates:None
TextComponent.units.staticUpdater:None
TextComponent.color.default:'white'
TextComponent.color.val:white
TextComponent.color.allowedTypes:[]
TextComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.color.readOnly:False
TextComponent.color.label:Color
TextComponent.color.categ:Basic
TextComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
TextComponent.color.allowedVals:[]
TextComponent.color.valType:str
TextComponent.color.updates:constant
TextComponent.color.staticUpdater:None
TextComponent.opacity.default:1
TextComponent.opacity.val:1
TextComponent.opacity.allowedTypes:[]
TextComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.opacity.readOnly:False
TextComponent.opacity.label:Opacity
TextComponent.opacity.categ:Advanced
TextComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
TextComponent.opacity.allowedVals:[]
TextComponent.opacity.valType:code
TextComponent.opacity.updates:constant
TextComponent.opacity.staticUpdater:None
TextComponent.colorSpace.default:'rgb'
TextComponent.colorSpace.val:rgb
TextComponent.colorSpace.allowedTypes:[]
TextComponent.colorSpace.allowedUpdates:None
TextComponent.colorSpace.readOnly:False
TextComponent.colorSpace.label:Color space
TextComponent.colorSpace.categ:Advanced
TextComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
TextComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
TextComponent.colorSpace.valType:str
TextComponent.colorSpace.updates:constant
TextComponent.colorSpace.staticUpdater:None
TextComponent.pos.default:(0, 0)
TextComponent.pos.val:(0, 0)
TextComponent.pos.allowedTypes:[]
TextComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.pos.readOnly:False
TextComponent.pos.label:Position [x,y]
TextComponent.pos.categ:Basic
TextComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
TextComponent.pos.allowedVals:[]
TextComponent.pos.valType:code
TextComponent.pos.updates:constant
TextComponent.pos.staticUpdater:None
TextComponent.ori.default:0
TextComponent.ori.val:0
TextComponent.ori.allowedTypes:[]
TextComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.ori.readOnly:False
TextComponent.ori.label:Orientation
TextComponent.ori.categ:Advanced
TextComponent.ori.hint:Orientation of this stimulus (in deg)
TextComponent.ori.allowedVals:[]
TextComponent.ori.valType:code
TextComponent.ori.updates:constant
TextComponent.ori.staticUpdater:None
TextComponent.text.default:'Any text\n\nincluding line breaks'
TextComponent.text.val:Any text

including line breaks
TextComponent.text.allowedTypes:[]
TextComponent.text.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.text.readOnly:False
TextComponent.text.label:Text
TextComponent.text.categ:Basic
TextComponent.text.hint:The text to be displayed
TextComponent.text.allowedVals:[]
TextComponent.text.valType:str
TextComponent.text.updates:constant
TextComponent.text.staticUpdater:None
TextComponent.font.default:'Arial'
TextComponent.font.val:Arial
TextComponent.font.allowedTypes:[]
TextComponent.font.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.font.readOnly:False
TextComponent.font.label:Font
TextComponent.font.categ:Basic
TextComponent.font.hint:The font name (e.g. Comic Sans)
TextComponent.font.allowedVals:[]
TextComponent.font.valType:str
TextComponent.font.updates:constant
TextComponent.font.staticUpdater:None
TextComponent.letterHeight.default:0.1
TextComponent.letterHeight.val:0.1
TextComponent.letterHeight.allowedTypes:[]
TextComponent.letterHeight.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.letterHeight.readOnly:False
TextComponent.letterHeight.label:Letter height
TextComponent.letterHeight.categ:Basic
TextComponent.letterHeight.hint:Specifies the height of the letter (the width is then determined by the font)
TextComponent.letterHeight.allowedVals:[]
TextComponent.letterHeight.valType:code
TextComponent.letterHeight.updates:constant
TextComponent.letterHeight.staticUpdater:None
TextComponent.wrapWidth.default:
TextComponent.wrapWidth.val:
TextComponent.wrapWidth.allowedTypes:[]
TextComponent.wrapWidth.allowedUpdates:['constant']
TextComponent.wrapWidth.readOnly:False
TextComponent.wrapWidth.label:Wrap width
TextComponent.wrapWidth.categ:Advanced
TextComponent.wrapWidth.hint:How wide should the text get when it wraps? (in the specified units)
TextComponent.wrapWidth.allowedVals:[]
TextComponent.wrapWidth.valType:code
TextComponent.wrapWidth.updates:constant
TextComponent.wrapWidth.staticUpdater:None
TextComponent.flip.default:''
TextComponent.flip.val:
TextComponent.flip.allowedTypes:[]
TextComponent.flip.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.flip.readOnly:False
TextComponent.flip.label:Flip (mirror)
TextComponent.flip.categ:Advanced
TextComponent.flip.hint:horiz = left-right reversed; vert = up-down reversed; $var = variable
TextComponent.flip.allowedVals:[]
TextComponent.flip.valType:str
TextComponent.flip.updates:constant
TextComponent.flip.staticUpdater:None
TextComponent.languageStyle.default:'LTR'
TextComponent.languageStyle.val:LTR
TextComponent.languageStyle.allowedTypes:[]
TextComponent.languageStyle.allowedUpdates:None
TextComponent.languageStyle.readOnly:False
TextComponent.languageStyle.label:Language style
TextComponent.languageStyle.categ:Advanced
TextComponent.languageStyle.hint:Handle right-to-left (RTL) languages and Arabic reshaping
TextComponent.languageStyle.allowedVals:['LTR', 'RTL', 'Arabic']
TextComponent.languageStyle.valType:str
TextComponent.languageStyle.updates:None
TextComponent.languageStyle.staticUpdater:None
UnknownComponent.order:['name']
UnknownComponent.name.default:
UnknownComponent.name.val:
UnknownComponent.name.allowedTypes:[]
UnknownComponent.name.allowedUpdates:None
UnknownComponent.name.readOnly:False
UnknownComponent.name.label:Name
UnknownComponent.name.categ:Basic
UnknownComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
UnknownComponent.name.allowedVals:[]
UnknownComponent.name.valType:code
UnknownComponent.name.staticUpdater:None
VariableComponent.order:['name', 'startExpValue', 'saveStartExp', 'startRoutineValue', 'saveStartRoutine', 'startFrameValue', 'saveFrameValue', 'saveEndRoutine', 'saveEndExp']
VariableComponent.name.default:var1
VariableComponent.name.val:var1
VariableComponent.name.allowedTypes:[]
VariableComponent.name.allowedUpdates:None
VariableComponent.name.readOnly:False
VariableComponent.name.label:Name
VariableComponent.name.categ:Basic
VariableComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
VariableComponent.name.allowedVals:[]
VariableComponent.name.valType:code
VariableComponent.name.staticUpdater:None
VariableComponent.startType.default:'time (s)'
VariableComponent.startType.val:time (s)
VariableComponent.startType.allowedTypes:[]
VariableComponent.startType.allowedUpdates:None
VariableComponent.startType.readOnly:False
VariableComponent.startType.label:start type
VariableComponent.startType.categ:Basic
VariableComponent.startType.hint:How do you want to define your start point?
VariableComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
VariableComponent.startType.valType:str
VariableComponent.startType.updates:None
VariableComponent.startType.staticUpdater:None
VariableComponent.stopType.default:'duration (s)'
VariableComponent.stopType.val:duration (s)
VariableComponent.stopType.allowedTypes:[]
VariableComponent.stopType.allowedUpdates:None
VariableComponent.stopType.readOnly:False
VariableComponent.stopType.label:stop type
VariableComponent.stopType.categ:Basic
VariableComponent.stopType.hint:How do you want to define your end point?
VariableComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
VariableComponent.stopType.valType:str
VariableComponent.stopType.updates:None
VariableComponent.stopType.staticUpdater:None
VariableComponent.startVal.default:
VariableComponent.startVal.val:
VariableComponent.startVal.allowedTypes:[]
VariableComponent.startVal.allowedUpdates:None
VariableComponent.startVal.readOnly:False
VariableComponent.startVal.label:Start
VariableComponent.startVal.categ:Basic
VariableComponent.startVal.hint:When does the component start?
VariableComponent.startVal.allowedVals:[]
VariableComponent.startVal.valType:code
VariableComponent.startVal.updates:None
VariableComponent.startVal.staticUpdater:None
VariableComponent.stopVal.default:
VariableComponent.stopVal.val:
VariableComponent.stopVal.allowedTypes:[]
VariableComponent.stopVal.allowedUpdates:[]
VariableComponent.stopVal.readOnly:False
VariableComponent.stopVal.label:Stop
VariableComponent.stopVal.categ:Basic
VariableComponent.stopVal.hint:When does the component end? (blank is endless)
VariableComponent.stopVal.allowedVals:[]
VariableComponent.stopVal.valType:code
VariableComponent.stopVal.updates:constant
VariableComponent.stopVal.staticUpdater:None
VariableComponent.startEstim.default:
VariableComponent.startEstim.val:
VariableComponent.startEstim.allowedTypes:[]
VariableComponent.startEstim.allowedUpdates:None
VariableComponent.startEstim.readOnly:False
VariableComponent.startEstim.label:Expected start (s)
VariableComponent.startEstim.categ:Basic
VariableComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
VariableComponent.startEstim.allowedVals:[]
VariableComponent.startEstim.valType:code
VariableComponent.startEstim.updates:None
VariableComponent.startEstim.staticUpdater:None
VariableComponent.durationEstim.default:
VariableComponent.durationEstim.val:
VariableComponent.durationEstim.allowedTypes:[]
VariableComponent.durationEstim.allowedUpdates:None
VariableComponent.durationEstim.readOnly:False
VariableComponent.durationEstim.label:Expected duration (s)
VariableComponent.durationEstim.categ:Basic
VariableComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
VariableComponent.durationEstim.allowedVals:[]
VariableComponent.durationEstim.valType:code
VariableComponent.durationEstim.updates:None
VariableComponent.durationEstim.staticUpdater:None
VariableComponent.startExpValue.default:
VariableComponent.startExpValue.val:
VariableComponent.startExpValue.allowedTypes:[]
VariableComponent.startExpValue.allowedUpdates:None
VariableComponent.startExpValue.readOnly:False
VariableComponent.startExpValue.label:Experiment start value
VariableComponent.startExpValue.categ:Basic
VariableComponent.startExpValue.hint:The start value. A variable can be set to any value.
VariableComponent.startExpValue.allowedVals:[]
VariableComponent.startExpValue.valType:code
VariableComponent.startExpValue.updates:constant
VariableComponent.startExpValue.staticUpdater:None
VariableComponent.startRoutineValue.default:
VariableComponent.startRoutineValue.val:
VariableComponent.startRoutineValue.allowedTypes:[]
VariableComponent.startRoutineValue.allowedUpdates:None
VariableComponent.startRoutineValue.readOnly:False
VariableComponent.startRoutineValue.label:Routine start value
VariableComponent.startRoutineValue.categ:Basic
VariableComponent.startRoutineValue.hint:Set the value for the beginning of each routine.
VariableComponent.startRoutineValue.allowedVals:[]
VariableComponent.startRoutineValue.valType:code
VariableComponent.startRoutineValue.updates:constant
VariableComponent.startRoutineValue.staticUpdater:None
VariableComponent.startFrameValue.default:
VariableComponent.startFrameValue.val:
VariableComponent.startFrameValue.allowedTypes:[]
VariableComponent.startFrameValue.allowedUpdates:None
VariableComponent.startFrameValue.readOnly:False
VariableComponent.startFrameValue.label:Frame start value
VariableComponent.startFrameValue.categ:Basic
VariableComponent.startFrameValue.hint:Set the value for the beginning of every screen refresh.
VariableComponent.startFrameValue.allowedVals:[]
VariableComponent.startFrameValue.valType:code
VariableComponent.startFrameValue.updates:None
VariableComponent.startFrameValue.staticUpdater:None
VariableComponent.saveStartExp.default:False
VariableComponent.saveStartExp.val:False
VariableComponent.saveStartExp.allowedTypes:[]
VariableComponent.saveStartExp.allowedUpdates:None
VariableComponent.saveStartExp.readOnly:False
VariableComponent.saveStartExp.label:Save exp start value
VariableComponent.saveStartExp.categ:Save
VariableComponent.saveStartExp.hint:Save the experiment start value in data file.
VariableComponent.saveStartExp.allowedVals:[]
VariableComponent.saveStartExp.valType:bool
VariableComponent.saveStartExp.updates:constant
VariableComponent.saveStartExp.staticUpdater:None
VariableComponent.saveEndExp.default:False
VariableComponent.saveEndExp.val:False
VariableComponent.saveEndExp.allowedTypes:[]
VariableComponent.saveEndExp.allowedUpdates:None
VariableComponent.saveEndExp.readOnly:False
VariableComponent.saveEndExp.label:Save exp end value
VariableComponent.saveEndExp.categ:Save
VariableComponent.saveEndExp.hint:Save the experiment end value in data file.
VariableComponent.saveEndExp.allowedVals:[]
VariableComponent.saveEndExp.valType:bool
VariableComponent.saveEndExp.updates:constant
VariableComponent.saveEndExp.staticUpdater:None
VariableComponent.saveStartRoutine.default:False
VariableComponent.saveStartRoutine.val:False
VariableComponent.saveStartRoutine.allowedTypes:[]
VariableComponent.saveStartRoutine.allowedUpdates:None
VariableComponent.saveStartRoutine.readOnly:False
VariableComponent.saveStartRoutine.label:Save routine start value
VariableComponent.saveStartRoutine.categ:Save
VariableComponent.saveStartRoutine.hint:Save the routine start value in data file.
VariableComponent.saveStartRoutine.allowedVals:[]
VariableComponent.saveStartRoutine.valType:bool
VariableComponent.saveStartRoutine.updates:constant
VariableComponent.saveStartRoutine.staticUpdater:None
VariableComponent.saveEndRoutine.default:True
VariableComponent.saveEndRoutine.val:True
VariableComponent.saveEndRoutine.allowedTypes:[]
VariableComponent.saveEndRoutine.allowedUpdates:None
VariableComponent.saveEndRoutine.readOnly:False
VariableComponent.saveEndRoutine.label:Save routine end value
VariableComponent.saveEndRoutine.categ:Save
VariableComponent.saveEndRoutine.hint:Save the routine end value in data file.
VariableComponent.saveEndRoutine.allowedVals:[]
VariableComponent.saveEndRoutine.valType:bool
VariableComponent.saveEndRoutine.updates:constant
VariableComponent.saveEndRoutine.staticUpdater:None
VariableComponent.saveFrameValue.default:'never'
VariableComponent.saveFrameValue.val:never
VariableComponent.saveFrameValue.allowedTypes:[]
VariableComponent.saveFrameValue.allowedUpdates:None
VariableComponent.saveFrameValue.readOnly:False
VariableComponent.saveFrameValue.label:Save frame value
VariableComponent.saveFrameValue.categ:Save
VariableComponent.saveFrameValue.hint:Save choice of frame value in data file.
VariableComponent.saveFrameValue.allowedVals:['first', 'last', 'all', 'never']
VariableComponent.saveFrameValue.valType:str
VariableComponent.saveFrameValue.updates:constant
VariableComponent.saveFrameValue.staticUpdater:None
cedrusButtonBoxComponent.order:['forceEndRoutine', 'allowedKeys', 'store', 'storeCorrect', 'correctAns']
cedrusButtonBoxComponent.name.default:buttonBox
cedrusButtonBoxComponent.name.val:buttonBox
cedrusButtonBoxComponent.name.allowedTypes:[]
cedrusButtonBoxComponent.name.allowedUpdates:None
cedrusButtonBoxComponent.name.readOnly:False
cedrusButtonBoxComponent.name.label:Name
cedrusButtonBoxComponent.name.categ:Basic
cedrusButtonBoxComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
cedrusButtonBoxComponent.name.allowedVals:[]
cedrusButtonBoxComponent.name.valType:code
cedrusButtonBoxComponent.name.staticUpdater:None
cedrusButtonBoxComponent.startType.default:'time (s)'
cedrusButtonBoxComponent.startType.val:time (s)
cedrusButtonBoxComponent.startType.allowedTypes:[]
cedrusButtonBoxComponent.startType.allowedUpdates:None
cedrusButtonBoxComponent.startType.readOnly:False
cedrusButtonBoxComponent.startType.label:start type
cedrusButtonBoxComponent.startType.categ:Basic
cedrusButtonBoxComponent.startType.hint:How do you want to define your start point?
cedrusButtonBoxComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
cedrusButtonBoxComponent.startType.valType:str
cedrusButtonBoxComponent.startType.updates:None
cedrusButtonBoxComponent.startType.staticUpdater:None
cedrusButtonBoxComponent.stopType.default:'duration (s)'
cedrusButtonBoxComponent.stopType.val:duration (s)
cedrusButtonBoxComponent.stopType.allowedTypes:[]
cedrusButtonBoxComponent.stopType.allowedUpdates:None
cedrusButtonBoxComponent.stopType.readOnly:False
cedrusButtonBoxComponent.stopType.label:stop type
cedrusButtonBoxComponent.stopType.categ:Basic
cedrusButtonBoxComponent.stopType.hint:How do you want to define your end point?
cedrusButtonBoxComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
cedrusButtonBoxComponent.stopType.valType:str
cedrusButtonBoxComponent.stopType.updates:None
cedrusButtonBoxComponent.stopType.staticUpdater:None
cedrusButtonBoxComponent.startVal.default:0.0
cedrusButtonBoxComponent.startVal.val:0.0
cedrusButtonBoxComponent.startVal.allowedTypes:[]
cedrusButtonBoxComponent.startVal.allowedUpdates:None
cedrusButtonBoxComponent.startVal.readOnly:False
cedrusButtonBoxComponent.startVal.label:Start
cedrusButtonBoxComponent.startVal.categ:Basic
cedrusButtonBoxComponent.startVal.hint:When does the component start?
cedrusButtonBoxComponent.startVal.allowedVals:[]
cedrusButtonBoxComponent.startVal.valType:code
cedrusButtonBoxComponent.startVal.updates:None
cedrusButtonBoxComponent.startVal.staticUpdater:None
cedrusButtonBoxComponent.stopVal.default:1.0
cedrusButtonBoxComponent.stopVal.val:1.0
cedrusButtonBoxComponent.stopVal.allowedTypes:[]
cedrusButtonBoxComponent.stopVal.allowedUpdates:[]
cedrusButtonBoxComponent.stopVal.readOnly:False
cedrusButtonBoxComponent.stopVal.label:Stop
cedrusButtonBoxComponent.stopVal.categ:Basic
cedrusButtonBoxComponent.stopVal.hint:When does the component end? (blank is endless)
cedrusButtonBoxComponent.stopVal.allowedVals:[]
cedrusButtonBoxComponent.stopVal.valType:code
cedrusButtonBoxComponent.stopVal.updates:constant
cedrusButtonBoxComponent.stopVal.staticUpdater:None
cedrusButtonBoxComponent.startEstim.default:
cedrusButtonBoxComponent.startEstim.val:
cedrusButtonBoxComponent.startEstim.allowedTypes:[]
cedrusButtonBoxComponent.startEstim.allowedUpdates:None
cedrusButtonBoxComponent.startEstim.readOnly:False
cedrusButtonBoxComponent.startEstim.label:Expected start (s)
cedrusButtonBoxComponent.startEstim.categ:Basic
cedrusButtonBoxComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
cedrusButtonBoxComponent.startEstim.allowedVals:[]
cedrusButtonBoxComponent.startEstim.valType:code
cedrusButtonBoxComponent.startEstim.updates:None
cedrusButtonBoxComponent.startEstim.staticUpdater:None
cedrusButtonBoxComponent.durationEstim.default:
cedrusButtonBoxComponent.durationEstim.val:
cedrusButtonBoxComponent.durationEstim.allowedTypes:[]
cedrusButtonBoxComponent.durationEstim.allowedUpdates:None
cedrusButtonBoxComponent.durationEstim.readOnly:False
cedrusButtonBoxComponent.durationEstim.label:Expected duration (s)
cedrusButtonBoxComponent.durationEstim.categ:Basic
cedrusButtonBoxComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
cedrusButtonBoxComponent.durationEstim.allowedVals:[]
cedrusButtonBoxComponent.durationEstim.valType:code
cedrusButtonBoxComponent.durationEstim.updates:None
cedrusButtonBoxComponent.durationEstim.staticUpdater:None
cedrusButtonBoxComponent.allowedKeys.default:
cedrusButtonBoxComponent.allowedKeys.val:
cedrusButtonBoxComponent.allowedKeys.allowedTypes:[]
cedrusButtonBoxComponent.allowedKeys.allowedUpdates:['constant', 'set every repeat']
cedrusButtonBoxComponent.allowedKeys.readOnly:False
cedrusButtonBoxComponent.allowedKeys.label:Allowed keys
cedrusButtonBoxComponent.allowedKeys.categ:Basic
cedrusButtonBoxComponent.allowedKeys.hint:Keys to be read (blank for any) or key numbers separated by commas
cedrusButtonBoxComponent.allowedKeys.allowedVals:[]
cedrusButtonBoxComponent.allowedKeys.valType:code
cedrusButtonBoxComponent.allowedKeys.updates:constant
cedrusButtonBoxComponent.allowedKeys.staticUpdater:None
cedrusButtonBoxComponent.discard previous.default:True
cedrusButtonBoxComponent.discard previous.val:True
cedrusButtonBoxComponent.discard previous.allowedTypes:[]
cedrusButtonBoxComponent.discard previous.allowedUpdates:None
cedrusButtonBoxComponent.discard previous.readOnly:False
cedrusButtonBoxComponent.discard previous.label:Discard previous
cedrusButtonBoxComponent.discard previous.categ:Basic
cedrusButtonBoxComponent.discard previous.hint:Do you want to discard all responses occuring before the onset of this component?
cedrusButtonBoxComponent.discard previous.allowedVals:[]
cedrusButtonBoxComponent.discard previous.valType:bool
cedrusButtonBoxComponent.discard previous.updates:constant
cedrusButtonBoxComponent.discard previous.staticUpdater:None
cedrusButtonBoxComponent.store.default:'first key'
cedrusButtonBoxComponent.store.val:first key
cedrusButtonBoxComponent.store.allowedTypes:[]
cedrusButtonBoxComponent.store.allowedUpdates:None
cedrusButtonBoxComponent.store.readOnly:False
cedrusButtonBoxComponent.store.label:Store
cedrusButtonBoxComponent.store.categ:Basic
cedrusButtonBoxComponent.store.hint:Choose which (if any) responses to store at the end of a trial
cedrusButtonBoxComponent.store.allowedVals:['last key', 'first key', 'all keys', 'nothing']
cedrusButtonBoxComponent.store.valType:str
cedrusButtonBoxComponent.store.updates:constant
cedrusButtonBoxComponent.store.staticUpdater:None
cedrusButtonBoxComponent.forceEndRoutine.default:True
cedrusButtonBoxComponent.forceEndRoutine.val:True
cedrusButtonBoxComponent.forceEndRoutine.allowedTypes:[]
cedrusButtonBoxComponent.forceEndRoutine.allowedUpdates:None
cedrusButtonBoxComponent.forceEndRoutine.readOnly:False
cedrusButtonBoxComponent.forceEndRoutine.label:Force end of Routine
cedrusButtonBoxComponent.forceEndRoutine.categ:Basic
cedrusButtonBoxComponent.forceEndRoutine.hint:Should a response force the end of the Routine (e.g end the trial)?
cedrusButtonBoxComponent.forceEndRoutine.allowedVals:[]
cedrusButtonBoxComponent.forceEndRoutine.valType:bool
cedrusButtonBoxComponent.forceEndRoutine.updates:constant
cedrusButtonBoxComponent.forceEndRoutine.staticUpdater:None
cedrusButtonBoxComponent.storeCorrect.default:False
cedrusButtonBoxComponent.storeCorrect.val:False
cedrusButtonBoxComponent.storeCorrect.allowedTypes:[]
cedrusButtonBoxComponent.storeCorrect.allowedUpdates:None
cedrusButtonBoxComponent.storeCorrect.readOnly:False
cedrusButtonBoxComponent.storeCorrect.label:Store correct
cedrusButtonBoxComponent.storeCorrect.categ:Basic
cedrusButtonBoxComponent.storeCorrect.hint:Do you want to save the response as correct/incorrect?
cedrusButtonBoxComponent.storeCorrect.allowedVals:[]
cedrusButtonBoxComponent.storeCorrect.valType:bool
cedrusButtonBoxComponent.storeCorrect.updates:constant
cedrusButtonBoxComponent.storeCorrect.staticUpdater:None
cedrusButtonBoxComponent.correctAns.default:
cedrusButtonBoxComponent.correctAns.val:
cedrusButtonBoxComponent.correctAns.allowedTypes:[]
cedrusButtonBoxComponent.correctAns.allowedUpdates:None
cedrusButtonBoxComponent.correctAns.readOnly:False
cedrusButtonBoxComponent.correctAns.label:Correct answer
cedrusButtonBoxComponent.correctAns.categ:Basic
cedrusButtonBoxComponent.correctAns.hint:What is the 'correct' response? NB, buttons are labelled 0 to 6 on a 7-button box. Enter 'None' (no quotes) if withholding a response is correct. Might be helpful to add a correctAns column and use $correctAns to compare to the key press.
cedrusButtonBoxComponent.correctAns.allowedVals:[]
cedrusButtonBoxComponent.correctAns.valType:code
cedrusButtonBoxComponent.correctAns.updates:constant
cedrusButtonBoxComponent.correctAns.staticUpdater:None
cedrusButtonBoxComponent.syncScreenRefresh.default:True
cedrusButtonBoxComponent.syncScreenRefresh.val:True
cedrusButtonBoxComponent.syncScreenRefresh.allowedTypes:[]
cedrusButtonBoxComponent.syncScreenRefresh.allowedUpdates:None
cedrusButtonBoxComponent.syncScreenRefresh.readOnly:False
cedrusButtonBoxComponent.syncScreenRefresh.label:sync RT with screen
cedrusButtonBoxComponent.syncScreenRefresh.categ:Basic
cedrusButtonBoxComponent.syncScreenRefresh.hint:A reaction time to a visual stimulus should be based on when the screen flipped
cedrusButtonBoxComponent.syncScreenRefresh.allowedVals:[]
cedrusButtonBoxComponent.syncScreenRefresh.valType:bool
cedrusButtonBoxComponent.syncScreenRefresh.updates:constant
cedrusButtonBoxComponent.syncScreenRefresh.staticUpdater:None
cedrusButtonBoxComponent.deviceNumber.default:0
cedrusButtonBoxComponent.deviceNumber.val:0
cedrusButtonBoxComponent.deviceNumber.allowedTypes:[]
cedrusButtonBoxComponent.deviceNumber.allowedUpdates:[]
cedrusButtonBoxComponent.deviceNumber.readOnly:False
cedrusButtonBoxComponent.deviceNumber.label:Device number
cedrusButtonBoxComponent.deviceNumber.categ:Advanced
cedrusButtonBoxComponent.deviceNumber.hint:Device number, if you have multiple devices which one do you want (0, 1, 2...)
cedrusButtonBoxComponent.deviceNumber.allowedVals:[]
cedrusButtonBoxComponent.deviceNumber.valType:code
cedrusButtonBoxComponent.deviceNumber.updates:constant
cedrusButtonBoxComponent.deviceNumber.staticUpdater:None
cedrusButtonBoxComponent.useBoxTimer.default:False
cedrusButtonBoxComponent.useBoxTimer.val:False
cedrusButtonBoxComponent.useBoxTimer.allowedTypes:[]
cedrusButtonBoxComponent.useBoxTimer.allowedUpdates:[]
cedrusButtonBoxComponent.useBoxTimer.readOnly:False
cedrusButtonBoxComponent.useBoxTimer.label:Use box timer
cedrusButtonBoxComponent.useBoxTimer.categ:Advanced
cedrusButtonBoxComponent.useBoxTimer.hint:According to Cedrus the response box timer has a drift - use with caution!
cedrusButtonBoxComponent.useBoxTimer.allowedVals:[True, False]
cedrusButtonBoxComponent.useBoxTimer.valType:bool
cedrusButtonBoxComponent.useBoxTimer.updates:constant
cedrusButtonBoxComponent.useBoxTimer.staticUpdater:None
ioLabsButtonBoxComponent.order:['forceEndRoutine', 'active', 'lights', 'store', 'storeCorrect', 'correctAns']
ioLabsButtonBoxComponent.name.default:bbox
ioLabsButtonBoxComponent.name.val:bbox
ioLabsButtonBoxComponent.name.allowedTypes:[]
ioLabsButtonBoxComponent.name.allowedUpdates:None
ioLabsButtonBoxComponent.name.readOnly:False
ioLabsButtonBoxComponent.name.label:Name
ioLabsButtonBoxComponent.name.categ:Basic
ioLabsButtonBoxComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
ioLabsButtonBoxComponent.name.allowedVals:[]
ioLabsButtonBoxComponent.name.valType:code
ioLabsButtonBoxComponent.name.staticUpdater:None
ioLabsButtonBoxComponent.startType.default:'time (s)'
ioLabsButtonBoxComponent.startType.val:time (s)
ioLabsButtonBoxComponent.startType.allowedTypes:[]
ioLabsButtonBoxComponent.startType.allowedUpdates:None
ioLabsButtonBoxComponent.startType.readOnly:False
ioLabsButtonBoxComponent.startType.label:start type
ioLabsButtonBoxComponent.startType.categ:Basic
ioLabsButtonBoxComponent.startType.hint:How do you want to define your start point?
ioLabsButtonBoxComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ioLabsButtonBoxComponent.startType.valType:str
ioLabsButtonBoxComponent.startType.updates:None
ioLabsButtonBoxComponent.startType.staticUpdater:None
ioLabsButtonBoxComponent.stopType.default:'duration (s)'
ioLabsButtonBoxComponent.stopType.val:duration (s)
ioLabsButtonBoxComponent.stopType.allowedTypes:[]
ioLabsButtonBoxComponent.stopType.allowedUpdates:None
ioLabsButtonBoxComponent.stopType.readOnly:False
ioLabsButtonBoxComponent.stopType.label:stop type
ioLabsButtonBoxComponent.stopType.categ:Basic
ioLabsButtonBoxComponent.stopType.hint:How do you want to define your end point?
ioLabsButtonBoxComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ioLabsButtonBoxComponent.stopType.valType:str
ioLabsButtonBoxComponent.stopType.updates:None
ioLabsButtonBoxComponent.stopType.staticUpdater:None
ioLabsButtonBoxComponent.startVal.default:0.0
ioLabsButtonBoxComponent.startVal.val:0.0
ioLabsButtonBoxComponent.startVal.allowedTypes:[]
ioLabsButtonBoxComponent.startVal.allowedUpdates:None
ioLabsButtonBoxComponent.startVal.readOnly:False
ioLabsButtonBoxComponent.startVal.label:Start
ioLabsButtonBoxComponent.startVal.categ:Basic
ioLabsButtonBoxComponent.startVal.hint:When does the component start?
ioLabsButtonBoxComponent.startVal.allowedVals:[]
ioLabsButtonBoxComponent.startVal.valType:code
ioLabsButtonBoxComponent.startVal.updates:None
ioLabsButtonBoxComponent.startVal.staticUpdater:None
ioLabsButtonBoxComponent.stopVal.default:1.0
ioLabsButtonBoxComponent.stopVal.val:1.0
ioLabsButtonBoxComponent.stopVal.allowedTypes:[]
ioLabsButtonBoxComponent.stopVal.allowedUpdates:[]
ioLabsButtonBoxComponent.stopVal.readOnly:False
ioLabsButtonBoxComponent.stopVal.label:Stop
ioLabsButtonBoxComponent.stopVal.categ:Basic
ioLabsButtonBoxComponent.stopVal.hint:When does the component end? (blank is endless)
ioLabsButtonBoxComponent.stopVal.allowedVals:[]
ioLabsButtonBoxComponent.stopVal.valType:code
ioLabsButtonBoxComponent.stopVal.updates:constant
ioLabsButtonBoxComponent.stopVal.staticUpdater:None
ioLabsButtonBoxComponent.startEstim.default:
ioLabsButtonBoxComponent.startEstim.val:
ioLabsButtonBoxComponent.startEstim.allowedTypes:[]
ioLabsButtonBoxComponent.startEstim.allowedUpdates:None
ioLabsButtonBoxComponent.startEstim.readOnly:False
ioLabsButtonBoxComponent.startEstim.label:Expected start (s)
ioLabsButtonBoxComponent.startEstim.categ:Basic
ioLabsButtonBoxComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ioLabsButtonBoxComponent.startEstim.allowedVals:[]
ioLabsButtonBoxComponent.startEstim.valType:code
ioLabsButtonBoxComponent.startEstim.updates:None
ioLabsButtonBoxComponent.startEstim.staticUpdater:None
ioLabsButtonBoxComponent.durationEstim.default:
ioLabsButtonBoxComponent.durationEstim.val:
ioLabsButtonBoxComponent.durationEstim.allowedTypes:[]
ioLabsButtonBoxComponent.durationEstim.allowedUpdates:None
ioLabsButtonBoxComponent.durationEstim.readOnly:False
ioLabsButtonBoxComponent.durationEstim.label:Expected duration (s)
ioLabsButtonBoxComponent.durationEstim.categ:Basic
ioLabsButtonBoxComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ioLabsButtonBoxComponent.durationEstim.allowedVals:[]
ioLabsButtonBoxComponent.durationEstim.valType:code
ioLabsButtonBoxComponent.durationEstim.updates:None
ioLabsButtonBoxComponent.durationEstim.staticUpdater:None
ioLabsButtonBoxComponent.discard previous.default:True
ioLabsButtonBoxComponent.discard previous.val:True
ioLabsButtonBoxComponent.discard previous.allowedTypes:[]
ioLabsButtonBoxComponent.discard previous.allowedUpdates:None
ioLabsButtonBoxComponent.discard previous.readOnly:False
ioLabsButtonBoxComponent.discard previous.label:Discard previous
ioLabsButtonBoxComponent.discard previous.categ:Basic
ioLabsButtonBoxComponent.discard previous.hint:Do you want to discard all responses occuring before the onset of this component?
ioLabsButtonBoxComponent.discard previous.allowedVals:[]
ioLabsButtonBoxComponent.discard previous.valType:bool
ioLabsButtonBoxComponent.discard previous.updates:constant
ioLabsButtonBoxComponent.discard previous.staticUpdater:None
ioLabsButtonBoxComponent.store.default:'first button'
ioLabsButtonBoxComponent.store.val:first button
ioLabsButtonBoxComponent.store.allowedTypes:[]
ioLabsButtonBoxComponent.store.allowedUpdates:None
ioLabsButtonBoxComponent.store.readOnly:False
ioLabsButtonBoxComponent.store.label:Store
ioLabsButtonBoxComponent.store.categ:Basic
ioLabsButtonBoxComponent.store.hint:Choose which (if any) responses to store at end of a trial
ioLabsButtonBoxComponent.store.allowedVals:['last button', 'first button', 'all buttons', 'nothing']
ioLabsButtonBoxComponent.store.valType:str
ioLabsButtonBoxComponent.store.updates:constant
ioLabsButtonBoxComponent.store.staticUpdater:None
ioLabsButtonBoxComponent.forceEndRoutine.default:True
ioLabsButtonBoxComponent.forceEndRoutine.val:True
ioLabsButtonBoxComponent.forceEndRoutine.allowedTypes:[]
ioLabsButtonBoxComponent.forceEndRoutine.allowedUpdates:None
ioLabsButtonBoxComponent.forceEndRoutine.readOnly:False
ioLabsButtonBoxComponent.forceEndRoutine.label:Force end of Routine
ioLabsButtonBoxComponent.forceEndRoutine.categ:Basic
ioLabsButtonBoxComponent.forceEndRoutine.hint:Should a response force the end of the Routine (e.g end the trial)?
ioLabsButtonBoxComponent.forceEndRoutine.allowedVals:[]
ioLabsButtonBoxComponent.forceEndRoutine.valType:bool
ioLabsButtonBoxComponent.forceEndRoutine.updates:constant
ioLabsButtonBoxComponent.forceEndRoutine.staticUpdater:None
ioLabsButtonBoxComponent.storeCorrect.default:False
ioLabsButtonBoxComponent.storeCorrect.val:False
ioLabsButtonBoxComponent.storeCorrect.allowedTypes:[]
ioLabsButtonBoxComponent.storeCorrect.allowedUpdates:None
ioLabsButtonBoxComponent.storeCorrect.readOnly:False
ioLabsButtonBoxComponent.storeCorrect.label:Store correct
ioLabsButtonBoxComponent.storeCorrect.categ:Basic
ioLabsButtonBoxComponent.storeCorrect.hint:Do you want to save the response as correct/incorrect?
ioLabsButtonBoxComponent.storeCorrect.allowedVals:[]
ioLabsButtonBoxComponent.storeCorrect.valType:bool
ioLabsButtonBoxComponent.storeCorrect.updates:constant
ioLabsButtonBoxComponent.storeCorrect.staticUpdater:None
ioLabsButtonBoxComponent.correctAns.default:'0'
ioLabsButtonBoxComponent.correctAns.val:0
ioLabsButtonBoxComponent.correctAns.allowedTypes:[]
ioLabsButtonBoxComponent.correctAns.allowedUpdates:None
ioLabsButtonBoxComponent.correctAns.readOnly:False
ioLabsButtonBoxComponent.correctAns.label:Correct answer
ioLabsButtonBoxComponent.correctAns.categ:Basic
ioLabsButtonBoxComponent.correctAns.hint:What is the 'correct' response? NB, buttons are labelled 0 to 7 on a 8-button box. Enter 'None' (no quotes) if withholding a response is correct. Might be helpful to add a correctAns column and use $correctAns to compare to the key press.
ioLabsButtonBoxComponent.correctAns.allowedVals:[]
ioLabsButtonBoxComponent.correctAns.valType:str
ioLabsButtonBoxComponent.correctAns.updates:constant
ioLabsButtonBoxComponent.correctAns.staticUpdater:None
ioLabsButtonBoxComponent.syncScreenRefresh.default:True
ioLabsButtonBoxComponent.syncScreenRefresh.val:True
ioLabsButtonBoxComponent.syncScreenRefresh.allowedTypes:[]
ioLabsButtonBoxComponent.syncScreenRefresh.allowedUpdates:None
ioLabsButtonBoxComponent.syncScreenRefresh.readOnly:False
ioLabsButtonBoxComponent.syncScreenRefresh.label:sync RT with screen
ioLabsButtonBoxComponent.syncScreenRefresh.categ:Basic
ioLabsButtonBoxComponent.syncScreenRefresh.hint:A reaction time to a visual stimulus should be based on when the screen flipped
ioLabsButtonBoxComponent.syncScreenRefresh.allowedVals:[]
ioLabsButtonBoxComponent.syncScreenRefresh.valType:bool
ioLabsButtonBoxComponent.syncScreenRefresh.updates:constant
ioLabsButtonBoxComponent.syncScreenRefresh.staticUpdater:None
ioLabsButtonBoxComponent.active.default:(0,1,2,3,4,5,6,7)
ioLabsButtonBoxComponent.active.val:(0,1,2,3,4,5,6,7)
ioLabsButtonBoxComponent.active.allowedTypes:[]
ioLabsButtonBoxComponent.active.allowedUpdates:['constant', 'set every repeat']
ioLabsButtonBoxComponent.active.readOnly:False
ioLabsButtonBoxComponent.active.label:Active buttons
ioLabsButtonBoxComponent.active.categ:Basic
ioLabsButtonBoxComponent.active.hint:Active buttons, such as '1,6', '(1,2,5,6)' or '0' (without quotes)
ioLabsButtonBoxComponent.active.allowedVals:[]
ioLabsButtonBoxComponent.active.valType:code
ioLabsButtonBoxComponent.active.updates:constant
ioLabsButtonBoxComponent.active.staticUpdater:None
ioLabsButtonBoxComponent.lights.default:True
ioLabsButtonBoxComponent.lights.val:True
ioLabsButtonBoxComponent.lights.allowedTypes:[]
ioLabsButtonBoxComponent.lights.allowedUpdates:[]
ioLabsButtonBoxComponent.lights.readOnly:False
ioLabsButtonBoxComponent.lights.label:Lights
ioLabsButtonBoxComponent.lights.categ:Basic
ioLabsButtonBoxComponent.lights.hint:Turn ON the lights for the active buttons?
ioLabsButtonBoxComponent.lights.allowedVals:[]
ioLabsButtonBoxComponent.lights.valType:bool
ioLabsButtonBoxComponent.lights.updates:constant
ioLabsButtonBoxComponent.lights.staticUpdater:None
ioLabsButtonBoxComponent.lights off.default:False
ioLabsButtonBoxComponent.lights off.val:False
ioLabsButtonBoxComponent.lights off.allowedTypes:[]
ioLabsButtonBoxComponent.lights off.allowedUpdates:[]
ioLabsButtonBoxComponent.lights off.readOnly:False
ioLabsButtonBoxComponent.lights off.label:Lights off
ioLabsButtonBoxComponent.lights off.categ:Basic
ioLabsButtonBoxComponent.lights off.hint:Turn OFF all lights at the end of each routine?
ioLabsButtonBoxComponent.lights off.allowedVals:[]
ioLabsButtonBoxComponent.lights off.valType:bool
ioLabsButtonBoxComponent.lights off.updates:constant
ioLabsButtonBoxComponent.lights off.staticUpdater:None
