ApertureComponent.order:['name', 'size', 'pos']
ApertureComponent.name.default:aperture
ApertureComponent.name.label:Name
ApertureComponent.name.allowedVals:[]
ApertureComponent.name.staticUpdater:None
ApertureComponent.name.val:aperture
ApertureComponent.name.readOnly:False
ApertureComponent.name.valType:code
ApertureComponent.name.allowedUpdates:None
ApertureComponent.name.allowedTypes:[]
ApertureComponent.name.categ:Basic
ApertureComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
ApertureComponent.startType.default:'time (s)'
ApertureComponent.startType.label:start type
ApertureComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ApertureComponent.startType.staticUpdater:None
ApertureComponent.startType.val:time (s)
ApertureComponent.startType.readOnly:False
ApertureComponent.startType.valType:str
ApertureComponent.startType.allowedUpdates:None
ApertureComponent.startType.allowedTypes:[]
ApertureComponent.startType.categ:Basic
ApertureComponent.startType.hint:How do you want to define your start point?
ApertureComponent.startType.updates:None
ApertureComponent.stopType.default:'duration (s)'
ApertureComponent.stopType.label:stop type
ApertureComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ApertureComponent.stopType.staticUpdater:None
ApertureComponent.stopType.val:duration (s)
ApertureComponent.stopType.readOnly:False
ApertureComponent.stopType.valType:str
ApertureComponent.stopType.allowedUpdates:None
ApertureComponent.stopType.allowedTypes:[]
ApertureComponent.stopType.categ:Basic
ApertureComponent.stopType.hint:How do you want to define your end point?
ApertureComponent.stopType.updates:None
ApertureComponent.startVal.default:0.0
ApertureComponent.startVal.label:Start
ApertureComponent.startVal.allowedVals:[]
ApertureComponent.startVal.staticUpdater:None
ApertureComponent.startVal.val:0.0
ApertureComponent.startVal.readOnly:False
ApertureComponent.startVal.valType:code
ApertureComponent.startVal.allowedUpdates:None
ApertureComponent.startVal.allowedTypes:[]
ApertureComponent.startVal.categ:Basic
ApertureComponent.startVal.hint:When does the component start?
ApertureComponent.startVal.updates:None
ApertureComponent.stopVal.default:1.0
ApertureComponent.stopVal.label:Stop
ApertureComponent.stopVal.allowedVals:[]
ApertureComponent.stopVal.staticUpdater:None
ApertureComponent.stopVal.val:1.0
ApertureComponent.stopVal.readOnly:False
ApertureComponent.stopVal.valType:code
ApertureComponent.stopVal.allowedUpdates:[]
ApertureComponent.stopVal.allowedTypes:[]
ApertureComponent.stopVal.categ:Basic
ApertureComponent.stopVal.hint:When does the component end? (blank is endless)
ApertureComponent.stopVal.updates:constant
ApertureComponent.startEstim.default:
ApertureComponent.startEstim.label:Expected start (s)
ApertureComponent.startEstim.allowedVals:[]
ApertureComponent.startEstim.staticUpdater:None
ApertureComponent.startEstim.val:
ApertureComponent.startEstim.readOnly:False
ApertureComponent.startEstim.valType:code
ApertureComponent.startEstim.allowedUpdates:None
ApertureComponent.startEstim.allowedTypes:[]
ApertureComponent.startEstim.categ:Basic
ApertureComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ApertureComponent.startEstim.updates:None
ApertureComponent.durationEstim.default:
ApertureComponent.durationEstim.label:Expected duration (s)
ApertureComponent.durationEstim.allowedVals:[]
ApertureComponent.durationEstim.staticUpdater:None
ApertureComponent.durationEstim.val:
ApertureComponent.durationEstim.readOnly:False
ApertureComponent.durationEstim.valType:code
ApertureComponent.durationEstim.allowedUpdates:None
ApertureComponent.durationEstim.allowedTypes:[]
ApertureComponent.durationEstim.categ:Basic
ApertureComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ApertureComponent.durationEstim.updates:None
ApertureComponent.units.default:'norm'
ApertureComponent.units.label:Units
ApertureComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
ApertureComponent.units.staticUpdater:None
ApertureComponent.units.val:norm
ApertureComponent.units.readOnly:False
ApertureComponent.units.valType:str
ApertureComponent.units.allowedUpdates:None
ApertureComponent.units.allowedTypes:[]
ApertureComponent.units.categ:Basic
ApertureComponent.units.hint:Units of dimensions for this stimulus
ApertureComponent.units.updates:None
ApertureComponent.pos.default:(0, 0)
ApertureComponent.pos.label:Position [x,y]
ApertureComponent.pos.allowedVals:[]
ApertureComponent.pos.staticUpdater:None
ApertureComponent.pos.val:(0, 0)
ApertureComponent.pos.readOnly:False
ApertureComponent.pos.valType:code
ApertureComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ApertureComponent.pos.allowedTypes:[]
ApertureComponent.pos.categ:Basic
ApertureComponent.pos.hint:Where is the aperture centred?
ApertureComponent.pos.updates:constant
ApertureComponent.size.default:1
ApertureComponent.size.label:Size
ApertureComponent.size.allowedVals:[]
ApertureComponent.size.staticUpdater:None
ApertureComponent.size.val:1
ApertureComponent.size.readOnly:False
ApertureComponent.size.valType:code
ApertureComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ApertureComponent.size.allowedTypes:[]
ApertureComponent.size.categ:Basic
ApertureComponent.size.hint:How big is the aperture? (a single number for diameter)
ApertureComponent.size.updates:constant
CodeComponent.order:['name', 'Begin Experiment', 'Begin Routine', 'Each Frame', 'End Routine', 'End Experiment']
CodeComponent.name.default:code
CodeComponent.name.label:Name
CodeComponent.name.allowedVals:[]
CodeComponent.name.staticUpdater:None
CodeComponent.name.val:code
CodeComponent.name.readOnly:False
CodeComponent.name.valType:code
CodeComponent.name.allowedUpdates:None
CodeComponent.name.allowedTypes:[]
CodeComponent.name.categ:Basic
CodeComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
CodeComponent.Begin Experiment.default:
CodeComponent.Begin Experiment.label:Begin Experiment
CodeComponent.Begin Experiment.allowedVals:[]
CodeComponent.Begin Experiment.staticUpdater:None
CodeComponent.Begin Experiment.val:
CodeComponent.Begin Experiment.readOnly:False
CodeComponent.Begin Experiment.valType:extendedCode
CodeComponent.Begin Experiment.allowedUpdates:[]
CodeComponent.Begin Experiment.allowedTypes:[]
CodeComponent.Begin Experiment.categ:Basic
CodeComponent.Begin Experiment.hint:Code at the start of the experiment (initialization); right-click checks syntax
CodeComponent.Begin Experiment.updates:constant
CodeComponent.Begin Routine.default:
CodeComponent.Begin Routine.label:Begin Routine
CodeComponent.Begin Routine.allowedVals:[]
CodeComponent.Begin Routine.staticUpdater:None
CodeComponent.Begin Routine.val:
CodeComponent.Begin Routine.readOnly:False
CodeComponent.Begin Routine.valType:extendedCode
CodeComponent.Begin Routine.allowedUpdates:[]
CodeComponent.Begin Routine.allowedTypes:[]
CodeComponent.Begin Routine.categ:Basic
CodeComponent.Begin Routine.hint:Code to be run at the start of each repeat of the Routine (e.g. each trial); right-click checks syntax
CodeComponent.Begin Routine.updates:constant
CodeComponent.Each Frame.default:
CodeComponent.Each Frame.label:Each Frame
CodeComponent.Each Frame.allowedVals:[]
CodeComponent.Each Frame.staticUpdater:None
CodeComponent.Each Frame.val:
CodeComponent.Each Frame.readOnly:False
CodeComponent.Each Frame.valType:extendedCode
CodeComponent.Each Frame.allowedUpdates:[]
CodeComponent.Each Frame.allowedTypes:[]
CodeComponent.Each Frame.categ:Basic
CodeComponent.Each Frame.hint:Code to be run on every video frame during for the duration of this Routine; right-click checks syntax
CodeComponent.Each Frame.updates:constant
CodeComponent.End Routine.default:
CodeComponent.End Routine.label:End Routine
CodeComponent.End Routine.allowedVals:[]
CodeComponent.End Routine.staticUpdater:None
CodeComponent.End Routine.val:
CodeComponent.End Routine.readOnly:False
CodeComponent.End Routine.valType:extendedCode
CodeComponent.End Routine.allowedUpdates:[]
CodeComponent.End Routine.allowedTypes:[]
CodeComponent.End Routine.categ:Basic
CodeComponent.End Routine.hint:Code at the end of this repeat of the Routine (e.g. getting/storing responses); right-click checks syntax
CodeComponent.End Routine.updates:constant
CodeComponent.End Experiment.default:
CodeComponent.End Experiment.label:End Experiment
CodeComponent.End Experiment.allowedVals:[]
CodeComponent.End Experiment.staticUpdater:None
CodeComponent.End Experiment.val:
CodeComponent.End Experiment.readOnly:False
CodeComponent.End Experiment.valType:extendedCode
CodeComponent.End Experiment.allowedUpdates:[]
CodeComponent.End Experiment.allowedTypes:[]
CodeComponent.End Experiment.categ:Basic
CodeComponent.End Experiment.hint:Code at the end of the entire experiment (e.g. saving files, resetting computer); right-click checks syntax
CodeComponent.End Experiment.updates:constant
DotsComponent.order:['name']
DotsComponent.name.default:dots
DotsComponent.name.label:Name
DotsComponent.name.allowedVals:[]
DotsComponent.name.staticUpdater:None
DotsComponent.name.val:dots
DotsComponent.name.readOnly:False
DotsComponent.name.valType:code
DotsComponent.name.allowedUpdates:None
DotsComponent.name.allowedTypes:[]
DotsComponent.name.categ:Basic
DotsComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
DotsComponent.startType.default:'time (s)'
DotsComponent.startType.label:start type
DotsComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
DotsComponent.startType.staticUpdater:None
DotsComponent.startType.val:time (s)
DotsComponent.startType.readOnly:False
DotsComponent.startType.valType:str
DotsComponent.startType.allowedUpdates:None
DotsComponent.startType.allowedTypes:[]
DotsComponent.startType.categ:Basic
DotsComponent.startType.hint:How do you want to define your start point?
DotsComponent.startType.updates:None
DotsComponent.stopType.default:'duration (s)'
DotsComponent.stopType.label:stop type
DotsComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
DotsComponent.stopType.staticUpdater:None
DotsComponent.stopType.val:duration (s)
DotsComponent.stopType.readOnly:False
DotsComponent.stopType.valType:str
DotsComponent.stopType.allowedUpdates:None
DotsComponent.stopType.allowedTypes:[]
DotsComponent.stopType.categ:Basic
DotsComponent.stopType.hint:How do you want to define your end point?
DotsComponent.stopType.updates:None
DotsComponent.startVal.default:0.0
DotsComponent.startVal.label:Start
DotsComponent.startVal.allowedVals:[]
DotsComponent.startVal.staticUpdater:None
DotsComponent.startVal.val:0.0
DotsComponent.startVal.readOnly:False
DotsComponent.startVal.valType:code
DotsComponent.startVal.allowedUpdates:None
DotsComponent.startVal.allowedTypes:[]
DotsComponent.startVal.categ:Basic
DotsComponent.startVal.hint:When does the component start?
DotsComponent.startVal.updates:None
DotsComponent.stopVal.default:1.0
DotsComponent.stopVal.label:Stop
DotsComponent.stopVal.allowedVals:[]
DotsComponent.stopVal.staticUpdater:None
DotsComponent.stopVal.val:1.0
DotsComponent.stopVal.readOnly:False
DotsComponent.stopVal.valType:code
DotsComponent.stopVal.allowedUpdates:[]
DotsComponent.stopVal.allowedTypes:[]
DotsComponent.stopVal.categ:Basic
DotsComponent.stopVal.hint:When does the component end? (blank is endless)
DotsComponent.stopVal.updates:constant
DotsComponent.startEstim.default:
DotsComponent.startEstim.label:Expected start (s)
DotsComponent.startEstim.allowedVals:[]
DotsComponent.startEstim.staticUpdater:None
DotsComponent.startEstim.val:
DotsComponent.startEstim.readOnly:False
DotsComponent.startEstim.valType:code
DotsComponent.startEstim.allowedUpdates:None
DotsComponent.startEstim.allowedTypes:[]
DotsComponent.startEstim.categ:Basic
DotsComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
DotsComponent.startEstim.updates:None
DotsComponent.durationEstim.default:
DotsComponent.durationEstim.label:Expected duration (s)
DotsComponent.durationEstim.allowedVals:[]
DotsComponent.durationEstim.staticUpdater:None
DotsComponent.durationEstim.val:
DotsComponent.durationEstim.readOnly:False
DotsComponent.durationEstim.valType:code
DotsComponent.durationEstim.allowedUpdates:None
DotsComponent.durationEstim.allowedTypes:[]
DotsComponent.durationEstim.categ:Basic
DotsComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
DotsComponent.durationEstim.updates:None
DotsComponent.units.default:'from exp settings'
DotsComponent.units.label:Units
DotsComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
DotsComponent.units.staticUpdater:None
DotsComponent.units.val:from exp settings
DotsComponent.units.readOnly:False
DotsComponent.units.valType:str
DotsComponent.units.allowedUpdates:None
DotsComponent.units.allowedTypes:[]
DotsComponent.units.categ:Basic
DotsComponent.units.hint:Units of dimensions for this stimulus
DotsComponent.units.updates:None
DotsComponent.color.default:[1.0,1.0,1.0]
DotsComponent.color.label:Color
DotsComponent.color.allowedVals:[]
DotsComponent.color.staticUpdater:None
DotsComponent.color.val:$[1.0,1.0,1.0]
DotsComponent.color.readOnly:False
DotsComponent.color.valType:str
DotsComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.color.allowedTypes:[]
DotsComponent.color.categ:Basic
DotsComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
DotsComponent.color.updates:constant
DotsComponent.opacity.default:1
DotsComponent.opacity.label:Opacity
DotsComponent.opacity.allowedVals:[]
DotsComponent.opacity.staticUpdater:None
DotsComponent.opacity.val:1
DotsComponent.opacity.readOnly:False
DotsComponent.opacity.valType:code
DotsComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.opacity.allowedTypes:[]
DotsComponent.opacity.categ:Basic
DotsComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
DotsComponent.opacity.updates:constant
DotsComponent.colorSpace.default:'rgb'
DotsComponent.colorSpace.label:Color space
DotsComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
DotsComponent.colorSpace.staticUpdater:None
DotsComponent.colorSpace.val:rgb
DotsComponent.colorSpace.readOnly:False
DotsComponent.colorSpace.valType:str
DotsComponent.colorSpace.allowedUpdates:None
DotsComponent.colorSpace.allowedTypes:[]
DotsComponent.colorSpace.categ:Basic
DotsComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
DotsComponent.colorSpace.updates:constant
DotsComponent.nDots.default:100
DotsComponent.nDots.label:Number of dots
DotsComponent.nDots.allowedVals:[]
DotsComponent.nDots.staticUpdater:None
DotsComponent.nDots.val:100
DotsComponent.nDots.readOnly:False
DotsComponent.nDots.valType:code
DotsComponent.nDots.allowedUpdates:None
DotsComponent.nDots.allowedTypes:[]
DotsComponent.nDots.categ:Dots
DotsComponent.nDots.hint:Number of dots in the field (for circular fields this will be average number of dots)
DotsComponent.nDots.updates:constant
DotsComponent.dir.default:0.0
DotsComponent.dir.label:Direction
DotsComponent.dir.allowedVals:[]
DotsComponent.dir.staticUpdater:None
DotsComponent.dir.val:0.0
DotsComponent.dir.readOnly:False
DotsComponent.dir.valType:code
DotsComponent.dir.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.dir.allowedTypes:[]
DotsComponent.dir.categ:Dots
DotsComponent.dir.hint:Direction of motion for the signal dots (degrees)
DotsComponent.dir.updates:constant
DotsComponent.speed.default:0.1
DotsComponent.speed.label:Speed
DotsComponent.speed.allowedVals:[]
DotsComponent.speed.staticUpdater:None
DotsComponent.speed.val:0.1
DotsComponent.speed.readOnly:False
DotsComponent.speed.valType:code
DotsComponent.speed.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.speed.allowedTypes:[]
DotsComponent.speed.categ:Dots
DotsComponent.speed.hint:Speed of the dots (displacement per frame in the specified units)
DotsComponent.speed.updates:constant
DotsComponent.coherence.default:1.0
DotsComponent.coherence.label:Coherence
DotsComponent.coherence.allowedVals:[]
DotsComponent.coherence.staticUpdater:None
DotsComponent.coherence.val:1.0
DotsComponent.coherence.readOnly:False
DotsComponent.coherence.valType:code
DotsComponent.coherence.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.coherence.allowedTypes:[]
DotsComponent.coherence.categ:Dots
DotsComponent.coherence.hint:Coherence of the dots (fraction moving in the signal direction on any one frame)
DotsComponent.coherence.updates:constant
DotsComponent.dotSize.default:2
DotsComponent.dotSize.label:Dot size
DotsComponent.dotSize.allowedVals:[]
DotsComponent.dotSize.staticUpdater:None
DotsComponent.dotSize.val:2
DotsComponent.dotSize.readOnly:False
DotsComponent.dotSize.valType:code
DotsComponent.dotSize.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.dotSize.allowedTypes:[]
DotsComponent.dotSize.categ:Dots
DotsComponent.dotSize.hint:Size of the dots IN PIXELS regardless of the set units
DotsComponent.dotSize.updates:constant
DotsComponent.dotLife.default:3
DotsComponent.dotLife.label:Dot life-time
DotsComponent.dotLife.allowedVals:[]
DotsComponent.dotLife.staticUpdater:None
DotsComponent.dotLife.val:3
DotsComponent.dotLife.readOnly:False
DotsComponent.dotLife.valType:code
DotsComponent.dotLife.allowedUpdates:None
DotsComponent.dotLife.allowedTypes:[]
DotsComponent.dotLife.categ:Dots
DotsComponent.dotLife.hint:Number of frames before each dot is killed and randomly assigned a new position
DotsComponent.dotLife.updates:None
DotsComponent.signalDots.default:'same'
DotsComponent.signalDots.label:Signal dots
DotsComponent.signalDots.allowedVals:['same', 'different']
DotsComponent.signalDots.staticUpdater:None
DotsComponent.signalDots.val:same
DotsComponent.signalDots.readOnly:False
DotsComponent.signalDots.valType:str
DotsComponent.signalDots.allowedUpdates:None
DotsComponent.signalDots.allowedTypes:[]
DotsComponent.signalDots.categ:Dots
DotsComponent.signalDots.hint:On each frame are the signals dots remaining the same or changing? See Scase et al.
DotsComponent.signalDots.updates:None
DotsComponent.refreshDots.default:'repeat'
DotsComponent.refreshDots.label:Dot refresh rule
DotsComponent.refreshDots.allowedVals:['none', 'repeat']
DotsComponent.refreshDots.staticUpdater:None
DotsComponent.refreshDots.val:repeat
DotsComponent.refreshDots.readOnly:False
DotsComponent.refreshDots.valType:str
DotsComponent.refreshDots.allowedUpdates:[]
DotsComponent.refreshDots.allowedTypes:[]
DotsComponent.refreshDots.categ:Dots
DotsComponent.refreshDots.hint:When should the whole sample of dots be refreshed
DotsComponent.refreshDots.updates:None
DotsComponent.noiseDots.default:'direction'
DotsComponent.noiseDots.label:Noise dots
DotsComponent.noiseDots.allowedVals:['direction', 'position', 'walk']
DotsComponent.noiseDots.staticUpdater:None
DotsComponent.noiseDots.val:direction
DotsComponent.noiseDots.readOnly:False
DotsComponent.noiseDots.valType:str
DotsComponent.noiseDots.allowedUpdates:None
DotsComponent.noiseDots.allowedTypes:[]
DotsComponent.noiseDots.categ:Dots
DotsComponent.noiseDots.hint:What governs the behaviour of the noise dots? See Scase et al.
DotsComponent.noiseDots.updates:None
DotsComponent.fieldShape.default:'circle'
DotsComponent.fieldShape.label:Field shape
DotsComponent.fieldShape.allowedVals:['circle', 'square']
DotsComponent.fieldShape.staticUpdater:None
DotsComponent.fieldShape.val:circle
DotsComponent.fieldShape.readOnly:False
DotsComponent.fieldShape.valType:str
DotsComponent.fieldShape.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.fieldShape.allowedTypes:[]
DotsComponent.fieldShape.categ:Basic
DotsComponent.fieldShape.hint:What is the shape of the field?
DotsComponent.fieldShape.updates:constant
DotsComponent.fieldSize.default:1.0
DotsComponent.fieldSize.label:Field size
DotsComponent.fieldSize.allowedVals:[]
DotsComponent.fieldSize.staticUpdater:None
DotsComponent.fieldSize.val:1.0
DotsComponent.fieldSize.readOnly:False
DotsComponent.fieldSize.valType:code
DotsComponent.fieldSize.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.fieldSize.allowedTypes:[]
DotsComponent.fieldSize.categ:Basic
DotsComponent.fieldSize.hint:What is the size of the field (in the specified units)?
DotsComponent.fieldSize.updates:constant
DotsComponent.fieldPos.default:(0.0, 0.0)
DotsComponent.fieldPos.label:Field position
DotsComponent.fieldPos.allowedVals:[]
DotsComponent.fieldPos.staticUpdater:None
DotsComponent.fieldPos.val:(0.0, 0.0)
DotsComponent.fieldPos.readOnly:False
DotsComponent.fieldPos.valType:code
DotsComponent.fieldPos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.fieldPos.allowedTypes:[]
DotsComponent.fieldPos.categ:Basic
DotsComponent.fieldPos.hint:Where is the field centred (in the specified units)?
DotsComponent.fieldPos.updates:constant
EnvGratingComponent.order:['carrier', 'mask']
EnvGratingComponent.name.default:env_grating
EnvGratingComponent.name.label:Name
EnvGratingComponent.name.allowedVals:[]
EnvGratingComponent.name.staticUpdater:None
EnvGratingComponent.name.val:env_grating
EnvGratingComponent.name.readOnly:False
EnvGratingComponent.name.valType:code
EnvGratingComponent.name.allowedUpdates:None
EnvGratingComponent.name.allowedTypes:[]
EnvGratingComponent.name.categ:Basic
EnvGratingComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
EnvGratingComponent.startType.default:'time (s)'
EnvGratingComponent.startType.label:start type
EnvGratingComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
EnvGratingComponent.startType.staticUpdater:None
EnvGratingComponent.startType.val:time (s)
EnvGratingComponent.startType.readOnly:False
EnvGratingComponent.startType.valType:str
EnvGratingComponent.startType.allowedUpdates:None
EnvGratingComponent.startType.allowedTypes:[]
EnvGratingComponent.startType.categ:Basic
EnvGratingComponent.startType.hint:How do you want to define your start point?
EnvGratingComponent.startType.updates:None
EnvGratingComponent.stopType.default:'duration (s)'
EnvGratingComponent.stopType.label:stop type
EnvGratingComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
EnvGratingComponent.stopType.staticUpdater:None
EnvGratingComponent.stopType.val:duration (s)
EnvGratingComponent.stopType.readOnly:False
EnvGratingComponent.stopType.valType:str
EnvGratingComponent.stopType.allowedUpdates:None
EnvGratingComponent.stopType.allowedTypes:[]
EnvGratingComponent.stopType.categ:Basic
EnvGratingComponent.stopType.hint:How do you want to define your end point?
EnvGratingComponent.stopType.updates:None
EnvGratingComponent.startVal.default:0.0
EnvGratingComponent.startVal.label:Start
EnvGratingComponent.startVal.allowedVals:[]
EnvGratingComponent.startVal.staticUpdater:None
EnvGratingComponent.startVal.val:0.0
EnvGratingComponent.startVal.readOnly:False
EnvGratingComponent.startVal.valType:code
EnvGratingComponent.startVal.allowedUpdates:None
EnvGratingComponent.startVal.allowedTypes:[]
EnvGratingComponent.startVal.categ:Basic
EnvGratingComponent.startVal.hint:When does the component start?
EnvGratingComponent.startVal.updates:None
EnvGratingComponent.stopVal.default:1.0
EnvGratingComponent.stopVal.label:Stop
EnvGratingComponent.stopVal.allowedVals:[]
EnvGratingComponent.stopVal.staticUpdater:None
EnvGratingComponent.stopVal.val:1.0
EnvGratingComponent.stopVal.readOnly:False
EnvGratingComponent.stopVal.valType:code
EnvGratingComponent.stopVal.allowedUpdates:[]
EnvGratingComponent.stopVal.allowedTypes:[]
EnvGratingComponent.stopVal.categ:Basic
EnvGratingComponent.stopVal.hint:When does the component end? (blank is endless)
EnvGratingComponent.stopVal.updates:constant
EnvGratingComponent.startEstim.default:
EnvGratingComponent.startEstim.label:Expected start (s)
EnvGratingComponent.startEstim.allowedVals:[]
EnvGratingComponent.startEstim.staticUpdater:None
EnvGratingComponent.startEstim.val:
EnvGratingComponent.startEstim.readOnly:False
EnvGratingComponent.startEstim.valType:code
EnvGratingComponent.startEstim.allowedUpdates:None
EnvGratingComponent.startEstim.allowedTypes:[]
EnvGratingComponent.startEstim.categ:Basic
EnvGratingComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
EnvGratingComponent.startEstim.updates:None
EnvGratingComponent.durationEstim.default:
EnvGratingComponent.durationEstim.label:Expected duration (s)
EnvGratingComponent.durationEstim.allowedVals:[]
EnvGratingComponent.durationEstim.staticUpdater:None
EnvGratingComponent.durationEstim.val:
EnvGratingComponent.durationEstim.readOnly:False
EnvGratingComponent.durationEstim.valType:code
EnvGratingComponent.durationEstim.allowedUpdates:None
EnvGratingComponent.durationEstim.allowedTypes:[]
EnvGratingComponent.durationEstim.categ:Basic
EnvGratingComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
EnvGratingComponent.durationEstim.updates:None
EnvGratingComponent.units.default:'from exp settings'
EnvGratingComponent.units.label:Units
EnvGratingComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
EnvGratingComponent.units.staticUpdater:None
EnvGratingComponent.units.val:from exp settings
EnvGratingComponent.units.readOnly:False
EnvGratingComponent.units.valType:str
EnvGratingComponent.units.allowedUpdates:None
EnvGratingComponent.units.allowedTypes:[]
EnvGratingComponent.units.categ:Basic
EnvGratingComponent.units.hint:Units of dimensions for this stimulus
EnvGratingComponent.units.updates:None
EnvGratingComponent.color.default:[1,1,1]
EnvGratingComponent.color.label:Color
EnvGratingComponent.color.allowedVals:[]
EnvGratingComponent.color.staticUpdater:None
EnvGratingComponent.color.val:$[1,1,1]
EnvGratingComponent.color.readOnly:False
EnvGratingComponent.color.valType:str
EnvGratingComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.color.allowedTypes:[]
EnvGratingComponent.color.categ:Basic
EnvGratingComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
EnvGratingComponent.color.updates:constant
EnvGratingComponent.opacity.default:1
EnvGratingComponent.opacity.label:Opacity
EnvGratingComponent.opacity.allowedVals:[]
EnvGratingComponent.opacity.staticUpdater:None
EnvGratingComponent.opacity.val:1
EnvGratingComponent.opacity.readOnly:False
EnvGratingComponent.opacity.valType:code
EnvGratingComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.opacity.allowedTypes:[]
EnvGratingComponent.opacity.categ:Basic
EnvGratingComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
EnvGratingComponent.opacity.updates:constant
EnvGratingComponent.colorSpace.default:'rgb'
EnvGratingComponent.colorSpace.label:Color space
EnvGratingComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
EnvGratingComponent.colorSpace.staticUpdater:None
EnvGratingComponent.colorSpace.val:rgb
EnvGratingComponent.colorSpace.readOnly:False
EnvGratingComponent.colorSpace.valType:str
EnvGratingComponent.colorSpace.allowedUpdates:None
EnvGratingComponent.colorSpace.allowedTypes:[]
EnvGratingComponent.colorSpace.categ:Basic
EnvGratingComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
EnvGratingComponent.colorSpace.updates:constant
EnvGratingComponent.pos.default:(0, 0)
EnvGratingComponent.pos.label:Position [x,y]
EnvGratingComponent.pos.allowedVals:[]
EnvGratingComponent.pos.staticUpdater:None
EnvGratingComponent.pos.val:(0, 0)
EnvGratingComponent.pos.readOnly:False
EnvGratingComponent.pos.valType:code
EnvGratingComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.pos.allowedTypes:[]
EnvGratingComponent.pos.categ:Basic
EnvGratingComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
EnvGratingComponent.pos.updates:constant
EnvGratingComponent.size.default:(0.5, 0.5)
EnvGratingComponent.size.label:Size [w,h]
EnvGratingComponent.size.allowedVals:[]
EnvGratingComponent.size.staticUpdater:None
EnvGratingComponent.size.val:(0.5, 0.5)
EnvGratingComponent.size.readOnly:False
EnvGratingComponent.size.valType:code
EnvGratingComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.size.allowedTypes:[]
EnvGratingComponent.size.categ:Basic
EnvGratingComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
EnvGratingComponent.size.updates:constant
EnvGratingComponent.ori.default:0
EnvGratingComponent.ori.label:Carrier Orientation
EnvGratingComponent.ori.allowedVals:[]
EnvGratingComponent.ori.staticUpdater:None
EnvGratingComponent.ori.val:0
EnvGratingComponent.ori.readOnly:False
EnvGratingComponent.ori.valType:code
EnvGratingComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.ori.allowedTypes:[]
EnvGratingComponent.ori.categ:Carrier
EnvGratingComponent.ori.hint:Orientation of this stimulus (in deg)
EnvGratingComponent.ori.updates:constant
EnvGratingComponent.carrier.default:'sin'
EnvGratingComponent.carrier.label:Carrier texture
EnvGratingComponent.carrier.allowedVals:[]
EnvGratingComponent.carrier.staticUpdater:None
EnvGratingComponent.carrier.val:sin
EnvGratingComponent.carrier.readOnly:False
EnvGratingComponent.carrier.valType:str
EnvGratingComponent.carrier.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.carrier.allowedTypes:[]
EnvGratingComponent.carrier.categ:Carrier
EnvGratingComponent.carrier.hint:The (2D) texture of the background - can be sin, sqr, sinXsin... or a filename (including path)
EnvGratingComponent.carrier.updates:constant
EnvGratingComponent.mask.default:'None'
EnvGratingComponent.mask.label:Mask
EnvGratingComponent.mask.allowedVals:[]
EnvGratingComponent.mask.staticUpdater:None
EnvGratingComponent.mask.val:None
EnvGratingComponent.mask.readOnly:False
EnvGratingComponent.mask.valType:str
EnvGratingComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.mask.allowedTypes:[]
EnvGratingComponent.mask.categ:Carrier
EnvGratingComponent.mask.hint:An image to define the alpha mask (ie shape)- gauss, circle... or a filename (including path)
EnvGratingComponent.mask.updates:constant
EnvGratingComponent.contrast.default:0.5
EnvGratingComponent.contrast.label:Carrier contrast
EnvGratingComponent.contrast.allowedVals:[]
EnvGratingComponent.contrast.staticUpdater:None
EnvGratingComponent.contrast.val:0.5
EnvGratingComponent.contrast.readOnly:False
EnvGratingComponent.contrast.valType:code
EnvGratingComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.contrast.allowedTypes:[]
EnvGratingComponent.contrast.categ:Carrier
EnvGratingComponent.contrast.hint:Contrast of background carrier
EnvGratingComponent.contrast.updates:constant
EnvGratingComponent.sf.default:1.0
EnvGratingComponent.sf.label:Carrier spatial frequency
EnvGratingComponent.sf.allowedVals:[]
EnvGratingComponent.sf.staticUpdater:None
EnvGratingComponent.sf.val:1.0
EnvGratingComponent.sf.readOnly:False
EnvGratingComponent.sf.valType:code
EnvGratingComponent.sf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.sf.allowedTypes:[]
EnvGratingComponent.sf.categ:Carrier
EnvGratingComponent.sf.hint:Spatial frequency of background carrier repeats across the grating in 1 or 2 dimensions, e.g. 4 or [2,3]
EnvGratingComponent.sf.updates:constant
EnvGratingComponent.phase.default:0.0
EnvGratingComponent.phase.label:Carrier phase (in cycles)
EnvGratingComponent.phase.allowedVals:[]
EnvGratingComponent.phase.staticUpdater:None
EnvGratingComponent.phase.val:0.0
EnvGratingComponent.phase.readOnly:False
EnvGratingComponent.phase.valType:code
EnvGratingComponent.phase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.phase.allowedTypes:[]
EnvGratingComponent.phase.categ:Carrier
EnvGratingComponent.phase.hint:Spatial positioning of the background carrier (wraps in range 0-1.0)
EnvGratingComponent.phase.updates:constant
EnvGratingComponent.texture resolution.default:128
EnvGratingComponent.texture resolution.label:Texture resolution
EnvGratingComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
EnvGratingComponent.texture resolution.staticUpdater:None
EnvGratingComponent.texture resolution.val:128
EnvGratingComponent.texture resolution.readOnly:False
EnvGratingComponent.texture resolution.valType:code
EnvGratingComponent.texture resolution.allowedUpdates:[]
EnvGratingComponent.texture resolution.allowedTypes:[]
EnvGratingComponent.texture resolution.categ:Carrier
EnvGratingComponent.texture resolution.hint:Resolution of the texture for standard ones such as sin, sqr etc. For most cases a value of 256 pixels will suffice
EnvGratingComponent.texture resolution.updates:constant
EnvGratingComponent.interpolate.default:'linear'
EnvGratingComponent.interpolate.label:Interpolate
EnvGratingComponent.interpolate.allowedVals:['linear', 'nearest']
EnvGratingComponent.interpolate.staticUpdater:None
EnvGratingComponent.interpolate.val:linear
EnvGratingComponent.interpolate.readOnly:False
EnvGratingComponent.interpolate.valType:str
EnvGratingComponent.interpolate.allowedUpdates:[]
EnvGratingComponent.interpolate.allowedTypes:[]
EnvGratingComponent.interpolate.categ:Carrier
EnvGratingComponent.interpolate.hint:How should the image be interpolated if/when rescaled
EnvGratingComponent.interpolate.updates:constant
EnvGratingComponent.envelope.default:'sin'
EnvGratingComponent.envelope.label:Envelope texture
EnvGratingComponent.envelope.allowedVals:[]
EnvGratingComponent.envelope.staticUpdater:None
EnvGratingComponent.envelope.val:sin
EnvGratingComponent.envelope.readOnly:False
EnvGratingComponent.envelope.valType:str
EnvGratingComponent.envelope.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.envelope.allowedTypes:[]
EnvGratingComponent.envelope.categ:Envelope
EnvGratingComponent.envelope.hint:The (2D) texture of the envelope - can be sin, sqr, sinXsin... or a filename (including path)
EnvGratingComponent.envelope.updates:constant
EnvGratingComponent.envsf.default:1.0
EnvGratingComponent.envsf.label:Envelope spatial frequency
EnvGratingComponent.envsf.allowedVals:[]
EnvGratingComponent.envsf.staticUpdater:None
EnvGratingComponent.envsf.val:1.0
EnvGratingComponent.envsf.readOnly:False
EnvGratingComponent.envsf.valType:code
EnvGratingComponent.envsf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.envsf.allowedTypes:[]
EnvGratingComponent.envsf.categ:Envelope
EnvGratingComponent.envsf.hint:Spatial frequency of the modulation envelope repeats across the grating in 1 or 2 dimensions, e.g. 4 or [2,3]
EnvGratingComponent.envsf.updates:constant
EnvGratingComponent.envphase.default:0.0
EnvGratingComponent.envphase.label:Envelope phase
EnvGratingComponent.envphase.allowedVals:[]
EnvGratingComponent.envphase.staticUpdater:None
EnvGratingComponent.envphase.val:0.0
EnvGratingComponent.envphase.readOnly:False
EnvGratingComponent.envphase.valType:code
EnvGratingComponent.envphase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.envphase.allowedTypes:[]
EnvGratingComponent.envphase.categ:Envelope
EnvGratingComponent.envphase.hint:Spatial positioning of the modulation envelope(wraps in range 0-1.0)
EnvGratingComponent.envphase.updates:constant
EnvGratingComponent.envori.default:0.0
EnvGratingComponent.envori.label:Envelope orientation
EnvGratingComponent.envori.allowedVals:[]
EnvGratingComponent.envori.staticUpdater:None
EnvGratingComponent.envori.val:0.0
EnvGratingComponent.envori.readOnly:False
EnvGratingComponent.envori.valType:code
EnvGratingComponent.envori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.envori.allowedTypes:[]
EnvGratingComponent.envori.categ:Envelope
EnvGratingComponent.envori.hint:Orientation of the modulation envelope(wraps in range 0-360)
EnvGratingComponent.envori.updates:constant
EnvGratingComponent.moddepth.default:1.0
EnvGratingComponent.moddepth.label:Envelope modulation depth
EnvGratingComponent.moddepth.allowedVals:[]
EnvGratingComponent.moddepth.staticUpdater:None
EnvGratingComponent.moddepth.val:1.0
EnvGratingComponent.moddepth.readOnly:False
EnvGratingComponent.moddepth.valType:code
EnvGratingComponent.moddepth.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.moddepth.allowedTypes:[]
EnvGratingComponent.moddepth.categ:Envelope
EnvGratingComponent.moddepth.hint:Modulation depth of modulation envelope
EnvGratingComponent.moddepth.updates:constant
EnvGratingComponent.beat.default:False
EnvGratingComponent.beat.label:Is modulation a beat
EnvGratingComponent.beat.allowedVals:[]
EnvGratingComponent.beat.staticUpdater:None
EnvGratingComponent.beat.val:False
EnvGratingComponent.beat.readOnly:False
EnvGratingComponent.beat.valType:str
EnvGratingComponent.beat.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.beat.allowedTypes:[]
EnvGratingComponent.beat.categ:Envelope
EnvGratingComponent.beat.hint:Do you want a 'beat'? [beat = carrier*envelope, no beat = carrier*(1+envelope), True/False, Y/N]
EnvGratingComponent.beat.updates:constant
EnvGratingComponent.blendmode.default:'avg'
EnvGratingComponent.blendmode.label:OpenGL blend mode
EnvGratingComponent.blendmode.allowedVals:['avg', 'add']
EnvGratingComponent.blendmode.staticUpdater:None
EnvGratingComponent.blendmode.val:avg
EnvGratingComponent.blendmode.readOnly:False
EnvGratingComponent.blendmode.valType:str
EnvGratingComponent.blendmode.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.blendmode.allowedTypes:[]
EnvGratingComponent.blendmode.categ:Basic
EnvGratingComponent.blendmode.hint:OpenGL Blendmode. Avg is most common mode in PsychoPy, add is useful if combining a beat with the carrier image or numpy array at point of display
EnvGratingComponent.blendmode.updates:constant
GratingComponent.order:['tex', 'mask']
GratingComponent.name.default:grating
GratingComponent.name.label:Name
GratingComponent.name.allowedVals:[]
GratingComponent.name.staticUpdater:None
GratingComponent.name.val:grating
GratingComponent.name.readOnly:False
GratingComponent.name.valType:code
GratingComponent.name.allowedUpdates:None
GratingComponent.name.allowedTypes:[]
GratingComponent.name.categ:Basic
GratingComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
GratingComponent.startType.default:'time (s)'
GratingComponent.startType.label:start type
GratingComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
GratingComponent.startType.staticUpdater:None
GratingComponent.startType.val:time (s)
GratingComponent.startType.readOnly:False
GratingComponent.startType.valType:str
GratingComponent.startType.allowedUpdates:None
GratingComponent.startType.allowedTypes:[]
GratingComponent.startType.categ:Basic
GratingComponent.startType.hint:How do you want to define your start point?
GratingComponent.startType.updates:None
GratingComponent.stopType.default:'duration (s)'
GratingComponent.stopType.label:stop type
GratingComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
GratingComponent.stopType.staticUpdater:None
GratingComponent.stopType.val:duration (s)
GratingComponent.stopType.readOnly:False
GratingComponent.stopType.valType:str
GratingComponent.stopType.allowedUpdates:None
GratingComponent.stopType.allowedTypes:[]
GratingComponent.stopType.categ:Basic
GratingComponent.stopType.hint:How do you want to define your end point?
GratingComponent.stopType.updates:None
GratingComponent.startVal.default:0.0
GratingComponent.startVal.label:Start
GratingComponent.startVal.allowedVals:[]
GratingComponent.startVal.staticUpdater:None
GratingComponent.startVal.val:0.0
GratingComponent.startVal.readOnly:False
GratingComponent.startVal.valType:code
GratingComponent.startVal.allowedUpdates:None
GratingComponent.startVal.allowedTypes:[]
GratingComponent.startVal.categ:Basic
GratingComponent.startVal.hint:When does the component start?
GratingComponent.startVal.updates:None
GratingComponent.stopVal.default:1.0
GratingComponent.stopVal.label:Stop
GratingComponent.stopVal.allowedVals:[]
GratingComponent.stopVal.staticUpdater:None
GratingComponent.stopVal.val:1.0
GratingComponent.stopVal.readOnly:False
GratingComponent.stopVal.valType:code
GratingComponent.stopVal.allowedUpdates:[]
GratingComponent.stopVal.allowedTypes:[]
GratingComponent.stopVal.categ:Basic
GratingComponent.stopVal.hint:When does the component end? (blank is endless)
GratingComponent.stopVal.updates:constant
GratingComponent.startEstim.default:
GratingComponent.startEstim.label:Expected start (s)
GratingComponent.startEstim.allowedVals:[]
GratingComponent.startEstim.staticUpdater:None
GratingComponent.startEstim.val:
GratingComponent.startEstim.readOnly:False
GratingComponent.startEstim.valType:code
GratingComponent.startEstim.allowedUpdates:None
GratingComponent.startEstim.allowedTypes:[]
GratingComponent.startEstim.categ:Basic
GratingComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
GratingComponent.startEstim.updates:None
GratingComponent.durationEstim.default:
GratingComponent.durationEstim.label:Expected duration (s)
GratingComponent.durationEstim.allowedVals:[]
GratingComponent.durationEstim.staticUpdater:None
GratingComponent.durationEstim.val:
GratingComponent.durationEstim.readOnly:False
GratingComponent.durationEstim.valType:code
GratingComponent.durationEstim.allowedUpdates:None
GratingComponent.durationEstim.allowedTypes:[]
GratingComponent.durationEstim.categ:Basic
GratingComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
GratingComponent.durationEstim.updates:None
GratingComponent.units.default:'from exp settings'
GratingComponent.units.label:Units
GratingComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
GratingComponent.units.staticUpdater:None
GratingComponent.units.val:from exp settings
GratingComponent.units.readOnly:False
GratingComponent.units.valType:str
GratingComponent.units.allowedUpdates:None
GratingComponent.units.allowedTypes:[]
GratingComponent.units.categ:Basic
GratingComponent.units.hint:Units of dimensions for this stimulus
GratingComponent.units.updates:None
GratingComponent.color.default:[1,1,1]
GratingComponent.color.label:Color
GratingComponent.color.allowedVals:[]
GratingComponent.color.staticUpdater:None
GratingComponent.color.val:$[1,1,1]
GratingComponent.color.readOnly:False
GratingComponent.color.valType:str
GratingComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.color.allowedTypes:[]
GratingComponent.color.categ:Basic
GratingComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
GratingComponent.color.updates:constant
GratingComponent.opacity.default:1
GratingComponent.opacity.label:Opacity
GratingComponent.opacity.allowedVals:[]
GratingComponent.opacity.staticUpdater:None
GratingComponent.opacity.val:1
GratingComponent.opacity.readOnly:False
GratingComponent.opacity.valType:code
GratingComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.opacity.allowedTypes:[]
GratingComponent.opacity.categ:Basic
GratingComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
GratingComponent.opacity.updates:constant
GratingComponent.colorSpace.default:'rgb'
GratingComponent.colorSpace.label:Color space
GratingComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
GratingComponent.colorSpace.staticUpdater:None
GratingComponent.colorSpace.val:rgb
GratingComponent.colorSpace.readOnly:False
GratingComponent.colorSpace.valType:str
GratingComponent.colorSpace.allowedUpdates:None
GratingComponent.colorSpace.allowedTypes:[]
GratingComponent.colorSpace.categ:Basic
GratingComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
GratingComponent.colorSpace.updates:constant
GratingComponent.pos.default:(0, 0)
GratingComponent.pos.label:Position [x,y]
GratingComponent.pos.allowedVals:[]
GratingComponent.pos.staticUpdater:None
GratingComponent.pos.val:(0, 0)
GratingComponent.pos.readOnly:False
GratingComponent.pos.valType:code
GratingComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.pos.allowedTypes:[]
GratingComponent.pos.categ:Basic
GratingComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
GratingComponent.pos.updates:constant
GratingComponent.size.default:(0.5, 0.5)
GratingComponent.size.label:Size [w,h]
GratingComponent.size.allowedVals:[]
GratingComponent.size.staticUpdater:None
GratingComponent.size.val:(0.5, 0.5)
GratingComponent.size.readOnly:False
GratingComponent.size.valType:code
GratingComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.size.allowedTypes:[]
GratingComponent.size.categ:Basic
GratingComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
GratingComponent.size.updates:constant
GratingComponent.ori.default:0
GratingComponent.ori.label:Orientation
GratingComponent.ori.allowedVals:[]
GratingComponent.ori.staticUpdater:None
GratingComponent.ori.val:0
GratingComponent.ori.readOnly:False
GratingComponent.ori.valType:code
GratingComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.ori.allowedTypes:[]
GratingComponent.ori.categ:Basic
GratingComponent.ori.hint:Orientation of this stimulus (in deg)
GratingComponent.ori.updates:constant
GratingComponent.tex.default:'sin'
GratingComponent.tex.label:Texture
GratingComponent.tex.allowedVals:[]
GratingComponent.tex.staticUpdater:None
GratingComponent.tex.val:sin
GratingComponent.tex.readOnly:False
GratingComponent.tex.valType:str
GratingComponent.tex.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.tex.allowedTypes:[]
GratingComponent.tex.categ:Advanced
GratingComponent.tex.hint:The (2D) texture of the grating - can be sin, sqr, sinXsin... or a filename (including path)
GratingComponent.tex.updates:constant
GratingComponent.mask.default:'None'
GratingComponent.mask.label:Mask
GratingComponent.mask.allowedVals:[]
GratingComponent.mask.staticUpdater:None
GratingComponent.mask.val:None
GratingComponent.mask.readOnly:False
GratingComponent.mask.valType:str
GratingComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.mask.allowedTypes:[]
GratingComponent.mask.categ:Advanced
GratingComponent.mask.hint:An image to define the alpha mask (ie shape)- gauss, circle... or a filename (including path)
GratingComponent.mask.updates:constant
GratingComponent.sf.default:None
GratingComponent.sf.label:Spatial frequency
GratingComponent.sf.allowedVals:[]
GratingComponent.sf.staticUpdater:None
GratingComponent.sf.val:None
GratingComponent.sf.readOnly:False
GratingComponent.sf.valType:code
GratingComponent.sf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.sf.allowedTypes:[]
GratingComponent.sf.categ:Advanced
GratingComponent.sf.hint:Spatial frequency of image repeats across the grating in 1 or 2 dimensions, e.g. 4 or [2,3]
GratingComponent.sf.updates:constant
GratingComponent.phase.default:0.0
GratingComponent.phase.label:Phase (in cycles)
GratingComponent.phase.allowedVals:[]
GratingComponent.phase.staticUpdater:None
GratingComponent.phase.val:0.0
GratingComponent.phase.readOnly:False
GratingComponent.phase.valType:code
GratingComponent.phase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.phase.allowedTypes:[]
GratingComponent.phase.categ:Advanced
GratingComponent.phase.hint:Spatial positioning of the image on the grating (wraps in range 0-1.0)
GratingComponent.phase.updates:constant
GratingComponent.texture resolution.default:128
GratingComponent.texture resolution.label:Texture resolution
GratingComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
GratingComponent.texture resolution.staticUpdater:None
GratingComponent.texture resolution.val:128
GratingComponent.texture resolution.readOnly:False
GratingComponent.texture resolution.valType:code
GratingComponent.texture resolution.allowedUpdates:[]
GratingComponent.texture resolution.allowedTypes:[]
GratingComponent.texture resolution.categ:Advanced
GratingComponent.texture resolution.hint:Resolution of the texture for standard ones such as sin, sqr etc. For most cases a value of 256 pixels will suffice
GratingComponent.texture resolution.updates:constant
GratingComponent.interpolate.default:'linear'
GratingComponent.interpolate.label:Interpolate
GratingComponent.interpolate.allowedVals:['linear', 'nearest']
GratingComponent.interpolate.staticUpdater:None
GratingComponent.interpolate.val:linear
GratingComponent.interpolate.readOnly:False
GratingComponent.interpolate.valType:str
GratingComponent.interpolate.allowedUpdates:[]
GratingComponent.interpolate.allowedTypes:[]
GratingComponent.interpolate.categ:Advanced
GratingComponent.interpolate.hint:How should the image be interpolated if/when rescaled
GratingComponent.interpolate.updates:constant
GratingComponent.blendmode.default:'avg'
GratingComponent.blendmode.label:OpenGL blend mode
GratingComponent.blendmode.allowedVals:['avg', 'add']
GratingComponent.blendmode.staticUpdater:None
GratingComponent.blendmode.val:avg
GratingComponent.blendmode.readOnly:False
GratingComponent.blendmode.valType:str
GratingComponent.blendmode.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.blendmode.allowedTypes:[]
GratingComponent.blendmode.categ:Basic
GratingComponent.blendmode.hint:OpenGL Blendmode: avg gives traditional transparency, add is important to combine gratings)]
GratingComponent.blendmode.updates:constant
ImageComponent.order:['name', 'image', 'pos', 'size', 'ori', 'opacity']
ImageComponent.name.default:image
ImageComponent.name.label:Name
ImageComponent.name.allowedVals:[]
ImageComponent.name.staticUpdater:None
ImageComponent.name.val:image
ImageComponent.name.readOnly:False
ImageComponent.name.valType:code
ImageComponent.name.allowedUpdates:None
ImageComponent.name.allowedTypes:[]
ImageComponent.name.categ:Basic
ImageComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
ImageComponent.startType.default:'time (s)'
ImageComponent.startType.label:start type
ImageComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ImageComponent.startType.staticUpdater:None
ImageComponent.startType.val:time (s)
ImageComponent.startType.readOnly:False
ImageComponent.startType.valType:str
ImageComponent.startType.allowedUpdates:None
ImageComponent.startType.allowedTypes:[]
ImageComponent.startType.categ:Basic
ImageComponent.startType.hint:How do you want to define your start point?
ImageComponent.startType.updates:None
ImageComponent.stopType.default:'duration (s)'
ImageComponent.stopType.label:stop type
ImageComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ImageComponent.stopType.staticUpdater:None
ImageComponent.stopType.val:duration (s)
ImageComponent.stopType.readOnly:False
ImageComponent.stopType.valType:str
ImageComponent.stopType.allowedUpdates:None
ImageComponent.stopType.allowedTypes:[]
ImageComponent.stopType.categ:Basic
ImageComponent.stopType.hint:How do you want to define your end point?
ImageComponent.stopType.updates:None
ImageComponent.startVal.default:0.0
ImageComponent.startVal.label:Start
ImageComponent.startVal.allowedVals:[]
ImageComponent.startVal.staticUpdater:None
ImageComponent.startVal.val:0.0
ImageComponent.startVal.readOnly:False
ImageComponent.startVal.valType:code
ImageComponent.startVal.allowedUpdates:None
ImageComponent.startVal.allowedTypes:[]
ImageComponent.startVal.categ:Basic
ImageComponent.startVal.hint:When does the component start?
ImageComponent.startVal.updates:None
ImageComponent.stopVal.default:1.0
ImageComponent.stopVal.label:Stop
ImageComponent.stopVal.allowedVals:[]
ImageComponent.stopVal.staticUpdater:None
ImageComponent.stopVal.val:1.0
ImageComponent.stopVal.readOnly:False
ImageComponent.stopVal.valType:code
ImageComponent.stopVal.allowedUpdates:[]
ImageComponent.stopVal.allowedTypes:[]
ImageComponent.stopVal.categ:Basic
ImageComponent.stopVal.hint:When does the component end? (blank is endless)
ImageComponent.stopVal.updates:constant
ImageComponent.startEstim.default:
ImageComponent.startEstim.label:Expected start (s)
ImageComponent.startEstim.allowedVals:[]
ImageComponent.startEstim.staticUpdater:None
ImageComponent.startEstim.val:
ImageComponent.startEstim.readOnly:False
ImageComponent.startEstim.valType:code
ImageComponent.startEstim.allowedUpdates:None
ImageComponent.startEstim.allowedTypes:[]
ImageComponent.startEstim.categ:Basic
ImageComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ImageComponent.startEstim.updates:None
ImageComponent.durationEstim.default:
ImageComponent.durationEstim.label:Expected duration (s)
ImageComponent.durationEstim.allowedVals:[]
ImageComponent.durationEstim.staticUpdater:None
ImageComponent.durationEstim.val:
ImageComponent.durationEstim.readOnly:False
ImageComponent.durationEstim.valType:code
ImageComponent.durationEstim.allowedUpdates:None
ImageComponent.durationEstim.allowedTypes:[]
ImageComponent.durationEstim.categ:Basic
ImageComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ImageComponent.durationEstim.updates:None
ImageComponent.units.default:'from exp settings'
ImageComponent.units.label:Units
ImageComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
ImageComponent.units.staticUpdater:None
ImageComponent.units.val:from exp settings
ImageComponent.units.readOnly:False
ImageComponent.units.valType:str
ImageComponent.units.allowedUpdates:None
ImageComponent.units.allowedTypes:[]
ImageComponent.units.categ:Basic
ImageComponent.units.hint:Units of dimensions for this stimulus
ImageComponent.units.updates:None
ImageComponent.color.default:[1,1,1]
ImageComponent.color.label:Color
ImageComponent.color.allowedVals:[]
ImageComponent.color.staticUpdater:None
ImageComponent.color.val:$[1,1,1]
ImageComponent.color.readOnly:False
ImageComponent.color.valType:str
ImageComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.color.allowedTypes:[]
ImageComponent.color.categ:Advanced
ImageComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
ImageComponent.color.updates:constant
ImageComponent.opacity.default:1
ImageComponent.opacity.label:Opacity
ImageComponent.opacity.allowedVals:[]
ImageComponent.opacity.staticUpdater:None
ImageComponent.opacity.val:1
ImageComponent.opacity.readOnly:False
ImageComponent.opacity.valType:code
ImageComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.opacity.allowedTypes:[]
ImageComponent.opacity.categ:Basic
ImageComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
ImageComponent.opacity.updates:constant
ImageComponent.colorSpace.default:'rgb'
ImageComponent.colorSpace.label:Color space
ImageComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
ImageComponent.colorSpace.staticUpdater:None
ImageComponent.colorSpace.val:rgb
ImageComponent.colorSpace.readOnly:False
ImageComponent.colorSpace.valType:str
ImageComponent.colorSpace.allowedUpdates:None
ImageComponent.colorSpace.allowedTypes:[]
ImageComponent.colorSpace.categ:Advanced
ImageComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
ImageComponent.colorSpace.updates:constant
ImageComponent.pos.default:(0, 0)
ImageComponent.pos.label:Position [x,y]
ImageComponent.pos.allowedVals:[]
ImageComponent.pos.staticUpdater:None
ImageComponent.pos.val:(0, 0)
ImageComponent.pos.readOnly:False
ImageComponent.pos.valType:code
ImageComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.pos.allowedTypes:[]
ImageComponent.pos.categ:Basic
ImageComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
ImageComponent.pos.updates:constant
ImageComponent.size.default:(0.5, 0.5)
ImageComponent.size.label:Size [w,h]
ImageComponent.size.allowedVals:[]
ImageComponent.size.staticUpdater:None
ImageComponent.size.val:(0.5, 0.5)
ImageComponent.size.readOnly:False
ImageComponent.size.valType:code
ImageComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.size.allowedTypes:[]
ImageComponent.size.categ:Basic
ImageComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
ImageComponent.size.updates:constant
ImageComponent.ori.default:0
ImageComponent.ori.label:Orientation
ImageComponent.ori.allowedVals:[]
ImageComponent.ori.staticUpdater:None
ImageComponent.ori.val:0
ImageComponent.ori.readOnly:False
ImageComponent.ori.valType:code
ImageComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.ori.allowedTypes:[]
ImageComponent.ori.categ:Basic
ImageComponent.ori.hint:Orientation of this stimulus (in deg)
ImageComponent.ori.updates:constant
ImageComponent.image.default:''
ImageComponent.image.label:Image
ImageComponent.image.allowedVals:[]
ImageComponent.image.staticUpdater:None
ImageComponent.image.val:
ImageComponent.image.readOnly:False
ImageComponent.image.valType:str
ImageComponent.image.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.image.allowedTypes:[]
ImageComponent.image.categ:Basic
ImageComponent.image.hint:The image to be displayed - a filename, including path
ImageComponent.image.updates:constant
ImageComponent.mask.default:'None'
ImageComponent.mask.label:Mask
ImageComponent.mask.allowedVals:[]
ImageComponent.mask.staticUpdater:None
ImageComponent.mask.val:None
ImageComponent.mask.readOnly:False
ImageComponent.mask.valType:str
ImageComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.mask.allowedTypes:[]
ImageComponent.mask.categ:Advanced
ImageComponent.mask.hint:An image to define the alpha mask through which the image is seen - gauss, circle, None or a filename (including path)
ImageComponent.mask.updates:constant
ImageComponent.texture resolution.default:128
ImageComponent.texture resolution.label:Texture resolution
ImageComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
ImageComponent.texture resolution.staticUpdater:None
ImageComponent.texture resolution.val:128
ImageComponent.texture resolution.readOnly:False
ImageComponent.texture resolution.valType:code
ImageComponent.texture resolution.allowedUpdates:[]
ImageComponent.texture resolution.allowedTypes:[]
ImageComponent.texture resolution.categ:Advanced
ImageComponent.texture resolution.hint:Resolution of the mask if one is used.
ImageComponent.texture resolution.updates:constant
ImageComponent.interpolate.default:'linear'
ImageComponent.interpolate.label:Interpolate
ImageComponent.interpolate.allowedVals:['linear', 'nearest']
ImageComponent.interpolate.staticUpdater:None
ImageComponent.interpolate.val:linear
ImageComponent.interpolate.readOnly:False
ImageComponent.interpolate.valType:str
ImageComponent.interpolate.allowedUpdates:[]
ImageComponent.interpolate.allowedTypes:[]
ImageComponent.interpolate.categ:Advanced
ImageComponent.interpolate.hint:How should the image be interpolated if/when rescaled
ImageComponent.interpolate.updates:constant
ImageComponent.flipVert.default:False
ImageComponent.flipVert.label:Flip vertically
ImageComponent.flipVert.allowedVals:[]
ImageComponent.flipVert.staticUpdater:None
ImageComponent.flipVert.val:False
ImageComponent.flipVert.readOnly:False
ImageComponent.flipVert.valType:bool
ImageComponent.flipVert.allowedUpdates:[]
ImageComponent.flipVert.allowedTypes:[]
ImageComponent.flipVert.categ:Advanced
ImageComponent.flipVert.hint:Should the image be flipped vertically (top to bottom)?
ImageComponent.flipVert.updates:constant
ImageComponent.flipHoriz.default:False
ImageComponent.flipHoriz.label:Flip horizontally
ImageComponent.flipHoriz.allowedVals:[]
ImageComponent.flipHoriz.staticUpdater:None
ImageComponent.flipHoriz.val:False
ImageComponent.flipHoriz.readOnly:False
ImageComponent.flipHoriz.valType:bool
ImageComponent.flipHoriz.allowedUpdates:[]
ImageComponent.flipHoriz.allowedTypes:[]
ImageComponent.flipHoriz.categ:Advanced
ImageComponent.flipHoriz.hint:Should the image be flipped horizontally (left to right)?
ImageComponent.flipHoriz.updates:constant
KeyboardComponent.order:['forceEndRoutine', 'allowedKeys', 'store', 'storeCorrect', 'correctAns']
KeyboardComponent.name.default:key_resp
KeyboardComponent.name.label:Name
KeyboardComponent.name.allowedVals:[]
KeyboardComponent.name.staticUpdater:None
KeyboardComponent.name.val:key_resp
KeyboardComponent.name.readOnly:False
KeyboardComponent.name.valType:code
KeyboardComponent.name.allowedUpdates:None
KeyboardComponent.name.allowedTypes:[]
KeyboardComponent.name.categ:Basic
KeyboardComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
KeyboardComponent.startType.default:'time (s)'
KeyboardComponent.startType.label:start type
KeyboardComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
KeyboardComponent.startType.staticUpdater:None
KeyboardComponent.startType.val:time (s)
KeyboardComponent.startType.readOnly:False
KeyboardComponent.startType.valType:str
KeyboardComponent.startType.allowedUpdates:None
KeyboardComponent.startType.allowedTypes:[]
KeyboardComponent.startType.categ:Basic
KeyboardComponent.startType.hint:How do you want to define your start point?
KeyboardComponent.startType.updates:None
KeyboardComponent.stopType.default:'duration (s)'
KeyboardComponent.stopType.label:stop type
KeyboardComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
KeyboardComponent.stopType.staticUpdater:None
KeyboardComponent.stopType.val:duration (s)
KeyboardComponent.stopType.readOnly:False
KeyboardComponent.stopType.valType:str
KeyboardComponent.stopType.allowedUpdates:None
KeyboardComponent.stopType.allowedTypes:[]
KeyboardComponent.stopType.categ:Basic
KeyboardComponent.stopType.hint:How do you want to define your end point?
KeyboardComponent.stopType.updates:None
KeyboardComponent.startVal.default:0.0
KeyboardComponent.startVal.label:Start
KeyboardComponent.startVal.allowedVals:[]
KeyboardComponent.startVal.staticUpdater:None
KeyboardComponent.startVal.val:0.0
KeyboardComponent.startVal.readOnly:False
KeyboardComponent.startVal.valType:code
KeyboardComponent.startVal.allowedUpdates:None
KeyboardComponent.startVal.allowedTypes:[]
KeyboardComponent.startVal.categ:Basic
KeyboardComponent.startVal.hint:When does the component start?
KeyboardComponent.startVal.updates:None
KeyboardComponent.stopVal.default:
KeyboardComponent.stopVal.label:Stop
KeyboardComponent.stopVal.allowedVals:[]
KeyboardComponent.stopVal.staticUpdater:None
KeyboardComponent.stopVal.val:
KeyboardComponent.stopVal.readOnly:False
KeyboardComponent.stopVal.valType:code
KeyboardComponent.stopVal.allowedUpdates:[]
KeyboardComponent.stopVal.allowedTypes:[]
KeyboardComponent.stopVal.categ:Basic
KeyboardComponent.stopVal.hint:When does the component end? (blank is endless)
KeyboardComponent.stopVal.updates:constant
KeyboardComponent.startEstim.default:
KeyboardComponent.startEstim.label:Expected start (s)
KeyboardComponent.startEstim.allowedVals:[]
KeyboardComponent.startEstim.staticUpdater:None
KeyboardComponent.startEstim.val:
KeyboardComponent.startEstim.readOnly:False
KeyboardComponent.startEstim.valType:code
KeyboardComponent.startEstim.allowedUpdates:None
KeyboardComponent.startEstim.allowedTypes:[]
KeyboardComponent.startEstim.categ:Basic
KeyboardComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
KeyboardComponent.startEstim.updates:None
KeyboardComponent.durationEstim.default:
KeyboardComponent.durationEstim.label:Expected duration (s)
KeyboardComponent.durationEstim.allowedVals:[]
KeyboardComponent.durationEstim.staticUpdater:None
KeyboardComponent.durationEstim.val:
KeyboardComponent.durationEstim.readOnly:False
KeyboardComponent.durationEstim.valType:code
KeyboardComponent.durationEstim.allowedUpdates:None
KeyboardComponent.durationEstim.allowedTypes:[]
KeyboardComponent.durationEstim.categ:Basic
KeyboardComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
KeyboardComponent.durationEstim.updates:None
KeyboardComponent.allowedKeys.default:'y','n','left','right','space'
KeyboardComponent.allowedKeys.label:Allowed keys
KeyboardComponent.allowedKeys.allowedVals:[]
KeyboardComponent.allowedKeys.staticUpdater:None
KeyboardComponent.allowedKeys.val:'y','n','left','right','space'
KeyboardComponent.allowedKeys.readOnly:False
KeyboardComponent.allowedKeys.valType:code
KeyboardComponent.allowedKeys.allowedUpdates:['constant', 'set every repeat']
KeyboardComponent.allowedKeys.allowedTypes:[]
KeyboardComponent.allowedKeys.categ:Basic
KeyboardComponent.allowedKeys.hint:A comma-separated list of keys (with quotes), such as 'q','right','space','left'
KeyboardComponent.allowedKeys.updates:constant
KeyboardComponent.discard previous.default:True
KeyboardComponent.discard previous.label:Discard previous
KeyboardComponent.discard previous.allowedVals:[]
KeyboardComponent.discard previous.staticUpdater:None
KeyboardComponent.discard previous.val:True
KeyboardComponent.discard previous.readOnly:False
KeyboardComponent.discard previous.valType:bool
KeyboardComponent.discard previous.allowedUpdates:None
KeyboardComponent.discard previous.allowedTypes:[]
KeyboardComponent.discard previous.categ:Basic
KeyboardComponent.discard previous.hint:Do you want to discard all responses occuring before the onset of this component?
KeyboardComponent.discard previous.updates:constant
KeyboardComponent.store.default:'last key'
KeyboardComponent.store.label:Store
KeyboardComponent.store.allowedVals:['last key', 'first key', 'all keys', 'nothing']
KeyboardComponent.store.staticUpdater:None
KeyboardComponent.store.val:last key
KeyboardComponent.store.readOnly:False
KeyboardComponent.store.valType:str
KeyboardComponent.store.allowedUpdates:None
KeyboardComponent.store.allowedTypes:[]
KeyboardComponent.store.categ:Basic
KeyboardComponent.store.hint:Choose which (if any) responses to store at the end of a trial
KeyboardComponent.store.updates:constant
KeyboardComponent.forceEndRoutine.default:True
KeyboardComponent.forceEndRoutine.label:Force end of Routine
KeyboardComponent.forceEndRoutine.allowedVals:[]
KeyboardComponent.forceEndRoutine.staticUpdater:None
KeyboardComponent.forceEndRoutine.val:True
KeyboardComponent.forceEndRoutine.readOnly:False
KeyboardComponent.forceEndRoutine.valType:bool
KeyboardComponent.forceEndRoutine.allowedUpdates:None
KeyboardComponent.forceEndRoutine.allowedTypes:[]
KeyboardComponent.forceEndRoutine.categ:Basic
KeyboardComponent.forceEndRoutine.hint:Should a response force the end of the Routine (e.g end the trial)?
KeyboardComponent.forceEndRoutine.updates:constant
KeyboardComponent.storeCorrect.default:False
KeyboardComponent.storeCorrect.label:Store correct
KeyboardComponent.storeCorrect.allowedVals:[]
KeyboardComponent.storeCorrect.staticUpdater:None
KeyboardComponent.storeCorrect.val:False
KeyboardComponent.storeCorrect.readOnly:False
KeyboardComponent.storeCorrect.valType:bool
KeyboardComponent.storeCorrect.allowedUpdates:None
KeyboardComponent.storeCorrect.allowedTypes:[]
KeyboardComponent.storeCorrect.categ:Basic
KeyboardComponent.storeCorrect.hint:Do you want to save the response as correct/incorrect?
KeyboardComponent.storeCorrect.updates:constant
KeyboardComponent.correctAns.default:''
KeyboardComponent.correctAns.label:Correct answer
KeyboardComponent.correctAns.allowedVals:[]
KeyboardComponent.correctAns.staticUpdater:None
KeyboardComponent.correctAns.val:
KeyboardComponent.correctAns.readOnly:False
KeyboardComponent.correctAns.valType:str
KeyboardComponent.correctAns.allowedUpdates:None
KeyboardComponent.correctAns.allowedTypes:[]
KeyboardComponent.correctAns.categ:Basic
KeyboardComponent.correctAns.hint:What is the 'correct' key? Might be helpful to add a correctAns column and use $correctAns to compare to the key press.
KeyboardComponent.correctAns.updates:constant
KeyboardComponent.syncScreenRefresh.default:True
KeyboardComponent.syncScreenRefresh.label:sync RT with screen
KeyboardComponent.syncScreenRefresh.allowedVals:[]
KeyboardComponent.syncScreenRefresh.staticUpdater:None
KeyboardComponent.syncScreenRefresh.val:True
KeyboardComponent.syncScreenRefresh.readOnly:False
KeyboardComponent.syncScreenRefresh.valType:bool
KeyboardComponent.syncScreenRefresh.allowedUpdates:None
KeyboardComponent.syncScreenRefresh.allowedTypes:[]
KeyboardComponent.syncScreenRefresh.categ:Basic
KeyboardComponent.syncScreenRefresh.hint:A reaction time to a visual stimulus should be based on when the screen flipped
KeyboardComponent.syncScreenRefresh.updates:constant
MicrophoneComponent.order:['name']
MicrophoneComponent.name.default:mic_1
MicrophoneComponent.name.label:Name
MicrophoneComponent.name.allowedVals:[]
MicrophoneComponent.name.staticUpdater:None
MicrophoneComponent.name.val:mic_1
MicrophoneComponent.name.readOnly:False
MicrophoneComponent.name.valType:code
MicrophoneComponent.name.allowedUpdates:None
MicrophoneComponent.name.allowedTypes:[]
MicrophoneComponent.name.categ:Basic
MicrophoneComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
MicrophoneComponent.startType.default:'time (s)'
MicrophoneComponent.startType.label:start type
MicrophoneComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
MicrophoneComponent.startType.staticUpdater:None
MicrophoneComponent.startType.val:time (s)
MicrophoneComponent.startType.readOnly:False
MicrophoneComponent.startType.valType:str
MicrophoneComponent.startType.allowedUpdates:None
MicrophoneComponent.startType.allowedTypes:[]
MicrophoneComponent.startType.categ:Basic
MicrophoneComponent.startType.hint:How do you want to define your start point?
MicrophoneComponent.startType.updates:None
MicrophoneComponent.stopType.default:'duration (s)'
MicrophoneComponent.stopType.label:stop type
MicrophoneComponent.stopType.allowedVals:['duration (s)']
MicrophoneComponent.stopType.staticUpdater:None
MicrophoneComponent.stopType.val:duration (s)
MicrophoneComponent.stopType.readOnly:False
MicrophoneComponent.stopType.valType:str
MicrophoneComponent.stopType.allowedUpdates:None
MicrophoneComponent.stopType.allowedTypes:[]
MicrophoneComponent.stopType.categ:Basic
MicrophoneComponent.stopType.hint:The duration of the recording in seconds; blank = 0 sec
MicrophoneComponent.stopType.updates:None
MicrophoneComponent.startVal.default:0.0
MicrophoneComponent.startVal.label:Start
MicrophoneComponent.startVal.allowedVals:[]
MicrophoneComponent.startVal.staticUpdater:None
MicrophoneComponent.startVal.val:0.0
MicrophoneComponent.startVal.readOnly:False
MicrophoneComponent.startVal.valType:code
MicrophoneComponent.startVal.allowedUpdates:None
MicrophoneComponent.startVal.allowedTypes:[]
MicrophoneComponent.startVal.categ:Basic
MicrophoneComponent.startVal.hint:When does the component start?
MicrophoneComponent.startVal.updates:None
MicrophoneComponent.stopVal.default:2.0
MicrophoneComponent.stopVal.label:Stop
MicrophoneComponent.stopVal.allowedVals:[]
MicrophoneComponent.stopVal.staticUpdater:None
MicrophoneComponent.stopVal.val:2.0
MicrophoneComponent.stopVal.readOnly:False
MicrophoneComponent.stopVal.valType:code
MicrophoneComponent.stopVal.allowedUpdates:[]
MicrophoneComponent.stopVal.allowedTypes:[]
MicrophoneComponent.stopVal.categ:Basic
MicrophoneComponent.stopVal.hint:When does the component end? (blank is endless)
MicrophoneComponent.stopVal.updates:constant
MicrophoneComponent.startEstim.default:
MicrophoneComponent.startEstim.label:Expected start (s)
MicrophoneComponent.startEstim.allowedVals:[]
MicrophoneComponent.startEstim.staticUpdater:None
MicrophoneComponent.startEstim.val:
MicrophoneComponent.startEstim.readOnly:False
MicrophoneComponent.startEstim.valType:code
MicrophoneComponent.startEstim.allowedUpdates:None
MicrophoneComponent.startEstim.allowedTypes:[]
MicrophoneComponent.startEstim.categ:Basic
MicrophoneComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
MicrophoneComponent.startEstim.updates:None
MicrophoneComponent.durationEstim.default:
MicrophoneComponent.durationEstim.label:Expected duration (s)
MicrophoneComponent.durationEstim.allowedVals:[]
MicrophoneComponent.durationEstim.staticUpdater:None
MicrophoneComponent.durationEstim.val:
MicrophoneComponent.durationEstim.readOnly:False
MicrophoneComponent.durationEstim.valType:code
MicrophoneComponent.durationEstim.allowedUpdates:None
MicrophoneComponent.durationEstim.allowedTypes:[]
MicrophoneComponent.durationEstim.categ:Basic
MicrophoneComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
MicrophoneComponent.durationEstim.updates:None
MicrophoneComponent.stereo.default:False
MicrophoneComponent.stereo.label:Stereo
MicrophoneComponent.stereo.allowedVals:[]
MicrophoneComponent.stereo.staticUpdater:None
MicrophoneComponent.stereo.val:False
MicrophoneComponent.stereo.readOnly:False
MicrophoneComponent.stereo.valType:bool
MicrophoneComponent.stereo.allowedUpdates:None
MicrophoneComponent.stereo.allowedTypes:[]
MicrophoneComponent.stereo.categ:Basic
MicrophoneComponent.stereo.hint:Record two channels (stereo) or one (mono, smaller file)
MicrophoneComponent.stereo.updates:None
MouseComponent.order:['name', 'forceEndRoutineOnPress', 'saveMouseState', 'timeRelativeTo', 'newClicksOnly', 'clickable', 'saveParamsClickable']
MouseComponent.name.default:mouse
MouseComponent.name.label:Name
MouseComponent.name.allowedVals:[]
MouseComponent.name.staticUpdater:None
MouseComponent.name.val:mouse
MouseComponent.name.readOnly:False
MouseComponent.name.valType:code
MouseComponent.name.allowedUpdates:None
MouseComponent.name.allowedTypes:[]
MouseComponent.name.categ:Basic
MouseComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
MouseComponent.startType.default:'time (s)'
MouseComponent.startType.label:start type
MouseComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
MouseComponent.startType.staticUpdater:None
MouseComponent.startType.val:time (s)
MouseComponent.startType.readOnly:False
MouseComponent.startType.valType:str
MouseComponent.startType.allowedUpdates:None
MouseComponent.startType.allowedTypes:[]
MouseComponent.startType.categ:Basic
MouseComponent.startType.hint:How do you want to define your start point?
MouseComponent.startType.updates:None
MouseComponent.stopType.default:'duration (s)'
MouseComponent.stopType.label:stop type
MouseComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
MouseComponent.stopType.staticUpdater:None
MouseComponent.stopType.val:duration (s)
MouseComponent.stopType.readOnly:False
MouseComponent.stopType.valType:str
MouseComponent.stopType.allowedUpdates:None
MouseComponent.stopType.allowedTypes:[]
MouseComponent.stopType.categ:Basic
MouseComponent.stopType.hint:How do you want to define your end point?
MouseComponent.stopType.updates:None
MouseComponent.startVal.default:0.0
MouseComponent.startVal.label:Start
MouseComponent.startVal.allowedVals:[]
MouseComponent.startVal.staticUpdater:None
MouseComponent.startVal.val:0.0
MouseComponent.startVal.readOnly:False
MouseComponent.startVal.valType:code
MouseComponent.startVal.allowedUpdates:None
MouseComponent.startVal.allowedTypes:[]
MouseComponent.startVal.categ:Basic
MouseComponent.startVal.hint:When does the component start?
MouseComponent.startVal.updates:None
MouseComponent.stopVal.default:1.0
MouseComponent.stopVal.label:Stop
MouseComponent.stopVal.allowedVals:[]
MouseComponent.stopVal.staticUpdater:None
MouseComponent.stopVal.val:1.0
MouseComponent.stopVal.readOnly:False
MouseComponent.stopVal.valType:code
MouseComponent.stopVal.allowedUpdates:[]
MouseComponent.stopVal.allowedTypes:[]
MouseComponent.stopVal.categ:Basic
MouseComponent.stopVal.hint:When does the component end? (blank is endless)
MouseComponent.stopVal.updates:constant
MouseComponent.startEstim.default:
MouseComponent.startEstim.label:Expected start (s)
MouseComponent.startEstim.allowedVals:[]
MouseComponent.startEstim.staticUpdater:None
MouseComponent.startEstim.val:
MouseComponent.startEstim.readOnly:False
MouseComponent.startEstim.valType:code
MouseComponent.startEstim.allowedUpdates:None
MouseComponent.startEstim.allowedTypes:[]
MouseComponent.startEstim.categ:Basic
MouseComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
MouseComponent.startEstim.updates:None
MouseComponent.durationEstim.default:
MouseComponent.durationEstim.label:Expected duration (s)
MouseComponent.durationEstim.allowedVals:[]
MouseComponent.durationEstim.staticUpdater:None
MouseComponent.durationEstim.val:
MouseComponent.durationEstim.readOnly:False
MouseComponent.durationEstim.valType:code
MouseComponent.durationEstim.allowedUpdates:None
MouseComponent.durationEstim.allowedTypes:[]
MouseComponent.durationEstim.categ:Basic
MouseComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
MouseComponent.durationEstim.updates:None
MouseComponent.saveMouseState.default:'final'
MouseComponent.saveMouseState.label:Save mouse state
MouseComponent.saveMouseState.allowedVals:['final', 'on click', 'every frame', 'never']
MouseComponent.saveMouseState.staticUpdater:None
MouseComponent.saveMouseState.val:final
MouseComponent.saveMouseState.readOnly:False
MouseComponent.saveMouseState.valType:str
MouseComponent.saveMouseState.allowedUpdates:None
MouseComponent.saveMouseState.allowedTypes:[]
MouseComponent.saveMouseState.categ:Basic
MouseComponent.saveMouseState.hint:How often should the mouse state (x,y,buttons) be stored? On every video frame, every click or just at the end of the Routine?
MouseComponent.saveMouseState.updates:None
MouseComponent.forceEndRoutineOnPress.default:'any click'
MouseComponent.forceEndRoutineOnPress.label:End Routine on press
MouseComponent.forceEndRoutineOnPress.allowedVals:['never', 'any click', 'valid click']
MouseComponent.forceEndRoutineOnPress.staticUpdater:None
MouseComponent.forceEndRoutineOnPress.val:any click
MouseComponent.forceEndRoutineOnPress.readOnly:False
MouseComponent.forceEndRoutineOnPress.valType:str
MouseComponent.forceEndRoutineOnPress.allowedUpdates:None
MouseComponent.forceEndRoutineOnPress.allowedTypes:[]
MouseComponent.forceEndRoutineOnPress.categ:Basic
MouseComponent.forceEndRoutineOnPress.hint:Should a button press force the end of the routine (e.g end the trial)?
MouseComponent.forceEndRoutineOnPress.updates:constant
MouseComponent.timeRelativeTo.default:'routine'
MouseComponent.timeRelativeTo.label:Time relative to
MouseComponent.timeRelativeTo.allowedVals:['experiment', 'routine']
MouseComponent.timeRelativeTo.staticUpdater:None
MouseComponent.timeRelativeTo.val:routine
MouseComponent.timeRelativeTo.readOnly:False
MouseComponent.timeRelativeTo.valType:str
MouseComponent.timeRelativeTo.allowedUpdates:None
MouseComponent.timeRelativeTo.allowedTypes:[]
MouseComponent.timeRelativeTo.categ:Basic
MouseComponent.timeRelativeTo.hint:What should the values of mouse.time should be relative to?
MouseComponent.timeRelativeTo.updates:constant
MouseComponent.newClicksOnly.default:True
MouseComponent.newClicksOnly.label:New clicks only
MouseComponent.newClicksOnly.allowedVals:[]
MouseComponent.newClicksOnly.staticUpdater:None
MouseComponent.newClicksOnly.val:True
MouseComponent.newClicksOnly.readOnly:False
MouseComponent.newClicksOnly.valType:bool
MouseComponent.newClicksOnly.allowedUpdates:None
MouseComponent.newClicksOnly.allowedTypes:[]
MouseComponent.newClicksOnly.categ:Basic
MouseComponent.newClicksOnly.hint:If the mouse button is already down when we startchecking then wait for it to be released beforerecording as a new click.
MouseComponent.newClicksOnly.updates:constant
MouseComponent.clickable.default:
MouseComponent.clickable.label:Clickable stimuli
MouseComponent.clickable.allowedVals:[]
MouseComponent.clickable.staticUpdater:None
MouseComponent.clickable.val:
MouseComponent.clickable.readOnly:False
MouseComponent.clickable.valType:code
MouseComponent.clickable.allowedUpdates:None
MouseComponent.clickable.allowedTypes:[]
MouseComponent.clickable.categ:Basic
MouseComponent.clickable.hint:A comma-separated list of your stimulus names that can be "clicked" by the participant. e.g. target, foil
MouseComponent.clickable.updates:constant
MouseComponent.saveParamsClickable.default:name,
MouseComponent.saveParamsClickable.label:Store params for clicked
MouseComponent.saveParamsClickable.allowedVals:[]
MouseComponent.saveParamsClickable.staticUpdater:None
MouseComponent.saveParamsClickable.val:name,
MouseComponent.saveParamsClickable.readOnly:False
MouseComponent.saveParamsClickable.valType:code
MouseComponent.saveParamsClickable.allowedUpdates:[]
MouseComponent.saveParamsClickable.allowedTypes:[]
MouseComponent.saveParamsClickable.categ:Basic
MouseComponent.saveParamsClickable.hint:The params (e.g. name, text), for which you want to store the current value, for the stimulus that was"clicked" by the mouse. Make sure that all the clickable objects have all these params.
MouseComponent.saveParamsClickable.updates:constant
MovieComponent.order:['forceEndRoutine']
MovieComponent.name.default:movie
MovieComponent.name.label:Name
MovieComponent.name.allowedVals:[]
MovieComponent.name.staticUpdater:None
MovieComponent.name.val:movie
MovieComponent.name.readOnly:False
MovieComponent.name.valType:code
MovieComponent.name.allowedUpdates:None
MovieComponent.name.allowedTypes:[]
MovieComponent.name.categ:Basic
MovieComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
MovieComponent.startType.default:'time (s)'
MovieComponent.startType.label:start type
MovieComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
MovieComponent.startType.staticUpdater:None
MovieComponent.startType.val:time (s)
MovieComponent.startType.readOnly:False
MovieComponent.startType.valType:str
MovieComponent.startType.allowedUpdates:None
MovieComponent.startType.allowedTypes:[]
MovieComponent.startType.categ:Basic
MovieComponent.startType.hint:How do you want to define your start point?
MovieComponent.startType.updates:None
MovieComponent.stopType.default:'duration (s)'
MovieComponent.stopType.label:stop type
MovieComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
MovieComponent.stopType.staticUpdater:None
MovieComponent.stopType.val:duration (s)
MovieComponent.stopType.readOnly:False
MovieComponent.stopType.valType:str
MovieComponent.stopType.allowedUpdates:None
MovieComponent.stopType.allowedTypes:[]
MovieComponent.stopType.categ:Basic
MovieComponent.stopType.hint:How do you want to define your end point?
MovieComponent.stopType.updates:None
MovieComponent.startVal.default:0.0
MovieComponent.startVal.label:Start
MovieComponent.startVal.allowedVals:[]
MovieComponent.startVal.staticUpdater:None
MovieComponent.startVal.val:0.0
MovieComponent.startVal.readOnly:False
MovieComponent.startVal.valType:code
MovieComponent.startVal.allowedUpdates:None
MovieComponent.startVal.allowedTypes:[]
MovieComponent.startVal.categ:Basic
MovieComponent.startVal.hint:When does the component start?
MovieComponent.startVal.updates:None
MovieComponent.stopVal.default:1.0
MovieComponent.stopVal.label:Stop
MovieComponent.stopVal.allowedVals:[]
MovieComponent.stopVal.staticUpdater:None
MovieComponent.stopVal.val:1.0
MovieComponent.stopVal.readOnly:False
MovieComponent.stopVal.valType:code
MovieComponent.stopVal.allowedUpdates:[]
MovieComponent.stopVal.allowedTypes:[]
MovieComponent.stopVal.categ:Basic
MovieComponent.stopVal.hint:When does the component end? (blank to use the duration of the media)
MovieComponent.stopVal.updates:constant
MovieComponent.startEstim.default:
MovieComponent.startEstim.label:Expected start (s)
MovieComponent.startEstim.allowedVals:[]
MovieComponent.startEstim.staticUpdater:None
MovieComponent.startEstim.val:
MovieComponent.startEstim.readOnly:False
MovieComponent.startEstim.valType:code
MovieComponent.startEstim.allowedUpdates:None
MovieComponent.startEstim.allowedTypes:[]
MovieComponent.startEstim.categ:Basic
MovieComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
MovieComponent.startEstim.updates:None
MovieComponent.durationEstim.default:
MovieComponent.durationEstim.label:Expected duration (s)
MovieComponent.durationEstim.allowedVals:[]
MovieComponent.durationEstim.staticUpdater:None
MovieComponent.durationEstim.val:
MovieComponent.durationEstim.readOnly:False
MovieComponent.durationEstim.valType:code
MovieComponent.durationEstim.allowedUpdates:None
MovieComponent.durationEstim.allowedTypes:[]
MovieComponent.durationEstim.categ:Basic
MovieComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
MovieComponent.durationEstim.updates:None
MovieComponent.units.default:'from exp settings'
MovieComponent.units.label:Units
MovieComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
MovieComponent.units.staticUpdater:None
MovieComponent.units.val:from exp settings
MovieComponent.units.readOnly:False
MovieComponent.units.valType:str
MovieComponent.units.allowedUpdates:None
MovieComponent.units.allowedTypes:[]
MovieComponent.units.categ:Basic
MovieComponent.units.hint:Units of dimensions for this stimulus
MovieComponent.units.updates:None
MovieComponent.opacity.default:1
MovieComponent.opacity.label:Opacity
MovieComponent.opacity.allowedVals:[]
MovieComponent.opacity.staticUpdater:None
MovieComponent.opacity.val:1
MovieComponent.opacity.readOnly:False
MovieComponent.opacity.valType:code
MovieComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
MovieComponent.opacity.allowedTypes:[]
MovieComponent.opacity.categ:Basic
MovieComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
MovieComponent.opacity.updates:constant
MovieComponent.pos.default:(0, 0)
MovieComponent.pos.label:Position [x,y]
MovieComponent.pos.allowedVals:[]
MovieComponent.pos.staticUpdater:None
MovieComponent.pos.val:(0, 0)
MovieComponent.pos.readOnly:False
MovieComponent.pos.valType:code
MovieComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
MovieComponent.pos.allowedTypes:[]
MovieComponent.pos.categ:Basic
MovieComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
MovieComponent.pos.updates:constant
MovieComponent.size.default:
MovieComponent.size.label:Size [w,h]
MovieComponent.size.allowedVals:[]
MovieComponent.size.staticUpdater:None
MovieComponent.size.val:
MovieComponent.size.readOnly:False
MovieComponent.size.valType:code
MovieComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
MovieComponent.size.allowedTypes:[]
MovieComponent.size.categ:Basic
MovieComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
MovieComponent.size.updates:constant
MovieComponent.ori.default:0
MovieComponent.ori.label:Orientation
MovieComponent.ori.allowedVals:[]
MovieComponent.ori.staticUpdater:None
MovieComponent.ori.val:0
MovieComponent.ori.readOnly:False
MovieComponent.ori.valType:code
MovieComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
MovieComponent.ori.allowedTypes:[]
MovieComponent.ori.categ:Basic
MovieComponent.ori.hint:Orientation of this stimulus (in deg)
MovieComponent.ori.updates:constant
MovieComponent.movie.default:''
MovieComponent.movie.label:Movie file
MovieComponent.movie.allowedVals:[]
MovieComponent.movie.staticUpdater:None
MovieComponent.movie.val:
MovieComponent.movie.readOnly:False
MovieComponent.movie.valType:str
MovieComponent.movie.allowedUpdates:['constant', 'set every repeat']
MovieComponent.movie.allowedTypes:[]
MovieComponent.movie.categ:Basic
MovieComponent.movie.hint:A filename for the movie (including path)
MovieComponent.movie.updates:constant
MovieComponent.backend.default:'moviepy'
MovieComponent.backend.label:backend
MovieComponent.backend.allowedVals:['moviepy', 'avbin', 'opencv']
MovieComponent.backend.staticUpdater:None
MovieComponent.backend.val:moviepy
MovieComponent.backend.readOnly:False
MovieComponent.backend.valType:str
MovieComponent.backend.allowedUpdates:None
MovieComponent.backend.allowedTypes:[]
MovieComponent.backend.categ:Basic
MovieComponent.backend.hint:What underlying lib to use for loading movies
MovieComponent.backend.updates:None
MovieComponent.No audio.default:False
MovieComponent.No audio.label:No audio
MovieComponent.No audio.allowedVals:[]
MovieComponent.No audio.staticUpdater:None
MovieComponent.No audio.val:False
MovieComponent.No audio.readOnly:False
MovieComponent.No audio.valType:bool
MovieComponent.No audio.allowedUpdates:None
MovieComponent.No audio.allowedTypes:[]
MovieComponent.No audio.categ:Basic
MovieComponent.No audio.hint:Prevent the audio stream from being loaded/processed (moviepy and opencv only)
MovieComponent.No audio.updates:None
MovieComponent.forceEndRoutine.default:False
MovieComponent.forceEndRoutine.label:Force end of Routine
MovieComponent.forceEndRoutine.allowedVals:[]
MovieComponent.forceEndRoutine.staticUpdater:None
MovieComponent.forceEndRoutine.val:False
MovieComponent.forceEndRoutine.readOnly:False
MovieComponent.forceEndRoutine.valType:bool
MovieComponent.forceEndRoutine.allowedUpdates:[]
MovieComponent.forceEndRoutine.allowedTypes:[]
MovieComponent.forceEndRoutine.categ:Basic
MovieComponent.forceEndRoutine.hint:Should the end of the movie cause the end of the routine (e.g. trial)?
MovieComponent.forceEndRoutine.updates:constant
NoiseStimComponent.order:['tex', 'mask']
NoiseStimComponent.name.default:noise
NoiseStimComponent.name.label:Name
NoiseStimComponent.name.allowedVals:[]
NoiseStimComponent.name.staticUpdater:None
NoiseStimComponent.name.val:noise
NoiseStimComponent.name.readOnly:False
NoiseStimComponent.name.valType:code
NoiseStimComponent.name.allowedUpdates:None
NoiseStimComponent.name.allowedTypes:[]
NoiseStimComponent.name.categ:Basic
NoiseStimComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
NoiseStimComponent.startType.default:'time (s)'
NoiseStimComponent.startType.label:start type
NoiseStimComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
NoiseStimComponent.startType.staticUpdater:None
NoiseStimComponent.startType.val:time (s)
NoiseStimComponent.startType.readOnly:False
NoiseStimComponent.startType.valType:str
NoiseStimComponent.startType.allowedUpdates:None
NoiseStimComponent.startType.allowedTypes:[]
NoiseStimComponent.startType.categ:Basic
NoiseStimComponent.startType.hint:How do you want to define your start point?
NoiseStimComponent.startType.updates:None
NoiseStimComponent.stopType.default:'duration (s)'
NoiseStimComponent.stopType.label:stop type
NoiseStimComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
NoiseStimComponent.stopType.staticUpdater:None
NoiseStimComponent.stopType.val:duration (s)
NoiseStimComponent.stopType.readOnly:False
NoiseStimComponent.stopType.valType:str
NoiseStimComponent.stopType.allowedUpdates:None
NoiseStimComponent.stopType.allowedTypes:[]
NoiseStimComponent.stopType.categ:Basic
NoiseStimComponent.stopType.hint:How do you want to define your end point?
NoiseStimComponent.stopType.updates:None
NoiseStimComponent.startVal.default:0.0
NoiseStimComponent.startVal.label:Start
NoiseStimComponent.startVal.allowedVals:[]
NoiseStimComponent.startVal.staticUpdater:None
NoiseStimComponent.startVal.val:0.0
NoiseStimComponent.startVal.readOnly:False
NoiseStimComponent.startVal.valType:code
NoiseStimComponent.startVal.allowedUpdates:None
NoiseStimComponent.startVal.allowedTypes:[]
NoiseStimComponent.startVal.categ:Basic
NoiseStimComponent.startVal.hint:When does the component start?
NoiseStimComponent.startVal.updates:None
NoiseStimComponent.stopVal.default:1.0
NoiseStimComponent.stopVal.label:Stop
NoiseStimComponent.stopVal.allowedVals:[]
NoiseStimComponent.stopVal.staticUpdater:None
NoiseStimComponent.stopVal.val:1.0
NoiseStimComponent.stopVal.readOnly:False
NoiseStimComponent.stopVal.valType:code
NoiseStimComponent.stopVal.allowedUpdates:[]
NoiseStimComponent.stopVal.allowedTypes:[]
NoiseStimComponent.stopVal.categ:Basic
NoiseStimComponent.stopVal.hint:When does the component end? (blank is endless)
NoiseStimComponent.stopVal.updates:constant
NoiseStimComponent.startEstim.default:
NoiseStimComponent.startEstim.label:Expected start (s)
NoiseStimComponent.startEstim.allowedVals:[]
NoiseStimComponent.startEstim.staticUpdater:None
NoiseStimComponent.startEstim.val:
NoiseStimComponent.startEstim.readOnly:False
NoiseStimComponent.startEstim.valType:code
NoiseStimComponent.startEstim.allowedUpdates:None
NoiseStimComponent.startEstim.allowedTypes:[]
NoiseStimComponent.startEstim.categ:Basic
NoiseStimComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
NoiseStimComponent.startEstim.updates:None
NoiseStimComponent.durationEstim.default:
NoiseStimComponent.durationEstim.label:Expected duration (s)
NoiseStimComponent.durationEstim.allowedVals:[]
NoiseStimComponent.durationEstim.staticUpdater:None
NoiseStimComponent.durationEstim.val:
NoiseStimComponent.durationEstim.readOnly:False
NoiseStimComponent.durationEstim.valType:code
NoiseStimComponent.durationEstim.allowedUpdates:None
NoiseStimComponent.durationEstim.allowedTypes:[]
NoiseStimComponent.durationEstim.categ:Basic
NoiseStimComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
NoiseStimComponent.durationEstim.updates:None
NoiseStimComponent.units.default:'from exp settings'
NoiseStimComponent.units.label:Units
NoiseStimComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
NoiseStimComponent.units.staticUpdater:None
NoiseStimComponent.units.val:from exp settings
NoiseStimComponent.units.readOnly:False
NoiseStimComponent.units.valType:str
NoiseStimComponent.units.allowedUpdates:None
NoiseStimComponent.units.allowedTypes:[]
NoiseStimComponent.units.categ:Basic
NoiseStimComponent.units.hint:Units of dimensions for this stimulus
NoiseStimComponent.units.updates:None
NoiseStimComponent.color.default:[1,1,1]
NoiseStimComponent.color.label:Color
NoiseStimComponent.color.allowedVals:[]
NoiseStimComponent.color.staticUpdater:None
NoiseStimComponent.color.val:$[1,1,1]
NoiseStimComponent.color.readOnly:False
NoiseStimComponent.color.valType:str
NoiseStimComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.color.allowedTypes:[]
NoiseStimComponent.color.categ:Basic
NoiseStimComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
NoiseStimComponent.color.updates:constant
NoiseStimComponent.opacity.default:1
NoiseStimComponent.opacity.label:Opacity
NoiseStimComponent.opacity.allowedVals:[]
NoiseStimComponent.opacity.staticUpdater:None
NoiseStimComponent.opacity.val:1
NoiseStimComponent.opacity.readOnly:False
NoiseStimComponent.opacity.valType:code
NoiseStimComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.opacity.allowedTypes:[]
NoiseStimComponent.opacity.categ:Basic
NoiseStimComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
NoiseStimComponent.opacity.updates:constant
NoiseStimComponent.colorSpace.default:'rgb'
NoiseStimComponent.colorSpace.label:Color space
NoiseStimComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
NoiseStimComponent.colorSpace.staticUpdater:None
NoiseStimComponent.colorSpace.val:rgb
NoiseStimComponent.colorSpace.readOnly:False
NoiseStimComponent.colorSpace.valType:str
NoiseStimComponent.colorSpace.allowedUpdates:None
NoiseStimComponent.colorSpace.allowedTypes:[]
NoiseStimComponent.colorSpace.categ:Basic
NoiseStimComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
NoiseStimComponent.colorSpace.updates:constant
NoiseStimComponent.pos.default:(0, 0)
NoiseStimComponent.pos.label:Position [x,y]
NoiseStimComponent.pos.allowedVals:[]
NoiseStimComponent.pos.staticUpdater:None
NoiseStimComponent.pos.val:(0, 0)
NoiseStimComponent.pos.readOnly:False
NoiseStimComponent.pos.valType:code
NoiseStimComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.pos.allowedTypes:[]
NoiseStimComponent.pos.categ:Basic
NoiseStimComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
NoiseStimComponent.pos.updates:constant
NoiseStimComponent.size.default:(0.5, 0.5)
NoiseStimComponent.size.label:Size [w,h]
NoiseStimComponent.size.allowedVals:[]
NoiseStimComponent.size.staticUpdater:None
NoiseStimComponent.size.val:(0.5, 0.5)
NoiseStimComponent.size.readOnly:False
NoiseStimComponent.size.valType:code
NoiseStimComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.size.allowedTypes:[]
NoiseStimComponent.size.categ:Basic
NoiseStimComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
NoiseStimComponent.size.updates:constant
NoiseStimComponent.ori.default:0
NoiseStimComponent.ori.label:Orientation
NoiseStimComponent.ori.allowedVals:[]
NoiseStimComponent.ori.staticUpdater:None
NoiseStimComponent.ori.val:0
NoiseStimComponent.ori.readOnly:False
NoiseStimComponent.ori.valType:code
NoiseStimComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.ori.allowedTypes:[]
NoiseStimComponent.ori.categ:Advanced
NoiseStimComponent.ori.hint:Orientation of this stimulus (in deg)
NoiseStimComponent.ori.updates:constant
NoiseStimComponent.noiseImage.default:'None'
NoiseStimComponent.noiseImage.label:Image from which to derive noise spectrum
NoiseStimComponent.noiseImage.allowedVals:[]
NoiseStimComponent.noiseImage.staticUpdater:None
NoiseStimComponent.noiseImage.val:None
NoiseStimComponent.noiseImage.readOnly:False
NoiseStimComponent.noiseImage.valType:str
NoiseStimComponent.noiseImage.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseImage.allowedTypes:[]
NoiseStimComponent.noiseImage.categ:Image noise
NoiseStimComponent.noiseImage.hint:An image from which to derive the frequency spectrum for the noise. Give filename (including path)
NoiseStimComponent.noiseImage.updates:constant
NoiseStimComponent.mask.default:'None'
NoiseStimComponent.mask.label:Mask
NoiseStimComponent.mask.allowedVals:[]
NoiseStimComponent.mask.staticUpdater:None
NoiseStimComponent.mask.val:None
NoiseStimComponent.mask.readOnly:False
NoiseStimComponent.mask.valType:str
NoiseStimComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.mask.allowedTypes:[]
NoiseStimComponent.mask.categ:Advanced
NoiseStimComponent.mask.hint:An image to define the alpha mask (ie shape)- gauss, circle... or a filename (including path)
NoiseStimComponent.mask.updates:constant
NoiseStimComponent.contrast.default:1.0
NoiseStimComponent.contrast.label:Contrast
NoiseStimComponent.contrast.allowedVals:[]
NoiseStimComponent.contrast.staticUpdater:None
NoiseStimComponent.contrast.val:1.0
NoiseStimComponent.contrast.readOnly:False
NoiseStimComponent.contrast.valType:code
NoiseStimComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.contrast.allowedTypes:[]
NoiseStimComponent.contrast.categ:Advanced
NoiseStimComponent.contrast.hint:Michaelson contrast of the image
NoiseStimComponent.contrast.updates:constant
NoiseStimComponent.sf.default:None
NoiseStimComponent.sf.label:Final spatial frequency
NoiseStimComponent.sf.allowedVals:[]
NoiseStimComponent.sf.staticUpdater:None
NoiseStimComponent.sf.val:None
NoiseStimComponent.sf.readOnly:False
NoiseStimComponent.sf.valType:code
NoiseStimComponent.sf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.sf.allowedTypes:[]
NoiseStimComponent.sf.categ:Advanced
NoiseStimComponent.sf.hint:Final spatial frequency of image in 1 or 2 dimensions, e.g. 4 or [2,3] use None to set to 1 cycle per unit length or 1 cycle per image if units=pix
NoiseStimComponent.sf.updates:constant
NoiseStimComponent.phase.default:0.0
NoiseStimComponent.phase.label:Phase (in cycles)
NoiseStimComponent.phase.allowedVals:[]
NoiseStimComponent.phase.staticUpdater:None
NoiseStimComponent.phase.val:0.0
NoiseStimComponent.phase.readOnly:False
NoiseStimComponent.phase.valType:code
NoiseStimComponent.phase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.phase.allowedTypes:[]
NoiseStimComponent.phase.categ:Advanced
NoiseStimComponent.phase.hint:Spatial positioning of the image  (wraps in range 0-1.0)
NoiseStimComponent.phase.updates:constant
NoiseStimComponent.texture resolution.default:128
NoiseStimComponent.texture resolution.label:Texture resolution
NoiseStimComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
NoiseStimComponent.texture resolution.staticUpdater:None
NoiseStimComponent.texture resolution.val:128
NoiseStimComponent.texture resolution.readOnly:False
NoiseStimComponent.texture resolution.valType:code
NoiseStimComponent.texture resolution.allowedUpdates:[]
NoiseStimComponent.texture resolution.allowedTypes:[]
NoiseStimComponent.texture resolution.categ:Advanced
NoiseStimComponent.texture resolution.hint:Resolution of the texture for standard ones such as sin, sqr etc. For most cases a value of 256 pixels will suffice
NoiseStimComponent.texture resolution.updates:constant
NoiseStimComponent.interpolate.default:'nearest'
NoiseStimComponent.interpolate.label:Interpolate
NoiseStimComponent.interpolate.allowedVals:['linear', 'nearest']
NoiseStimComponent.interpolate.staticUpdater:None
NoiseStimComponent.interpolate.val:nearest
NoiseStimComponent.interpolate.readOnly:False
NoiseStimComponent.interpolate.valType:str
NoiseStimComponent.interpolate.allowedUpdates:[]
NoiseStimComponent.interpolate.allowedTypes:[]
NoiseStimComponent.interpolate.categ:Advanced
NoiseStimComponent.interpolate.hint:How should the image be interpolated if/when rescaled
NoiseStimComponent.interpolate.updates:constant
NoiseStimComponent.noiseType.default:'Binary'
NoiseStimComponent.noiseType.label:Type of noise
NoiseStimComponent.noiseType.allowedVals:['Binary', 'Normal', 'Uniform', 'Gabor', 'Isotropic', 'White', 'Filtered', 'Image']
NoiseStimComponent.noiseType.staticUpdater:None
NoiseStimComponent.noiseType.val:Binary
NoiseStimComponent.noiseType.readOnly:False
NoiseStimComponent.noiseType.valType:str
NoiseStimComponent.noiseType.allowedUpdates:[]
NoiseStimComponent.noiseType.allowedTypes:[]
NoiseStimComponent.noiseType.categ: Noise
NoiseStimComponent.noiseType.hint:Type of noise (Binary, Normal, Gabor, Isotropic, White, Coloured, Filtered, Image)
NoiseStimComponent.noiseType.updates:constant
NoiseStimComponent.noiseElementSize.default:0.0625
NoiseStimComponent.noiseElementSize.label:Noise element size for pixelated noise
NoiseStimComponent.noiseElementSize.allowedVals:[]
NoiseStimComponent.noiseElementSize.staticUpdater:None
NoiseStimComponent.noiseElementSize.val:0.0625
NoiseStimComponent.noiseElementSize.readOnly:False
NoiseStimComponent.noiseElementSize.valType:code
NoiseStimComponent.noiseElementSize.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseElementSize.allowedTypes:[]
NoiseStimComponent.noiseElementSize.categ:Binary/Normal/Uniform
NoiseStimComponent.noiseElementSize.hint:(Binary, Normal an Uniform only) Size of noise elements
NoiseStimComponent.noiseElementSize.updates:constant
NoiseStimComponent.noiseBaseSf.default:8.0
NoiseStimComponent.noiseBaseSf.label:Base spatial frequency
NoiseStimComponent.noiseBaseSf.allowedVals:[]
NoiseStimComponent.noiseBaseSf.staticUpdater:None
NoiseStimComponent.noiseBaseSf.val:8.0
NoiseStimComponent.noiseBaseSf.readOnly:False
NoiseStimComponent.noiseBaseSf.valType:code
NoiseStimComponent.noiseBaseSf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseBaseSf.allowedTypes:[]
NoiseStimComponent.noiseBaseSf.categ:Gabor/Isotropic
NoiseStimComponent.noiseBaseSf.hint:Base spatial frequency
NoiseStimComponent.noiseBaseSf.updates:constant
NoiseStimComponent.noiseBW.default:1
NoiseStimComponent.noiseBW.label:Spatial frequency bandwidth
NoiseStimComponent.noiseBW.allowedVals:[]
NoiseStimComponent.noiseBW.staticUpdater:None
NoiseStimComponent.noiseBW.val:1
NoiseStimComponent.noiseBW.readOnly:False
NoiseStimComponent.noiseBW.valType:code
NoiseStimComponent.noiseBW.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseBW.allowedTypes:[]
NoiseStimComponent.noiseBW.categ:Gabor/Isotropic
NoiseStimComponent.noiseBW.hint:Spatial frequency bandwidth in octaves - Full width half height
NoiseStimComponent.noiseBW.updates:constant
NoiseStimComponent.noiseBWO.default:1
NoiseStimComponent.noiseBWO.label:Orientation bandwidth for Gabor noise
NoiseStimComponent.noiseBWO.allowedVals:[]
NoiseStimComponent.noiseBWO.staticUpdater:None
NoiseStimComponent.noiseBWO.val:1
NoiseStimComponent.noiseBWO.readOnly:False
NoiseStimComponent.noiseBWO.valType:code
NoiseStimComponent.noiseBWO.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseBWO.allowedTypes:[]
NoiseStimComponent.noiseBWO.categ:Gabor/Isotropic
NoiseStimComponent.noiseBWO.hint:Orientation bandwidth in degrees (Gabor only) - Full width half height
NoiseStimComponent.noiseBWO.updates:constant
NoiseStimComponent.noiseFractalPower.default:0.0
NoiseStimComponent.noiseFractalPower.label:Skew in frequency spectrum
NoiseStimComponent.noiseFractalPower.allowedVals:[]
NoiseStimComponent.noiseFractalPower.staticUpdater:None
NoiseStimComponent.noiseFractalPower.val:0.0
NoiseStimComponent.noiseFractalPower.readOnly:False
NoiseStimComponent.noiseFractalPower.valType:code
NoiseStimComponent.noiseFractalPower.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseFractalPower.allowedTypes:[]
NoiseStimComponent.noiseFractalPower.categ:Filtered
NoiseStimComponent.noiseFractalPower.hint:Exponent for spectral slope (A=f^Exponent) of noise negative exponents look nice. -1='pink noise', 0='white noise' (changes the spatial frequency spectrum - does not make the noise colourful)
NoiseStimComponent.noiseFractalPower.updates:constant
NoiseStimComponent.noiseFilterOrder.default:0.0
NoiseStimComponent.noiseFilterOrder.label:Order of filter
NoiseStimComponent.noiseFilterOrder.allowedVals:[]
NoiseStimComponent.noiseFilterOrder.staticUpdater:None
NoiseStimComponent.noiseFilterOrder.val:0.0
NoiseStimComponent.noiseFilterOrder.readOnly:False
NoiseStimComponent.noiseFilterOrder.valType:code
NoiseStimComponent.noiseFilterOrder.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseFilterOrder.allowedTypes:[]
NoiseStimComponent.noiseFilterOrder.categ:Filtered
NoiseStimComponent.noiseFilterOrder.hint:Order of filter - higher = steeper fall off, zero = no filter
NoiseStimComponent.noiseFilterOrder.updates:constant
NoiseStimComponent.noiseFilterUpper.default:8.0
NoiseStimComponent.noiseFilterUpper.label:Upper cut off frequency
NoiseStimComponent.noiseFilterUpper.allowedVals:[]
NoiseStimComponent.noiseFilterUpper.staticUpdater:None
NoiseStimComponent.noiseFilterUpper.val:8.0
NoiseStimComponent.noiseFilterUpper.readOnly:False
NoiseStimComponent.noiseFilterUpper.valType:code
NoiseStimComponent.noiseFilterUpper.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseFilterUpper.allowedTypes:[]
NoiseStimComponent.noiseFilterUpper.categ:Filtered
NoiseStimComponent.noiseFilterUpper.hint:Upper cutoff frequency
NoiseStimComponent.noiseFilterUpper.updates:constant
NoiseStimComponent.noiseFilterLower.default:1.0
NoiseStimComponent.noiseFilterLower.label:Lower cut off frequency
NoiseStimComponent.noiseFilterLower.allowedVals:[]
NoiseStimComponent.noiseFilterLower.staticUpdater:None
NoiseStimComponent.noiseFilterLower.val:1.0
NoiseStimComponent.noiseFilterLower.readOnly:False
NoiseStimComponent.noiseFilterLower.valType:code
NoiseStimComponent.noiseFilterLower.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseFilterLower.allowedTypes:[]
NoiseStimComponent.noiseFilterLower.categ:Filtered
NoiseStimComponent.noiseFilterLower.hint:Lower cutoff frequency
NoiseStimComponent.noiseFilterLower.updates:constant
NoiseStimComponent.noiseClip.default:3.0
NoiseStimComponent.noiseClip.label:Number of standard deviations at which to clip noise
NoiseStimComponent.noiseClip.allowedVals:[]
NoiseStimComponent.noiseClip.staticUpdater:None
NoiseStimComponent.noiseClip.val:3.0
NoiseStimComponent.noiseClip.readOnly:False
NoiseStimComponent.noiseClip.valType:code
NoiseStimComponent.noiseClip.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseClip.allowedTypes:[]
NoiseStimComponent.noiseClip.categ: Noise
NoiseStimComponent.noiseClip.hint:Truncate high and low values beyound stated standard deviations from mean (not used for binary or uniform noise; scales rather than clips normal noise). The higher this is the lower the final RMS contrast. If low noise may appear binary
NoiseStimComponent.noiseClip.updates:constant
NoiseStimComponent.noiseNewSample.default:'None'
NoiseStimComponent.noiseNewSample.label:How to update noise sample
NoiseStimComponent.noiseNewSample.allowedVals:['None', 'Repeat', 'N-frames', 'Seconds']
NoiseStimComponent.noiseNewSample.staticUpdater:None
NoiseStimComponent.noiseNewSample.val:None
NoiseStimComponent.noiseNewSample.readOnly:False
NoiseStimComponent.noiseNewSample.valType:str
NoiseStimComponent.noiseNewSample.allowedUpdates:[]
NoiseStimComponent.noiseNewSample.allowedTypes:[]
NoiseStimComponent.noiseNewSample.categ: Noise
NoiseStimComponent.noiseNewSample.hint:How to update noise if not otherwise required by other changes (none, repeat, N-frames, Seconds)
NoiseStimComponent.noiseNewSample.updates:constant
NoiseStimComponent.noiseNewSampleWhen.default:'1'
NoiseStimComponent.noiseNewSampleWhen.label:When to update noise sample
NoiseStimComponent.noiseNewSampleWhen.allowedVals:[]
NoiseStimComponent.noiseNewSampleWhen.staticUpdater:None
NoiseStimComponent.noiseNewSampleWhen.val:1
NoiseStimComponent.noiseNewSampleWhen.readOnly:False
NoiseStimComponent.noiseNewSampleWhen.valType:str
NoiseStimComponent.noiseNewSampleWhen.allowedUpdates:[]
NoiseStimComponent.noiseNewSampleWhen.allowedTypes:[]
NoiseStimComponent.noiseNewSampleWhen.categ: Noise
NoiseStimComponent.noiseNewSampleWhen.hint:How often to update noise (in frames or seconds) - can be a variable, ignored if any noise characteristic is updating on every frame
NoiseStimComponent.noiseNewSampleWhen.updates:constant
NoiseStimComponent.blendmode.default:'avg'
NoiseStimComponent.blendmode.label:OpenGL blend mode
NoiseStimComponent.blendmode.allowedVals:[]
NoiseStimComponent.blendmode.staticUpdater:None
NoiseStimComponent.blendmode.val:avg
NoiseStimComponent.blendmode.readOnly:False
NoiseStimComponent.blendmode.valType:str
NoiseStimComponent.blendmode.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.blendmode.allowedTypes:[]
NoiseStimComponent.blendmode.categ:Basic
NoiseStimComponent.blendmode.hint:OpenGL Blendmode [avg, add (avg is most common mode in PsychoPy, add is used if you want to generate the sum of two components)]
NoiseStimComponent.blendmode.updates:constant
ParallelOutComponent.order:['address', 'startData', 'stopData']
ParallelOutComponent.name.default:p_port
ParallelOutComponent.name.label:Name
ParallelOutComponent.name.allowedVals:[]
ParallelOutComponent.name.staticUpdater:None
ParallelOutComponent.name.val:p_port
ParallelOutComponent.name.readOnly:False
ParallelOutComponent.name.valType:code
ParallelOutComponent.name.allowedUpdates:None
ParallelOutComponent.name.allowedTypes:[]
ParallelOutComponent.name.categ:Basic
ParallelOutComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
ParallelOutComponent.startType.default:'time (s)'
ParallelOutComponent.startType.label:start type
ParallelOutComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ParallelOutComponent.startType.staticUpdater:None
ParallelOutComponent.startType.val:time (s)
ParallelOutComponent.startType.readOnly:False
ParallelOutComponent.startType.valType:str
ParallelOutComponent.startType.allowedUpdates:None
ParallelOutComponent.startType.allowedTypes:[]
ParallelOutComponent.startType.categ:Basic
ParallelOutComponent.startType.hint:How do you want to define your start point?
ParallelOutComponent.startType.updates:None
ParallelOutComponent.stopType.default:'duration (s)'
ParallelOutComponent.stopType.label:stop type
ParallelOutComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ParallelOutComponent.stopType.staticUpdater:None
ParallelOutComponent.stopType.val:duration (s)
ParallelOutComponent.stopType.readOnly:False
ParallelOutComponent.stopType.valType:str
ParallelOutComponent.stopType.allowedUpdates:None
ParallelOutComponent.stopType.allowedTypes:[]
ParallelOutComponent.stopType.categ:Basic
ParallelOutComponent.stopType.hint:How do you want to define your end point?
ParallelOutComponent.stopType.updates:None
ParallelOutComponent.startVal.default:0.0
ParallelOutComponent.startVal.label:Start
ParallelOutComponent.startVal.allowedVals:[]
ParallelOutComponent.startVal.staticUpdater:None
ParallelOutComponent.startVal.val:0.0
ParallelOutComponent.startVal.readOnly:False
ParallelOutComponent.startVal.valType:code
ParallelOutComponent.startVal.allowedUpdates:None
ParallelOutComponent.startVal.allowedTypes:[]
ParallelOutComponent.startVal.categ:Basic
ParallelOutComponent.startVal.hint:When does the component start?
ParallelOutComponent.startVal.updates:None
ParallelOutComponent.stopVal.default:1.0
ParallelOutComponent.stopVal.label:Stop
ParallelOutComponent.stopVal.allowedVals:[]
ParallelOutComponent.stopVal.staticUpdater:None
ParallelOutComponent.stopVal.val:1.0
ParallelOutComponent.stopVal.readOnly:False
ParallelOutComponent.stopVal.valType:code
ParallelOutComponent.stopVal.allowedUpdates:[]
ParallelOutComponent.stopVal.allowedTypes:[]
ParallelOutComponent.stopVal.categ:Basic
ParallelOutComponent.stopVal.hint:When does the component end? (blank is endless)
ParallelOutComponent.stopVal.updates:constant
ParallelOutComponent.startEstim.default:
ParallelOutComponent.startEstim.label:Expected start (s)
ParallelOutComponent.startEstim.allowedVals:[]
ParallelOutComponent.startEstim.staticUpdater:None
ParallelOutComponent.startEstim.val:
ParallelOutComponent.startEstim.readOnly:False
ParallelOutComponent.startEstim.valType:code
ParallelOutComponent.startEstim.allowedUpdates:None
ParallelOutComponent.startEstim.allowedTypes:[]
ParallelOutComponent.startEstim.categ:Basic
ParallelOutComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ParallelOutComponent.startEstim.updates:None
ParallelOutComponent.durationEstim.default:
ParallelOutComponent.durationEstim.label:Expected duration (s)
ParallelOutComponent.durationEstim.allowedVals:[]
ParallelOutComponent.durationEstim.staticUpdater:None
ParallelOutComponent.durationEstim.val:
ParallelOutComponent.durationEstim.readOnly:False
ParallelOutComponent.durationEstim.valType:code
ParallelOutComponent.durationEstim.allowedUpdates:None
ParallelOutComponent.durationEstim.allowedTypes:[]
ParallelOutComponent.durationEstim.categ:Basic
ParallelOutComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ParallelOutComponent.durationEstim.updates:None
ParallelOutComponent.address.default:'0x0378'
ParallelOutComponent.address.label:Port address
ParallelOutComponent.address.allowedVals:['0x0378', '0x03BC', 'LabJack U3']
ParallelOutComponent.address.staticUpdater:None
ParallelOutComponent.address.val:0x0378
ParallelOutComponent.address.readOnly:False
ParallelOutComponent.address.valType:str
ParallelOutComponent.address.allowedUpdates:None
ParallelOutComponent.address.allowedTypes:[]
ParallelOutComponent.address.categ:Basic
ParallelOutComponent.address.hint:Parallel port to be used (you can change these options in preferences>general)
ParallelOutComponent.address.updates:None
ParallelOutComponent.startData.default:1
ParallelOutComponent.startData.label:Start data
ParallelOutComponent.startData.allowedVals:[]
ParallelOutComponent.startData.staticUpdater:None
ParallelOutComponent.startData.val:1
ParallelOutComponent.startData.readOnly:False
ParallelOutComponent.startData.valType:code
ParallelOutComponent.startData.allowedUpdates:None
ParallelOutComponent.startData.allowedTypes:[]
ParallelOutComponent.startData.categ:Basic
ParallelOutComponent.startData.hint:Data to be sent at 'start'
ParallelOutComponent.startData.updates:None
ParallelOutComponent.stopData.default:0
ParallelOutComponent.stopData.label:Stop data
ParallelOutComponent.stopData.allowedVals:[]
ParallelOutComponent.stopData.staticUpdater:None
ParallelOutComponent.stopData.val:0
ParallelOutComponent.stopData.readOnly:False
ParallelOutComponent.stopData.valType:code
ParallelOutComponent.stopData.allowedUpdates:None
ParallelOutComponent.stopData.allowedTypes:[]
ParallelOutComponent.stopData.categ:Basic
ParallelOutComponent.stopData.hint:Data to be sent at 'end'
ParallelOutComponent.stopData.updates:None
ParallelOutComponent.syncScreen.default:True
ParallelOutComponent.syncScreen.label:Sync to screen
ParallelOutComponent.syncScreen.allowedVals:[True, False]
ParallelOutComponent.syncScreen.staticUpdater:None
ParallelOutComponent.syncScreen.val:True
ParallelOutComponent.syncScreen.readOnly:False
ParallelOutComponent.syncScreen.valType:bool
ParallelOutComponent.syncScreen.allowedUpdates:[]
ParallelOutComponent.syncScreen.allowedTypes:[]
ParallelOutComponent.syncScreen.categ:Basic
ParallelOutComponent.syncScreen.hint:If the parallel port data relates to visual stimuli then sync its pulse to the screen refresh
ParallelOutComponent.syncScreen.updates:constant
PatchComponent.order:['name']
PatchComponent.name.default:patch
PatchComponent.name.label:Name
PatchComponent.name.allowedVals:[]
PatchComponent.name.staticUpdater:None
PatchComponent.name.val:patch
PatchComponent.name.readOnly:False
PatchComponent.name.valType:code
PatchComponent.name.allowedUpdates:None
PatchComponent.name.allowedTypes:[]
PatchComponent.name.categ:Basic
PatchComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
PatchComponent.startType.default:'time (s)'
PatchComponent.startType.label:start type
PatchComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
PatchComponent.startType.staticUpdater:None
PatchComponent.startType.val:time (s)
PatchComponent.startType.readOnly:False
PatchComponent.startType.valType:str
PatchComponent.startType.allowedUpdates:None
PatchComponent.startType.allowedTypes:[]
PatchComponent.startType.categ:Basic
PatchComponent.startType.hint:How do you want to define your start point?
PatchComponent.startType.updates:None
PatchComponent.stopType.default:'duration (s)'
PatchComponent.stopType.label:stop type
PatchComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
PatchComponent.stopType.staticUpdater:None
PatchComponent.stopType.val:duration (s)
PatchComponent.stopType.readOnly:False
PatchComponent.stopType.valType:str
PatchComponent.stopType.allowedUpdates:None
PatchComponent.stopType.allowedTypes:[]
PatchComponent.stopType.categ:Basic
PatchComponent.stopType.hint:How do you want to define your end point?
PatchComponent.stopType.updates:None
PatchComponent.startVal.default:0.0
PatchComponent.startVal.label:Start
PatchComponent.startVal.allowedVals:[]
PatchComponent.startVal.staticUpdater:None
PatchComponent.startVal.val:0.0
PatchComponent.startVal.readOnly:False
PatchComponent.startVal.valType:code
PatchComponent.startVal.allowedUpdates:None
PatchComponent.startVal.allowedTypes:[]
PatchComponent.startVal.categ:Basic
PatchComponent.startVal.hint:When does the component start?
PatchComponent.startVal.updates:None
PatchComponent.stopVal.default:1.0
PatchComponent.stopVal.label:Stop
PatchComponent.stopVal.allowedVals:[]
PatchComponent.stopVal.staticUpdater:None
PatchComponent.stopVal.val:1.0
PatchComponent.stopVal.readOnly:False
PatchComponent.stopVal.valType:code
PatchComponent.stopVal.allowedUpdates:[]
PatchComponent.stopVal.allowedTypes:[]
PatchComponent.stopVal.categ:Basic
PatchComponent.stopVal.hint:When does the component end? (blank is endless)
PatchComponent.stopVal.updates:constant
PatchComponent.startEstim.default:
PatchComponent.startEstim.label:Expected start (s)
PatchComponent.startEstim.allowedVals:[]
PatchComponent.startEstim.staticUpdater:None
PatchComponent.startEstim.val:
PatchComponent.startEstim.readOnly:False
PatchComponent.startEstim.valType:code
PatchComponent.startEstim.allowedUpdates:None
PatchComponent.startEstim.allowedTypes:[]
PatchComponent.startEstim.categ:Basic
PatchComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
PatchComponent.startEstim.updates:None
PatchComponent.durationEstim.default:
PatchComponent.durationEstim.label:Expected duration (s)
PatchComponent.durationEstim.allowedVals:[]
PatchComponent.durationEstim.staticUpdater:None
PatchComponent.durationEstim.val:
PatchComponent.durationEstim.readOnly:False
PatchComponent.durationEstim.valType:code
PatchComponent.durationEstim.allowedUpdates:None
PatchComponent.durationEstim.allowedTypes:[]
PatchComponent.durationEstim.categ:Basic
PatchComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
PatchComponent.durationEstim.updates:None
PatchComponent.units.default:'from exp settings'
PatchComponent.units.label:Units
PatchComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
PatchComponent.units.staticUpdater:None
PatchComponent.units.val:from exp settings
PatchComponent.units.readOnly:False
PatchComponent.units.valType:str
PatchComponent.units.allowedUpdates:None
PatchComponent.units.allowedTypes:[]
PatchComponent.units.categ:Basic
PatchComponent.units.hint:Units of dimensions for this stimulus
PatchComponent.units.updates:None
PatchComponent.color.default:[1,1,1]
PatchComponent.color.label:Color
PatchComponent.color.allowedVals:[]
PatchComponent.color.staticUpdater:None
PatchComponent.color.val:$[1,1,1]
PatchComponent.color.readOnly:False
PatchComponent.color.valType:str
PatchComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.color.allowedTypes:[]
PatchComponent.color.categ:Advanced
PatchComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
PatchComponent.color.updates:constant
PatchComponent.opacity.default:1
PatchComponent.opacity.label:Opacity
PatchComponent.opacity.allowedVals:[]
PatchComponent.opacity.staticUpdater:None
PatchComponent.opacity.val:1
PatchComponent.opacity.readOnly:False
PatchComponent.opacity.valType:code
PatchComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.opacity.allowedTypes:[]
PatchComponent.opacity.categ:Basic
PatchComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
PatchComponent.opacity.updates:constant
PatchComponent.colorSpace.default:'rgb'
PatchComponent.colorSpace.label:Color space
PatchComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
PatchComponent.colorSpace.staticUpdater:None
PatchComponent.colorSpace.val:rgb
PatchComponent.colorSpace.readOnly:False
PatchComponent.colorSpace.valType:str
PatchComponent.colorSpace.allowedUpdates:None
PatchComponent.colorSpace.allowedTypes:[]
PatchComponent.colorSpace.categ:Advanced
PatchComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
PatchComponent.colorSpace.updates:constant
PatchComponent.pos.default:(0, 0)
PatchComponent.pos.label:Position [x,y]
PatchComponent.pos.allowedVals:[]
PatchComponent.pos.staticUpdater:None
PatchComponent.pos.val:(0, 0)
PatchComponent.pos.readOnly:False
PatchComponent.pos.valType:code
PatchComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.pos.allowedTypes:[]
PatchComponent.pos.categ:Basic
PatchComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
PatchComponent.pos.updates:constant
PatchComponent.size.default:(0.5, 0.5)
PatchComponent.size.label:Size [w,h]
PatchComponent.size.allowedVals:[]
PatchComponent.size.staticUpdater:None
PatchComponent.size.val:(0.5, 0.5)
PatchComponent.size.readOnly:False
PatchComponent.size.valType:code
PatchComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.size.allowedTypes:[]
PatchComponent.size.categ:Basic
PatchComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
PatchComponent.size.updates:constant
PatchComponent.ori.default:0
PatchComponent.ori.label:Orientation
PatchComponent.ori.allowedVals:[]
PatchComponent.ori.staticUpdater:None
PatchComponent.ori.val:0
PatchComponent.ori.readOnly:False
PatchComponent.ori.valType:code
PatchComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.ori.allowedTypes:[]
PatchComponent.ori.categ:Basic
PatchComponent.ori.hint:Orientation of this stimulus (in deg)
PatchComponent.ori.updates:constant
PatchComponent.image.default:'sin'
PatchComponent.image.label:Image/tex
PatchComponent.image.allowedVals:[]
PatchComponent.image.staticUpdater:None
PatchComponent.image.val:sin
PatchComponent.image.readOnly:False
PatchComponent.image.valType:str
PatchComponent.image.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.image.allowedTypes:[]
PatchComponent.image.categ:Basic
PatchComponent.image.hint:The image to be displayed - 'sin','sqr'... or a filename (including path)
PatchComponent.image.updates:constant
PatchComponent.mask.default:'None'
PatchComponent.mask.label:Mask
PatchComponent.mask.allowedVals:[]
PatchComponent.mask.staticUpdater:None
PatchComponent.mask.val:None
PatchComponent.mask.readOnly:False
PatchComponent.mask.valType:str
PatchComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.mask.allowedTypes:[]
PatchComponent.mask.categ:Basic
PatchComponent.mask.hint:An image to define the alpha mask (ie shape)- gauss, circle... or a filename (including path)
PatchComponent.mask.updates:constant
PatchComponent.sf.default:None
PatchComponent.sf.label:Spatial frequency
PatchComponent.sf.allowedVals:[]
PatchComponent.sf.staticUpdater:None
PatchComponent.sf.val:None
PatchComponent.sf.readOnly:False
PatchComponent.sf.valType:code
PatchComponent.sf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.sf.allowedTypes:[]
PatchComponent.sf.categ:Advanced
PatchComponent.sf.hint:Spatial frequency of image repeats across the patch, e.g. 4 or [2,3]
PatchComponent.sf.updates:constant
PatchComponent.phase.default:0.0
PatchComponent.phase.label:Phase (in cycles)
PatchComponent.phase.allowedVals:[]
PatchComponent.phase.staticUpdater:None
PatchComponent.phase.val:0.0
PatchComponent.phase.readOnly:False
PatchComponent.phase.valType:code
PatchComponent.phase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.phase.allowedTypes:[]
PatchComponent.phase.categ:Advanced
PatchComponent.phase.hint:Spatial positioning of the image on the patch (in range 0-1.0)
PatchComponent.phase.updates:constant
PatchComponent.texture resolution.default:128
PatchComponent.texture resolution.label:Texture resolution
PatchComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
PatchComponent.texture resolution.staticUpdater:None
PatchComponent.texture resolution.val:128
PatchComponent.texture resolution.readOnly:False
PatchComponent.texture resolution.valType:code
PatchComponent.texture resolution.allowedUpdates:[]
PatchComponent.texture resolution.allowedTypes:[]
PatchComponent.texture resolution.categ:Advanced
PatchComponent.texture resolution.hint:Resolution of the texture for standard ones such as sin, sqr etc. For most cases a value of 256 pixels will suffice
PatchComponent.texture resolution.updates:constant
PatchComponent.interpolate.default:'linear'
PatchComponent.interpolate.label:Interpolate
PatchComponent.interpolate.allowedVals:['linear', 'nearest']
PatchComponent.interpolate.staticUpdater:None
PatchComponent.interpolate.val:linear
PatchComponent.interpolate.readOnly:False
PatchComponent.interpolate.valType:str
PatchComponent.interpolate.allowedUpdates:[]
PatchComponent.interpolate.allowedTypes:[]
PatchComponent.interpolate.categ:Advanced
PatchComponent.interpolate.hint:How should the image be interpolated if/when rescaled
PatchComponent.interpolate.updates:constant
PolygonComponent.order:['shape', 'nVertices']
PolygonComponent.name.default:polygon
PolygonComponent.name.label:Name
PolygonComponent.name.allowedVals:[]
PolygonComponent.name.staticUpdater:None
PolygonComponent.name.val:polygon
PolygonComponent.name.readOnly:False
PolygonComponent.name.valType:code
PolygonComponent.name.allowedUpdates:None
PolygonComponent.name.allowedTypes:[]
PolygonComponent.name.categ:Basic
PolygonComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
PolygonComponent.startType.default:'time (s)'
PolygonComponent.startType.label:start type
PolygonComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
PolygonComponent.startType.staticUpdater:None
PolygonComponent.startType.val:time (s)
PolygonComponent.startType.readOnly:False
PolygonComponent.startType.valType:str
PolygonComponent.startType.allowedUpdates:None
PolygonComponent.startType.allowedTypes:[]
PolygonComponent.startType.categ:Basic
PolygonComponent.startType.hint:How do you want to define your start point?
PolygonComponent.startType.updates:None
PolygonComponent.stopType.default:'duration (s)'
PolygonComponent.stopType.label:stop type
PolygonComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
PolygonComponent.stopType.staticUpdater:None
PolygonComponent.stopType.val:duration (s)
PolygonComponent.stopType.readOnly:False
PolygonComponent.stopType.valType:str
PolygonComponent.stopType.allowedUpdates:None
PolygonComponent.stopType.allowedTypes:[]
PolygonComponent.stopType.categ:Basic
PolygonComponent.stopType.hint:How do you want to define your end point?
PolygonComponent.stopType.updates:None
PolygonComponent.startVal.default:0.0
PolygonComponent.startVal.label:Start
PolygonComponent.startVal.allowedVals:[]
PolygonComponent.startVal.staticUpdater:None
PolygonComponent.startVal.val:0.0
PolygonComponent.startVal.readOnly:False
PolygonComponent.startVal.valType:code
PolygonComponent.startVal.allowedUpdates:None
PolygonComponent.startVal.allowedTypes:[]
PolygonComponent.startVal.categ:Basic
PolygonComponent.startVal.hint:When does the component start?
PolygonComponent.startVal.updates:None
PolygonComponent.stopVal.default:1.0
PolygonComponent.stopVal.label:Stop
PolygonComponent.stopVal.allowedVals:[]
PolygonComponent.stopVal.staticUpdater:None
PolygonComponent.stopVal.val:1.0
PolygonComponent.stopVal.readOnly:False
PolygonComponent.stopVal.valType:code
PolygonComponent.stopVal.allowedUpdates:[]
PolygonComponent.stopVal.allowedTypes:[]
PolygonComponent.stopVal.categ:Basic
PolygonComponent.stopVal.hint:When does the component end? (blank is endless)
PolygonComponent.stopVal.updates:constant
PolygonComponent.startEstim.default:
PolygonComponent.startEstim.label:Expected start (s)
PolygonComponent.startEstim.allowedVals:[]
PolygonComponent.startEstim.staticUpdater:None
PolygonComponent.startEstim.val:
PolygonComponent.startEstim.readOnly:False
PolygonComponent.startEstim.valType:code
PolygonComponent.startEstim.allowedUpdates:None
PolygonComponent.startEstim.allowedTypes:[]
PolygonComponent.startEstim.categ:Basic
PolygonComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
PolygonComponent.startEstim.updates:None
PolygonComponent.durationEstim.default:
PolygonComponent.durationEstim.label:Expected duration (s)
PolygonComponent.durationEstim.allowedVals:[]
PolygonComponent.durationEstim.staticUpdater:None
PolygonComponent.durationEstim.val:
PolygonComponent.durationEstim.readOnly:False
PolygonComponent.durationEstim.valType:code
PolygonComponent.durationEstim.allowedUpdates:None
PolygonComponent.durationEstim.allowedTypes:[]
PolygonComponent.durationEstim.categ:Basic
PolygonComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
PolygonComponent.durationEstim.updates:None
PolygonComponent.units.default:'from exp settings'
PolygonComponent.units.label:Units
PolygonComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
PolygonComponent.units.staticUpdater:None
PolygonComponent.units.val:from exp settings
PolygonComponent.units.readOnly:False
PolygonComponent.units.valType:str
PolygonComponent.units.allowedUpdates:None
PolygonComponent.units.allowedTypes:[]
PolygonComponent.units.categ:Basic
PolygonComponent.units.hint:Units of dimensions for this stimulus
PolygonComponent.units.updates:None
PolygonComponent.opacity.default:1
PolygonComponent.opacity.label:Opacity
PolygonComponent.opacity.allowedVals:[]
PolygonComponent.opacity.staticUpdater:None
PolygonComponent.opacity.val:1
PolygonComponent.opacity.readOnly:False
PolygonComponent.opacity.valType:code
PolygonComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.opacity.allowedTypes:[]
PolygonComponent.opacity.categ:Basic
PolygonComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
PolygonComponent.opacity.updates:constant
PolygonComponent.pos.default:(0, 0)
PolygonComponent.pos.label:Position [x,y]
PolygonComponent.pos.allowedVals:[]
PolygonComponent.pos.staticUpdater:None
PolygonComponent.pos.val:(0, 0)
PolygonComponent.pos.readOnly:False
PolygonComponent.pos.valType:code
PolygonComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.pos.allowedTypes:[]
PolygonComponent.pos.categ:Basic
PolygonComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
PolygonComponent.pos.updates:constant
PolygonComponent.size.default:(0.5, 0.5)
PolygonComponent.size.label:Size [w,h]
PolygonComponent.size.allowedVals:[]
PolygonComponent.size.staticUpdater:None
PolygonComponent.size.val:(0.5, 0.5)
PolygonComponent.size.readOnly:False
PolygonComponent.size.valType:code
PolygonComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.size.allowedTypes:[]
PolygonComponent.size.categ:Basic
PolygonComponent.size.hint:Size of this stimulus [w,h]. Note that for a line only the first value is used, for triangle and rect the [w,h] is as expected,
 but for higher-order polygons it represents the [w,h] of the ellipse that the polygon sits on!! 
PolygonComponent.size.updates:constant
PolygonComponent.ori.default:0
PolygonComponent.ori.label:Orientation
PolygonComponent.ori.allowedVals:[]
PolygonComponent.ori.staticUpdater:None
PolygonComponent.ori.val:0
PolygonComponent.ori.readOnly:False
PolygonComponent.ori.valType:code
PolygonComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.ori.allowedTypes:[]
PolygonComponent.ori.categ:Basic
PolygonComponent.ori.hint:Orientation of this stimulus (in deg)
PolygonComponent.ori.updates:constant
PolygonComponent.nVertices.default:4
PolygonComponent.nVertices.label:Num. vertices
PolygonComponent.nVertices.allowedVals:[]
PolygonComponent.nVertices.staticUpdater:None
PolygonComponent.nVertices.val:4
PolygonComponent.nVertices.readOnly:False
PolygonComponent.nVertices.valType:int
PolygonComponent.nVertices.allowedUpdates:['constant']
PolygonComponent.nVertices.allowedTypes:[]
PolygonComponent.nVertices.categ:Basic
PolygonComponent.nVertices.hint:How many vertices in your regular polygon?
PolygonComponent.nVertices.updates:constant
PolygonComponent.shape.default:'triangle'
PolygonComponent.shape.label:Shape
PolygonComponent.shape.allowedVals:['line', 'triangle', 'rectangle', 'cross', 'regular polygon...']
PolygonComponent.shape.staticUpdater:None
PolygonComponent.shape.val:triangle
PolygonComponent.shape.readOnly:False
PolygonComponent.shape.valType:str
PolygonComponent.shape.allowedUpdates:['constant']
PolygonComponent.shape.allowedTypes:[]
PolygonComponent.shape.categ:Basic
PolygonComponent.shape.hint:What shape is this? With 'regular polygon...' you can set number of vertices
PolygonComponent.shape.updates:constant
PolygonComponent.fillColorSpace.default:'rgb'
PolygonComponent.fillColorSpace.label:Fill color-space
PolygonComponent.fillColorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv', 'rgb255']
PolygonComponent.fillColorSpace.staticUpdater:None
PolygonComponent.fillColorSpace.val:rgb
PolygonComponent.fillColorSpace.readOnly:False
PolygonComponent.fillColorSpace.valType:str
PolygonComponent.fillColorSpace.allowedUpdates:None
PolygonComponent.fillColorSpace.allowedTypes:[]
PolygonComponent.fillColorSpace.categ:Advanced
PolygonComponent.fillColorSpace.hint:Choice of color space for the fill color (rgb, dkl, lms, hsv)
PolygonComponent.fillColorSpace.updates:constant
PolygonComponent.fillColor.default:[1,1,1]
PolygonComponent.fillColor.label:Fill color
PolygonComponent.fillColor.allowedVals:[]
PolygonComponent.fillColor.staticUpdater:None
PolygonComponent.fillColor.val:$[1,1,1]
PolygonComponent.fillColor.readOnly:False
PolygonComponent.fillColor.valType:str
PolygonComponent.fillColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.fillColor.allowedTypes:[]
PolygonComponent.fillColor.categ:Advanced
PolygonComponent.fillColor.hint:Fill color of this shape; Right-click to bring up a color-picker (rgb only)
PolygonComponent.fillColor.updates:constant
PolygonComponent.lineColorSpace.default:'rgb'
PolygonComponent.lineColorSpace.label:Line color-space
PolygonComponent.lineColorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
PolygonComponent.lineColorSpace.staticUpdater:None
PolygonComponent.lineColorSpace.val:rgb
PolygonComponent.lineColorSpace.readOnly:False
PolygonComponent.lineColorSpace.valType:str
PolygonComponent.lineColorSpace.allowedUpdates:None
PolygonComponent.lineColorSpace.allowedTypes:[]
PolygonComponent.lineColorSpace.categ:Advanced
PolygonComponent.lineColorSpace.hint:Choice of color space for the fill color (rgb, dkl, lms, hsv)
PolygonComponent.lineColorSpace.updates:constant
PolygonComponent.lineColor.default:[1,1,1]
PolygonComponent.lineColor.label:Line color
PolygonComponent.lineColor.allowedVals:[]
PolygonComponent.lineColor.staticUpdater:None
PolygonComponent.lineColor.val:$[1,1,1]
PolygonComponent.lineColor.readOnly:False
PolygonComponent.lineColor.valType:str
PolygonComponent.lineColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.lineColor.allowedTypes:[]
PolygonComponent.lineColor.categ:Advanced
PolygonComponent.lineColor.hint:Line color of this shape; Right-click to bring up a color-picker (rgb only)
PolygonComponent.lineColor.updates:constant
PolygonComponent.lineWidth.default:1
PolygonComponent.lineWidth.label:Line width
PolygonComponent.lineWidth.allowedVals:[]
PolygonComponent.lineWidth.staticUpdater:None
PolygonComponent.lineWidth.val:1
PolygonComponent.lineWidth.readOnly:False
PolygonComponent.lineWidth.valType:code
PolygonComponent.lineWidth.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.lineWidth.allowedTypes:[]
PolygonComponent.lineWidth.categ:Basic
PolygonComponent.lineWidth.hint:Width of the shape's line (always in pixels - this does NOT use 'units')
PolygonComponent.lineWidth.updates:constant
PolygonComponent.interpolate.default:'linear'
PolygonComponent.interpolate.label:Interpolate
PolygonComponent.interpolate.allowedVals:['linear', 'nearest']
PolygonComponent.interpolate.staticUpdater:None
PolygonComponent.interpolate.val:linear
PolygonComponent.interpolate.readOnly:False
PolygonComponent.interpolate.valType:str
PolygonComponent.interpolate.allowedUpdates:[]
PolygonComponent.interpolate.allowedTypes:[]
PolygonComponent.interpolate.categ:Advanced
PolygonComponent.interpolate.hint:How should the image be interpolated if/when rescaled
PolygonComponent.interpolate.updates:constant
RatingScaleComponent.order:['name', 'visualAnalogScale', 'categoryChoices', 'scaleDescription', 'low', 'high', 'labels', 'markerStart', 'size', 'pos', 'tickHeight']
RatingScaleComponent.name.default:rating
RatingScaleComponent.name.label:Name
RatingScaleComponent.name.allowedVals:[]
RatingScaleComponent.name.staticUpdater:None
RatingScaleComponent.name.val:rating
RatingScaleComponent.name.readOnly:False
RatingScaleComponent.name.valType:code
RatingScaleComponent.name.allowedUpdates:None
RatingScaleComponent.name.allowedTypes:[]
RatingScaleComponent.name.categ:Basic
RatingScaleComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
RatingScaleComponent.startType.default:'time (s)'
RatingScaleComponent.startType.label:start type
RatingScaleComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
RatingScaleComponent.startType.staticUpdater:None
RatingScaleComponent.startType.val:time (s)
RatingScaleComponent.startType.readOnly:False
RatingScaleComponent.startType.valType:str
RatingScaleComponent.startType.allowedUpdates:None
RatingScaleComponent.startType.allowedTypes:[]
RatingScaleComponent.startType.categ:Basic
RatingScaleComponent.startType.hint:How do you want to define your start point?
RatingScaleComponent.startType.updates:None
RatingScaleComponent.stopType.default:'condition'
RatingScaleComponent.stopType.label:stop type
RatingScaleComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
RatingScaleComponent.stopType.staticUpdater:None
RatingScaleComponent.stopType.val:condition
RatingScaleComponent.stopType.readOnly:False
RatingScaleComponent.stopType.valType:str
RatingScaleComponent.stopType.allowedUpdates:None
RatingScaleComponent.stopType.allowedTypes:[]
RatingScaleComponent.stopType.categ:Basic
RatingScaleComponent.stopType.hint:How do you want to define your end point?
RatingScaleComponent.stopType.updates:None
RatingScaleComponent.startVal.default:0.0
RatingScaleComponent.startVal.label:Start
RatingScaleComponent.startVal.allowedVals:[]
RatingScaleComponent.startVal.staticUpdater:None
RatingScaleComponent.startVal.val:0.0
RatingScaleComponent.startVal.readOnly:False
RatingScaleComponent.startVal.valType:code
RatingScaleComponent.startVal.allowedUpdates:None
RatingScaleComponent.startVal.allowedTypes:[]
RatingScaleComponent.startVal.categ:Basic
RatingScaleComponent.startVal.hint:When does the component start?
RatingScaleComponent.startVal.updates:None
RatingScaleComponent.stopVal.default:
RatingScaleComponent.stopVal.label:Stop
RatingScaleComponent.stopVal.allowedVals:[]
RatingScaleComponent.stopVal.staticUpdater:None
RatingScaleComponent.stopVal.val:
RatingScaleComponent.stopVal.readOnly:False
RatingScaleComponent.stopVal.valType:code
RatingScaleComponent.stopVal.allowedUpdates:[]
RatingScaleComponent.stopVal.allowedTypes:[]
RatingScaleComponent.stopVal.categ:Basic
RatingScaleComponent.stopVal.hint:When does the component end? (blank is endless)
RatingScaleComponent.stopVal.updates:constant
RatingScaleComponent.startEstim.default:
RatingScaleComponent.startEstim.label:Expected start (s)
RatingScaleComponent.startEstim.allowedVals:[]
RatingScaleComponent.startEstim.staticUpdater:None
RatingScaleComponent.startEstim.val:
RatingScaleComponent.startEstim.readOnly:False
RatingScaleComponent.startEstim.valType:code
RatingScaleComponent.startEstim.allowedUpdates:None
RatingScaleComponent.startEstim.allowedTypes:[]
RatingScaleComponent.startEstim.categ:Basic
RatingScaleComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
RatingScaleComponent.startEstim.updates:None
RatingScaleComponent.durationEstim.default:
RatingScaleComponent.durationEstim.label:Expected duration (s)
RatingScaleComponent.durationEstim.allowedVals:[]
RatingScaleComponent.durationEstim.staticUpdater:None
RatingScaleComponent.durationEstim.val:
RatingScaleComponent.durationEstim.readOnly:False
RatingScaleComponent.durationEstim.valType:code
RatingScaleComponent.durationEstim.allowedUpdates:None
RatingScaleComponent.durationEstim.allowedTypes:[]
RatingScaleComponent.durationEstim.categ:Basic
RatingScaleComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
RatingScaleComponent.durationEstim.updates:None
RatingScaleComponent.visualAnalogScale.default:False
RatingScaleComponent.visualAnalogScale.label:Visual analog scale
RatingScaleComponent.visualAnalogScale.allowedVals:[]
RatingScaleComponent.visualAnalogScale.staticUpdater:None
RatingScaleComponent.visualAnalogScale.val:False
RatingScaleComponent.visualAnalogScale.readOnly:False
RatingScaleComponent.visualAnalogScale.valType:bool
RatingScaleComponent.visualAnalogScale.allowedUpdates:[]
RatingScaleComponent.visualAnalogScale.allowedTypes:[]
RatingScaleComponent.visualAnalogScale.categ:Basic
RatingScaleComponent.visualAnalogScale.hint:Show a continuous visual analog scale; returns 0.00 to 1.00; takes precedence over numeric scale or categorical choices
RatingScaleComponent.visualAnalogScale.updates:constant
RatingScaleComponent.categoryChoices.default:''
RatingScaleComponent.categoryChoices.label:Category choices
RatingScaleComponent.categoryChoices.allowedVals:[]
RatingScaleComponent.categoryChoices.staticUpdater:None
RatingScaleComponent.categoryChoices.val:
RatingScaleComponent.categoryChoices.readOnly:False
RatingScaleComponent.categoryChoices.valType:str
RatingScaleComponent.categoryChoices.allowedUpdates:[]
RatingScaleComponent.categoryChoices.allowedTypes:[]
RatingScaleComponent.categoryChoices.categ:Basic
RatingScaleComponent.categoryChoices.hint:A list of categories (non-numeric alternatives) to present, space or comma-separated; these take precedence over a numeric scale
RatingScaleComponent.categoryChoices.updates:constant
RatingScaleComponent.scaleDescription.default:''
RatingScaleComponent.scaleDescription.label:Scale description
RatingScaleComponent.scaleDescription.allowedVals:[]
RatingScaleComponent.scaleDescription.staticUpdater:None
RatingScaleComponent.scaleDescription.val:
RatingScaleComponent.scaleDescription.readOnly:False
RatingScaleComponent.scaleDescription.valType:str
RatingScaleComponent.scaleDescription.allowedUpdates:[]
RatingScaleComponent.scaleDescription.allowedTypes:[]
RatingScaleComponent.scaleDescription.categ:Basic
RatingScaleComponent.scaleDescription.hint:Brief instructions, such as a description of the scale numbers as seen by the subject.
RatingScaleComponent.scaleDescription.updates:constant
RatingScaleComponent.low.default:1
RatingScaleComponent.low.label:Lowest value
RatingScaleComponent.low.allowedVals:[]
RatingScaleComponent.low.staticUpdater:None
RatingScaleComponent.low.val:1
RatingScaleComponent.low.readOnly:False
RatingScaleComponent.low.valType:code
RatingScaleComponent.low.allowedUpdates:[]
RatingScaleComponent.low.allowedTypes:[]
RatingScaleComponent.low.categ:Basic
RatingScaleComponent.low.hint:Lowest rating (low end of the scale); not used for categories.
RatingScaleComponent.low.updates:constant
RatingScaleComponent.high.default:7
RatingScaleComponent.high.label:Highest value
RatingScaleComponent.high.allowedVals:[]
RatingScaleComponent.high.staticUpdater:None
RatingScaleComponent.high.val:7
RatingScaleComponent.high.readOnly:False
RatingScaleComponent.high.valType:code
RatingScaleComponent.high.allowedUpdates:[]
RatingScaleComponent.high.allowedTypes:[]
RatingScaleComponent.high.categ:Basic
RatingScaleComponent.high.hint:Highest rating (top end of the scale); not used for categories.
RatingScaleComponent.high.updates:constant
RatingScaleComponent.labels.default:''
RatingScaleComponent.labels.label:Labels
RatingScaleComponent.labels.allowedVals:[]
RatingScaleComponent.labels.staticUpdater:None
RatingScaleComponent.labels.val:
RatingScaleComponent.labels.readOnly:False
RatingScaleComponent.labels.valType:str
RatingScaleComponent.labels.allowedUpdates:[]
RatingScaleComponent.labels.allowedTypes:[]
RatingScaleComponent.labels.categ:Basic
RatingScaleComponent.labels.hint:Labels for the ends of the scale, separated by commas
RatingScaleComponent.labels.updates:constant
RatingScaleComponent.marker.default:'triangle'
RatingScaleComponent.marker.label:Marker type
RatingScaleComponent.marker.allowedVals:[]
RatingScaleComponent.marker.staticUpdater:None
RatingScaleComponent.marker.val:triangle
RatingScaleComponent.marker.readOnly:False
RatingScaleComponent.marker.valType:str
RatingScaleComponent.marker.allowedUpdates:[]
RatingScaleComponent.marker.allowedTypes:[]
RatingScaleComponent.marker.categ:Basic
RatingScaleComponent.marker.hint:Style for the marker: triangle, circle, glow, slider, hover
RatingScaleComponent.marker.updates:constant
RatingScaleComponent.markerStart.default:''
RatingScaleComponent.markerStart.label:Marker start
RatingScaleComponent.markerStart.allowedVals:[]
RatingScaleComponent.markerStart.staticUpdater:None
RatingScaleComponent.markerStart.val:
RatingScaleComponent.markerStart.readOnly:False
RatingScaleComponent.markerStart.valType:str
RatingScaleComponent.markerStart.allowedUpdates:[]
RatingScaleComponent.markerStart.allowedTypes:[]
RatingScaleComponent.markerStart.categ:Basic
RatingScaleComponent.markerStart.hint:initial position for the marker
RatingScaleComponent.markerStart.updates:constant
RatingScaleComponent.singleClick.default:False
RatingScaleComponent.singleClick.label:Single click
RatingScaleComponent.singleClick.allowedVals:[]
RatingScaleComponent.singleClick.staticUpdater:None
RatingScaleComponent.singleClick.val:False
RatingScaleComponent.singleClick.readOnly:False
RatingScaleComponent.singleClick.valType:bool
RatingScaleComponent.singleClick.allowedUpdates:[]
RatingScaleComponent.singleClick.allowedTypes:[]
RatingScaleComponent.singleClick.categ:Advanced
RatingScaleComponent.singleClick.hint:Should clicking the line accept that rating (without needing to confirm via 'accept')?
RatingScaleComponent.singleClick.updates:constant
RatingScaleComponent.disappear.default:False
RatingScaleComponent.disappear.label:Disappear
RatingScaleComponent.disappear.allowedVals:[]
RatingScaleComponent.disappear.staticUpdater:None
RatingScaleComponent.disappear.val:False
RatingScaleComponent.disappear.readOnly:False
RatingScaleComponent.disappear.valType:bool
RatingScaleComponent.disappear.allowedUpdates:[]
RatingScaleComponent.disappear.allowedTypes:[]
RatingScaleComponent.disappear.categ:Advanced
RatingScaleComponent.disappear.hint:Hide the scale when a rating has been accepted; False to remain on-screen
RatingScaleComponent.disappear.updates:constant
RatingScaleComponent.showAccept.default:True
RatingScaleComponent.showAccept.label:Show accept
RatingScaleComponent.showAccept.allowedVals:[]
RatingScaleComponent.showAccept.staticUpdater:None
RatingScaleComponent.showAccept.val:True
RatingScaleComponent.showAccept.readOnly:False
RatingScaleComponent.showAccept.valType:bool
RatingScaleComponent.showAccept.allowedUpdates:[]
RatingScaleComponent.showAccept.allowedTypes:[]
RatingScaleComponent.showAccept.categ:Advanced
RatingScaleComponent.showAccept.hint:Should the accept button by visible?
RatingScaleComponent.showAccept.updates:constant
RatingScaleComponent.storeRating.default:True
RatingScaleComponent.storeRating.label:Store rating
RatingScaleComponent.storeRating.allowedVals:[]
RatingScaleComponent.storeRating.staticUpdater:None
RatingScaleComponent.storeRating.val:True
RatingScaleComponent.storeRating.readOnly:False
RatingScaleComponent.storeRating.valType:bool
RatingScaleComponent.storeRating.allowedUpdates:[]
RatingScaleComponent.storeRating.allowedTypes:[]
RatingScaleComponent.storeRating.categ:Advanced
RatingScaleComponent.storeRating.hint:store the rating
RatingScaleComponent.storeRating.updates:constant
RatingScaleComponent.storeRatingTime.default:True
RatingScaleComponent.storeRatingTime.label:Store rating time
RatingScaleComponent.storeRatingTime.allowedVals:[]
RatingScaleComponent.storeRatingTime.staticUpdater:None
RatingScaleComponent.storeRatingTime.val:True
RatingScaleComponent.storeRatingTime.readOnly:False
RatingScaleComponent.storeRatingTime.valType:bool
RatingScaleComponent.storeRatingTime.allowedUpdates:[]
RatingScaleComponent.storeRatingTime.allowedTypes:[]
RatingScaleComponent.storeRatingTime.categ:Advanced
RatingScaleComponent.storeRatingTime.hint:store the time taken to make the choice (in seconds)
RatingScaleComponent.storeRatingTime.updates:constant
RatingScaleComponent.storeHistory.default:False
RatingScaleComponent.storeHistory.label:Store history
RatingScaleComponent.storeHistory.allowedVals:[]
RatingScaleComponent.storeHistory.staticUpdater:None
RatingScaleComponent.storeHistory.val:False
RatingScaleComponent.storeHistory.readOnly:False
RatingScaleComponent.storeHistory.valType:bool
RatingScaleComponent.storeHistory.allowedUpdates:[]
RatingScaleComponent.storeHistory.allowedTypes:[]
RatingScaleComponent.storeHistory.categ:Advanced
RatingScaleComponent.storeHistory.hint:store the history of (selection, time)
RatingScaleComponent.storeHistory.updates:constant
RatingScaleComponent.forceEndRoutine.default:True
RatingScaleComponent.forceEndRoutine.label:Force end of Routine
RatingScaleComponent.forceEndRoutine.allowedVals:[]
RatingScaleComponent.forceEndRoutine.staticUpdater:None
RatingScaleComponent.forceEndRoutine.val:True
RatingScaleComponent.forceEndRoutine.readOnly:False
RatingScaleComponent.forceEndRoutine.valType:bool
RatingScaleComponent.forceEndRoutine.allowedUpdates:[]
RatingScaleComponent.forceEndRoutine.allowedTypes:[]
RatingScaleComponent.forceEndRoutine.categ:Advanced
RatingScaleComponent.forceEndRoutine.hint:Should accepting a rating cause the end of the routine (e.g. trial)?
RatingScaleComponent.forceEndRoutine.updates:constant
RatingScaleComponent.size.default:1.0
RatingScaleComponent.size.label:Size
RatingScaleComponent.size.allowedVals:[]
RatingScaleComponent.size.staticUpdater:None
RatingScaleComponent.size.val:1.0
RatingScaleComponent.size.readOnly:False
RatingScaleComponent.size.valType:code
RatingScaleComponent.size.allowedUpdates:[]
RatingScaleComponent.size.allowedTypes:[]
RatingScaleComponent.size.categ:Advanced
RatingScaleComponent.size.hint:Relative size on the screen; size > 1 is larger than default; size < 1 is smaller
RatingScaleComponent.size.updates:constant
RatingScaleComponent.tickHeight.default:''
RatingScaleComponent.tickHeight.label:Tick height
RatingScaleComponent.tickHeight.allowedVals:[]
RatingScaleComponent.tickHeight.staticUpdater:None
RatingScaleComponent.tickHeight.val:
RatingScaleComponent.tickHeight.readOnly:False
RatingScaleComponent.tickHeight.valType:str
RatingScaleComponent.tickHeight.allowedUpdates:[]
RatingScaleComponent.tickHeight.allowedTypes:[]
RatingScaleComponent.tickHeight.categ:Advanced
RatingScaleComponent.tickHeight.hint:height of tick marks (1 is upward, 0 is hidden, -1 is downward)
RatingScaleComponent.tickHeight.updates:constant
RatingScaleComponent.pos.default:'0, -0.4'
RatingScaleComponent.pos.label:Position [x,y]
RatingScaleComponent.pos.allowedVals:[]
RatingScaleComponent.pos.staticUpdater:None
RatingScaleComponent.pos.val:0, -0.4
RatingScaleComponent.pos.readOnly:False
RatingScaleComponent.pos.valType:str
RatingScaleComponent.pos.allowedUpdates:[]
RatingScaleComponent.pos.allowedTypes:[]
RatingScaleComponent.pos.categ:Advanced
RatingScaleComponent.pos.hint:x,y position on the screen
RatingScaleComponent.pos.updates:constant
RatingScaleComponent.customize_everything.default:''
RatingScaleComponent.customize_everything.label:Customize everything :
RatingScaleComponent.customize_everything.allowedVals:[]
RatingScaleComponent.customize_everything.staticUpdater:None
RatingScaleComponent.customize_everything.val:
RatingScaleComponent.customize_everything.readOnly:False
RatingScaleComponent.customize_everything.valType:str
RatingScaleComponent.customize_everything.allowedUpdates:[]
RatingScaleComponent.customize_everything.allowedTypes:[]
RatingScaleComponent.customize_everything.categ:Custom
RatingScaleComponent.customize_everything.hint:Use this text to create the rating scale as you would in a code component; overrides all dialog settings except time parameters, forceEndRoutine, storeRatingTime, storeRating
RatingScaleComponent.customize_everything.updates:constant
SettingsComponent.order:['expName', 'Show info dlg', 'Experiment info', 'Data filename', 'Save excel file', 'Save csv file', 'Save wide csv file', 'Save psydat file', 'Save log file', 'logging level', 'Monitor', 'Screen', 'Full-screen window', 'Window size (pixels)', 'color', 'colorSpace', 'Units']
SettingsComponent.expName.default:''
SettingsComponent.expName.label:Experiment name
SettingsComponent.expName.allowedVals:[]
SettingsComponent.expName.staticUpdater:None
SettingsComponent.expName.val:
SettingsComponent.expName.readOnly:False
SettingsComponent.expName.valType:str
SettingsComponent.expName.allowedUpdates:None
SettingsComponent.expName.allowedTypes:[]
SettingsComponent.expName.categ:Basic
SettingsComponent.expName.hint:Name of the entire experiment (taken by default from the filename on save)
SettingsComponent.expName.updates:None
SettingsComponent.Show info dlg.default:True
SettingsComponent.Show info dlg.label:Show info dialog
SettingsComponent.Show info dlg.allowedVals:[]
SettingsComponent.Show info dlg.staticUpdater:None
SettingsComponent.Show info dlg.val:True
SettingsComponent.Show info dlg.readOnly:False
SettingsComponent.Show info dlg.valType:bool
SettingsComponent.Show info dlg.allowedUpdates:None
SettingsComponent.Show info dlg.allowedTypes:[]
SettingsComponent.Show info dlg.categ:Basic
SettingsComponent.Show info dlg.hint:Start the experiment with a dialog to set info (e.g.participant or condition)
SettingsComponent.Show info dlg.updates:None
SettingsComponent.Enable Escape.default:True
SettingsComponent.Enable Escape.label:Enable Escape key
SettingsComponent.Enable Escape.allowedVals:[]
SettingsComponent.Enable Escape.staticUpdater:None
SettingsComponent.Enable Escape.val:True
SettingsComponent.Enable Escape.readOnly:False
SettingsComponent.Enable Escape.valType:bool
SettingsComponent.Enable Escape.allowedUpdates:None
SettingsComponent.Enable Escape.allowedTypes:[]
SettingsComponent.Enable Escape.categ:Basic
SettingsComponent.Enable Escape.hint:Enable the <esc> key, to allow subjects to quit / break out of the experiment
SettingsComponent.Enable Escape.updates:None
SettingsComponent.Experiment info.default:{'participant':'', 'session':'001'}
SettingsComponent.Experiment info.label:Experiment info
SettingsComponent.Experiment info.allowedVals:[]
SettingsComponent.Experiment info.staticUpdater:None
SettingsComponent.Experiment info.val:{'participant':'', 'session':'001'}
SettingsComponent.Experiment info.readOnly:False
SettingsComponent.Experiment info.valType:code
SettingsComponent.Experiment info.allowedUpdates:None
SettingsComponent.Experiment info.allowedTypes:[]
SettingsComponent.Experiment info.categ:Basic
SettingsComponent.Experiment info.hint:The info to present in a dialog box. Right-click to check syntax and preview the dialog box.
SettingsComponent.Experiment info.updates:None
SettingsComponent.Use version.default:''
SettingsComponent.Use version.label:Use PsychoPy version
SettingsComponent.Use version.allowedVals:['latest', '1', '1.90', '1.85', '1.84', '1.83', '1.82', '1.81', '1.80', '1.79', '1.78', '1.77', '1.76', '', '1.90.1', '1.90.0', '1.85.6', '1.85.4', '1.85.3', '1.85.2', '1.85.1', '1.85.0', '1.84.2', '1.84.1', '1.84.0', '1.83.04', '1.83.03', '1.83.01', '1.83.00', '1.82.01', '1.82.00', '1.81.03', '1.81.02', '1.81.01', '1.81.00', '1.80.06', '1.80.05', '1.80.03', '1.80.02', '1.80.01', '1.80.00', '1.79.00', '1.78.01', '1.78.00', '1.77.02', '1.77.01', '1.77.00', '1.76.00']
SettingsComponent.Use version.staticUpdater:None
SettingsComponent.Use version.val:
SettingsComponent.Use version.readOnly:False
SettingsComponent.Use version.valType:str
SettingsComponent.Use version.allowedUpdates:None
SettingsComponent.Use version.allowedTypes:[]
SettingsComponent.Use version.categ:Basic
SettingsComponent.Use version.hint:The version of PsychoPy to use when running the experiment.
SettingsComponent.Use version.updates:None
SettingsComponent.Full-screen window.default:True
SettingsComponent.Full-screen window.label:Full-screen window
SettingsComponent.Full-screen window.allowedVals:[]
SettingsComponent.Full-screen window.staticUpdater:None
SettingsComponent.Full-screen window.val:True
SettingsComponent.Full-screen window.readOnly:False
SettingsComponent.Full-screen window.valType:bool
SettingsComponent.Full-screen window.allowedUpdates:None
SettingsComponent.Full-screen window.allowedTypes:[]
SettingsComponent.Full-screen window.categ:Screen
SettingsComponent.Full-screen window.hint:Run the experiment full-screen (recommended)
SettingsComponent.Full-screen window.updates:None
SettingsComponent.Window size (pixels).default:(1024, 768)
SettingsComponent.Window size (pixels).label:Window size (pixels)
SettingsComponent.Window size (pixels).allowedVals:[]
SettingsComponent.Window size (pixels).staticUpdater:None
SettingsComponent.Window size (pixels).val:(1024, 768)
SettingsComponent.Window size (pixels).readOnly:False
SettingsComponent.Window size (pixels).valType:code
SettingsComponent.Window size (pixels).allowedUpdates:None
SettingsComponent.Window size (pixels).allowedTypes:[]
SettingsComponent.Window size (pixels).categ:Screen
SettingsComponent.Window size (pixels).hint:Size of window (if not fullscreen)
SettingsComponent.Window size (pixels).updates:None
SettingsComponent.Screen.default:1.0
SettingsComponent.Screen.label:Screen
SettingsComponent.Screen.allowedVals:[]
SettingsComponent.Screen.staticUpdater:None
SettingsComponent.Screen.val:1
SettingsComponent.Screen.readOnly:False
SettingsComponent.Screen.valType:num
SettingsComponent.Screen.allowedUpdates:None
SettingsComponent.Screen.allowedTypes:[]
SettingsComponent.Screen.categ:Screen
SettingsComponent.Screen.hint:Which physical screen to run on (1 or 2)
SettingsComponent.Screen.updates:None
SettingsComponent.Monitor.default:'testMonitor'
SettingsComponent.Monitor.label:Monitor
SettingsComponent.Monitor.allowedVals:[]
SettingsComponent.Monitor.staticUpdater:None
SettingsComponent.Monitor.val:testMonitor
SettingsComponent.Monitor.readOnly:False
SettingsComponent.Monitor.valType:str
SettingsComponent.Monitor.allowedUpdates:None
SettingsComponent.Monitor.allowedTypes:[]
SettingsComponent.Monitor.categ:Screen
SettingsComponent.Monitor.hint:Name of the monitor (from Monitor Center). Right-click to go there, then copy & paste a monitor name here.
SettingsComponent.Monitor.updates:None
SettingsComponent.color.default:[0,0,0]
SettingsComponent.color.label:Color
SettingsComponent.color.allowedVals:[]
SettingsComponent.color.staticUpdater:None
SettingsComponent.color.val:$[0,0,0]
SettingsComponent.color.readOnly:False
SettingsComponent.color.valType:str
SettingsComponent.color.allowedUpdates:None
SettingsComponent.color.allowedTypes:[]
SettingsComponent.color.categ:Screen
SettingsComponent.color.hint:Color of the screen (e.g. black, $[1.0,1.0,1.0], $variable. Right-click to bring up a color-picker.)
SettingsComponent.color.updates:None
SettingsComponent.colorSpace.default:'rgb'
SettingsComponent.colorSpace.label:Color space
SettingsComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
SettingsComponent.colorSpace.staticUpdater:None
SettingsComponent.colorSpace.val:rgb
SettingsComponent.colorSpace.readOnly:False
SettingsComponent.colorSpace.valType:str
SettingsComponent.colorSpace.allowedUpdates:None
SettingsComponent.colorSpace.allowedTypes:[]
SettingsComponent.colorSpace.categ:Screen
SettingsComponent.colorSpace.hint:Needed if color is defined numerically (see PsychoPy documentation on color spaces)
SettingsComponent.colorSpace.updates:None
SettingsComponent.Units.default:'use prefs'
SettingsComponent.Units.label:Units
SettingsComponent.Units.allowedVals:['use prefs', 'deg', 'pix', 'cm', 'norm', 'height', 'degFlatPos', 'degFlat']
SettingsComponent.Units.staticUpdater:None
SettingsComponent.Units.val:use prefs
SettingsComponent.Units.readOnly:False
SettingsComponent.Units.valType:str
SettingsComponent.Units.allowedUpdates:None
SettingsComponent.Units.allowedTypes:[]
SettingsComponent.Units.categ:Screen
SettingsComponent.Units.hint:Units to use for window/stimulus coordinates (e.g. cm, pix, deg)
SettingsComponent.Units.updates:None
SettingsComponent.blendMode.default:'avg'
SettingsComponent.blendMode.label:Blend mode
SettingsComponent.blendMode.allowedVals:['add', 'avg']
SettingsComponent.blendMode.staticUpdater:None
SettingsComponent.blendMode.val:avg
SettingsComponent.blendMode.readOnly:False
SettingsComponent.blendMode.valType:str
SettingsComponent.blendMode.allowedUpdates:None
SettingsComponent.blendMode.allowedTypes:[]
SettingsComponent.blendMode.categ:Screen
SettingsComponent.blendMode.hint:Should new stimuli be added or averaged with the stimuli that have been drawn already
SettingsComponent.blendMode.updates:None
SettingsComponent.Show mouse.default:False
SettingsComponent.Show mouse.label:Show mouse
SettingsComponent.Show mouse.allowedVals:[]
SettingsComponent.Show mouse.staticUpdater:None
SettingsComponent.Show mouse.val:False
SettingsComponent.Show mouse.readOnly:False
SettingsComponent.Show mouse.valType:bool
SettingsComponent.Show mouse.allowedUpdates:None
SettingsComponent.Show mouse.allowedTypes:[]
SettingsComponent.Show mouse.categ:Screen
SettingsComponent.Show mouse.hint:Should the mouse be visible on screen?
SettingsComponent.Show mouse.updates:None
SettingsComponent.Data filename.default:u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])
SettingsComponent.Data filename.label:Data filename
SettingsComponent.Data filename.allowedVals:[]
SettingsComponent.Data filename.staticUpdater:None
SettingsComponent.Data filename.val:u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])
SettingsComponent.Data filename.readOnly:False
SettingsComponent.Data filename.valType:code
SettingsComponent.Data filename.allowedUpdates:None
SettingsComponent.Data filename.allowedTypes:[]
SettingsComponent.Data filename.categ:Data
SettingsComponent.Data filename.hint:Code to create your custom file name base. Don't give a file extension - this will be added.
SettingsComponent.Data filename.updates:None
SettingsComponent.Save log file.default:True
SettingsComponent.Save log file.label:Save log file
SettingsComponent.Save log file.allowedVals:[]
SettingsComponent.Save log file.staticUpdater:None
SettingsComponent.Save log file.val:True
SettingsComponent.Save log file.readOnly:False
SettingsComponent.Save log file.valType:bool
SettingsComponent.Save log file.allowedUpdates:None
SettingsComponent.Save log file.allowedTypes:[]
SettingsComponent.Save log file.categ:Data
SettingsComponent.Save log file.hint:Save a detailed log (more detailed than the excel/csv files) of the entire experiment
SettingsComponent.Save log file.updates:None
SettingsComponent.Save wide csv file.default:True
SettingsComponent.Save wide csv file.label:Save csv file (trial-by-trial)
SettingsComponent.Save wide csv file.allowedVals:[]
SettingsComponent.Save wide csv file.staticUpdater:None
SettingsComponent.Save wide csv file.val:True
SettingsComponent.Save wide csv file.readOnly:False
SettingsComponent.Save wide csv file.valType:bool
SettingsComponent.Save wide csv file.allowedUpdates:None
SettingsComponent.Save wide csv file.allowedTypes:[]
SettingsComponent.Save wide csv file.categ:Data
SettingsComponent.Save wide csv file.hint:Save data from loops in comma-separated-value (.csv) format for maximum portability
SettingsComponent.Save wide csv file.updates:None
SettingsComponent.Save csv file.default:False
SettingsComponent.Save csv file.label:Save csv file (summaries)
SettingsComponent.Save csv file.allowedVals:[]
SettingsComponent.Save csv file.staticUpdater:None
SettingsComponent.Save csv file.val:False
SettingsComponent.Save csv file.readOnly:False
SettingsComponent.Save csv file.valType:bool
SettingsComponent.Save csv file.allowedUpdates:None
SettingsComponent.Save csv file.allowedTypes:[]
SettingsComponent.Save csv file.categ:Data
SettingsComponent.Save csv file.hint:Save data from loops in comma-separated-value (.csv) format for maximum portability
SettingsComponent.Save csv file.updates:None
SettingsComponent.Save excel file.default:False
SettingsComponent.Save excel file.label:Save excel file
SettingsComponent.Save excel file.allowedVals:[]
SettingsComponent.Save excel file.staticUpdater:None
SettingsComponent.Save excel file.val:False
SettingsComponent.Save excel file.readOnly:False
SettingsComponent.Save excel file.valType:bool
SettingsComponent.Save excel file.allowedUpdates:None
SettingsComponent.Save excel file.allowedTypes:[]
SettingsComponent.Save excel file.categ:Data
SettingsComponent.Save excel file.hint:Save data from loops in Excel (.xlsx) format
SettingsComponent.Save excel file.updates:None
SettingsComponent.Save psydat file.default:True
SettingsComponent.Save psydat file.label:Save psydat file
SettingsComponent.Save psydat file.allowedVals:[True]
SettingsComponent.Save psydat file.staticUpdater:None
SettingsComponent.Save psydat file.val:True
SettingsComponent.Save psydat file.readOnly:False
SettingsComponent.Save psydat file.valType:bool
SettingsComponent.Save psydat file.allowedUpdates:None
SettingsComponent.Save psydat file.allowedTypes:[]
SettingsComponent.Save psydat file.categ:Data
SettingsComponent.Save psydat file.hint:Save data from loops in psydat format. This is useful for python programmers to generate analysis scripts.
SettingsComponent.Save psydat file.updates:None
SettingsComponent.logging level.default:exp
SettingsComponent.logging level.label:Logging level
SettingsComponent.logging level.allowedVals:['error', 'warning', 'data', 'exp', 'info', 'debug']
SettingsComponent.logging level.staticUpdater:None
SettingsComponent.logging level.val:exp
SettingsComponent.logging level.readOnly:False
SettingsComponent.logging level.valType:code
SettingsComponent.logging level.allowedUpdates:None
SettingsComponent.logging level.allowedTypes:[]
SettingsComponent.logging level.categ:Data
SettingsComponent.logging level.hint:How much output do you want in the log files? ('error' is fewest messages, 'debug' is most)
SettingsComponent.logging level.updates:None
SettingsComponent.OSF Project ID.default:''
SettingsComponent.OSF Project ID.label:OSF Project ID
SettingsComponent.OSF Project ID.allowedVals:['']
SettingsComponent.OSF Project ID.staticUpdater:None
SettingsComponent.OSF Project ID.val:
SettingsComponent.OSF Project ID.readOnly:False
SettingsComponent.OSF Project ID.valType:str
SettingsComponent.OSF Project ID.allowedUpdates:None
SettingsComponent.OSF Project ID.allowedTypes:[]
SettingsComponent.OSF Project ID.categ:Online
SettingsComponent.OSF Project ID.hint:The ID of this project (e.g. 5bqpc)
SettingsComponent.OSF Project ID.updates:None
SettingsComponent.HTML path.default:'html'
SettingsComponent.HTML path.label:Output path
SettingsComponent.HTML path.allowedVals:[]
SettingsComponent.HTML path.staticUpdater:None
SettingsComponent.HTML path.val:html
SettingsComponent.HTML path.readOnly:False
SettingsComponent.HTML path.valType:str
SettingsComponent.HTML path.allowedUpdates:None
SettingsComponent.HTML path.allowedTypes:[]
SettingsComponent.HTML path.categ:Online
SettingsComponent.HTML path.hint:Place the HTML files will be saved locally 
SettingsComponent.HTML path.updates:None
SettingsComponent.JS libs.default:'packaged'
SettingsComponent.JS libs.label:JS libs
SettingsComponent.JS libs.allowedVals:['packaged']
SettingsComponent.JS libs.staticUpdater:None
SettingsComponent.JS libs.val:packaged
SettingsComponent.JS libs.readOnly:False
SettingsComponent.JS libs.valType:str
SettingsComponent.JS libs.allowedUpdates:None
SettingsComponent.JS libs.allowedTypes:[]
SettingsComponent.JS libs.categ:Online
SettingsComponent.JS libs.hint:Should we package a copy of the JS libs or useremote copies (http:/www.psychopy.org/js)?
SettingsComponent.JS libs.updates:None
SliderComponent.order:['name', 'size', 'pos', 'ticks', 'labels', 'granularity', 'font', 'flip', 'color', 'styles']
SliderComponent.name.default:slider
SliderComponent.name.label:Name
SliderComponent.name.allowedVals:[]
SliderComponent.name.staticUpdater:None
SliderComponent.name.val:slider
SliderComponent.name.readOnly:False
SliderComponent.name.valType:code
SliderComponent.name.allowedUpdates:None
SliderComponent.name.allowedTypes:[]
SliderComponent.name.categ:Basic
SliderComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
SliderComponent.startType.default:'time (s)'
SliderComponent.startType.label:start type
SliderComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
SliderComponent.startType.staticUpdater:None
SliderComponent.startType.val:time (s)
SliderComponent.startType.readOnly:False
SliderComponent.startType.valType:str
SliderComponent.startType.allowedUpdates:None
SliderComponent.startType.allowedTypes:[]
SliderComponent.startType.categ:Basic
SliderComponent.startType.hint:How do you want to define your start point?
SliderComponent.startType.updates:None
SliderComponent.stopType.default:'condition'
SliderComponent.stopType.label:stop type
SliderComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
SliderComponent.stopType.staticUpdater:None
SliderComponent.stopType.val:condition
SliderComponent.stopType.readOnly:False
SliderComponent.stopType.valType:str
SliderComponent.stopType.allowedUpdates:None
SliderComponent.stopType.allowedTypes:[]
SliderComponent.stopType.categ:Basic
SliderComponent.stopType.hint:How do you want to define your end point?
SliderComponent.stopType.updates:None
SliderComponent.startVal.default:0.0
SliderComponent.startVal.label:Start
SliderComponent.startVal.allowedVals:[]
SliderComponent.startVal.staticUpdater:None
SliderComponent.startVal.val:0.0
SliderComponent.startVal.readOnly:False
SliderComponent.startVal.valType:code
SliderComponent.startVal.allowedUpdates:None
SliderComponent.startVal.allowedTypes:[]
SliderComponent.startVal.categ:Basic
SliderComponent.startVal.hint:When does the component start?
SliderComponent.startVal.updates:None
SliderComponent.stopVal.default:
SliderComponent.stopVal.label:Stop
SliderComponent.stopVal.allowedVals:[]
SliderComponent.stopVal.staticUpdater:None
SliderComponent.stopVal.val:
SliderComponent.stopVal.readOnly:False
SliderComponent.stopVal.valType:code
SliderComponent.stopVal.allowedUpdates:[]
SliderComponent.stopVal.allowedTypes:[]
SliderComponent.stopVal.categ:Basic
SliderComponent.stopVal.hint:When does the component end? (blank is endless)
SliderComponent.stopVal.updates:constant
SliderComponent.startEstim.default:
SliderComponent.startEstim.label:Expected start (s)
SliderComponent.startEstim.allowedVals:[]
SliderComponent.startEstim.staticUpdater:None
SliderComponent.startEstim.val:
SliderComponent.startEstim.readOnly:False
SliderComponent.startEstim.valType:code
SliderComponent.startEstim.allowedUpdates:None
SliderComponent.startEstim.allowedTypes:[]
SliderComponent.startEstim.categ:Basic
SliderComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
SliderComponent.startEstim.updates:None
SliderComponent.durationEstim.default:
SliderComponent.durationEstim.label:Expected duration (s)
SliderComponent.durationEstim.allowedVals:[]
SliderComponent.durationEstim.staticUpdater:None
SliderComponent.durationEstim.val:
SliderComponent.durationEstim.readOnly:False
SliderComponent.durationEstim.valType:code
SliderComponent.durationEstim.allowedUpdates:None
SliderComponent.durationEstim.allowedTypes:[]
SliderComponent.durationEstim.categ:Basic
SliderComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
SliderComponent.durationEstim.updates:None
SliderComponent.units.default:'from exp settings'
SliderComponent.units.label:Units
SliderComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
SliderComponent.units.staticUpdater:None
SliderComponent.units.val:from exp settings
SliderComponent.units.readOnly:False
SliderComponent.units.valType:str
SliderComponent.units.allowedUpdates:None
SliderComponent.units.allowedTypes:[]
SliderComponent.units.categ:Basic
SliderComponent.units.hint:Units of dimensions for this stimulus
SliderComponent.units.updates:None
SliderComponent.color.default:'LightGray'
SliderComponent.color.label:Color
SliderComponent.color.allowedVals:[]
SliderComponent.color.staticUpdater:None
SliderComponent.color.val:LightGray
SliderComponent.color.readOnly:False
SliderComponent.color.valType:str
SliderComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.color.allowedTypes:[]
SliderComponent.color.categ:Appearance
SliderComponent.color.hint:Color of the lines and labels (might beoverridden by the style setting)
SliderComponent.color.updates:constant
SliderComponent.opacity.default:1
SliderComponent.opacity.label:Opacity
SliderComponent.opacity.allowedVals:[]
SliderComponent.opacity.staticUpdater:None
SliderComponent.opacity.val:1
SliderComponent.opacity.readOnly:False
SliderComponent.opacity.valType:code
SliderComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.opacity.allowedTypes:[]
SliderComponent.opacity.categ:Basic
SliderComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
SliderComponent.opacity.updates:constant
SliderComponent.colorSpace.default:'rgb'
SliderComponent.colorSpace.label:Color space
SliderComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
SliderComponent.colorSpace.staticUpdater:None
SliderComponent.colorSpace.val:rgb
SliderComponent.colorSpace.readOnly:False
SliderComponent.colorSpace.valType:str
SliderComponent.colorSpace.allowedUpdates:None
SliderComponent.colorSpace.allowedTypes:[]
SliderComponent.colorSpace.categ:Basic
SliderComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
SliderComponent.colorSpace.updates:constant
SliderComponent.pos.default:(0, -0.4)
SliderComponent.pos.label:Position [x,y]
SliderComponent.pos.allowedVals:[]
SliderComponent.pos.staticUpdater:None
SliderComponent.pos.val:(0, -0.4)
SliderComponent.pos.readOnly:False
SliderComponent.pos.valType:code
SliderComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.pos.allowedTypes:[]
SliderComponent.pos.categ:Basic
SliderComponent.pos.hint:x,y position on the screen
SliderComponent.pos.updates:constant
SliderComponent.size.default:(1.0, 0.1)
SliderComponent.size.label:Size
SliderComponent.size.allowedVals:[]
SliderComponent.size.staticUpdater:None
SliderComponent.size.val:(1.0, 0.1)
SliderComponent.size.readOnly:False
SliderComponent.size.valType:code
SliderComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.size.allowedTypes:[]
SliderComponent.size.categ:Basic
SliderComponent.size.hint:Size on screen. e.g. (500,10) pix for horizontal,(10,500) pix for vertical
SliderComponent.size.updates:constant
SliderComponent.ori.default:0
SliderComponent.ori.label:Orientation
SliderComponent.ori.allowedVals:[]
SliderComponent.ori.staticUpdater:None
SliderComponent.ori.val:0
SliderComponent.ori.readOnly:False
SliderComponent.ori.valType:code
SliderComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.ori.allowedTypes:[]
SliderComponent.ori.categ:Basic
SliderComponent.ori.hint:Orientation of this stimulus (in deg)
SliderComponent.ori.updates:constant
SliderComponent.ticks.default:(1, 2, 3, 4, 5)
SliderComponent.ticks.label:Ticks
SliderComponent.ticks.allowedVals:[]
SliderComponent.ticks.staticUpdater:None
SliderComponent.ticks.val:(1, 2, 3, 4, 5)
SliderComponent.ticks.readOnly:False
SliderComponent.ticks.valType:list
SliderComponent.ticks.allowedUpdates:['constant', 'set every repeat']
SliderComponent.ticks.allowedTypes:[]
SliderComponent.ticks.categ:Basic
SliderComponent.ticks.hint:Tick positions (numerical) on the scale, separated by commas
SliderComponent.ticks.updates:constant
SliderComponent.labels.default:[]
SliderComponent.labels.label:Labels
SliderComponent.labels.allowedVals:[]
SliderComponent.labels.staticUpdater:None
SliderComponent.labels.val:
SliderComponent.labels.readOnly:False
SliderComponent.labels.valType:list
SliderComponent.labels.allowedUpdates:['constant', 'set every repeat']
SliderComponent.labels.allowedTypes:[]
SliderComponent.labels.categ:Basic
SliderComponent.labels.hint:Labels for the tick marks on the scale, separated by commas
SliderComponent.labels.updates:constant
SliderComponent.granularity.default:0
SliderComponent.granularity.label:Granularity
SliderComponent.granularity.allowedVals:[]
SliderComponent.granularity.staticUpdater:None
SliderComponent.granularity.val:0
SliderComponent.granularity.readOnly:False
SliderComponent.granularity.valType:code
SliderComponent.granularity.allowedUpdates:['constant', 'set every repeat']
SliderComponent.granularity.allowedTypes:[]
SliderComponent.granularity.categ:Basic
SliderComponent.granularity.hint:Specifies the minimum step size (0 for a continuous scale, 1 for integer rating scale)
SliderComponent.granularity.updates:constant
SliderComponent.forceEndRoutine.default:True
SliderComponent.forceEndRoutine.label:Force end of Routine
SliderComponent.forceEndRoutine.allowedVals:[]
SliderComponent.forceEndRoutine.staticUpdater:None
SliderComponent.forceEndRoutine.val:True
SliderComponent.forceEndRoutine.readOnly:False
SliderComponent.forceEndRoutine.valType:bool
SliderComponent.forceEndRoutine.allowedUpdates:[]
SliderComponent.forceEndRoutine.allowedTypes:[]
SliderComponent.forceEndRoutine.categ:Basic
SliderComponent.forceEndRoutine.hint:Should setting a rating (releasing the mouse) cause the end of the routine (e.g. trial)?
SliderComponent.forceEndRoutine.updates:constant
SliderComponent.flip.default:False
SliderComponent.flip.label:Flip
SliderComponent.flip.allowedVals:[]
SliderComponent.flip.staticUpdater:None
SliderComponent.flip.val:False
SliderComponent.flip.readOnly:False
SliderComponent.flip.valType:bool
SliderComponent.flip.allowedUpdates:[]
SliderComponent.flip.allowedTypes:[]
SliderComponent.flip.categ:Appearance
SliderComponent.flip.hint:By default the labels will be on the bottom or left of the scale, but this can bee flipped to the other side.
SliderComponent.flip.updates:constant
SliderComponent.font.default:'HelveticaBold'
SliderComponent.font.label:Font
SliderComponent.font.allowedVals:[]
SliderComponent.font.staticUpdater:None
SliderComponent.font.val:HelveticaBold
SliderComponent.font.readOnly:False
SliderComponent.font.valType:str
SliderComponent.font.allowedUpdates:['constant', 'set every repeat']
SliderComponent.font.allowedTypes:[]
SliderComponent.font.categ:Appearance
SliderComponent.font.hint:Font for the labels
SliderComponent.font.updates:constant
SliderComponent.styles.default:['rating']
SliderComponent.styles.label:Styles
SliderComponent.styles.allowedVals:['slider', 'rating', 'labels45', 'whiteOnBlack', 'triangleMarker']
SliderComponent.styles.staticUpdater:None
SliderComponent.styles.val:['rating']
SliderComponent.styles.readOnly:False
SliderComponent.styles.valType:fixedList
SliderComponent.styles.allowedUpdates:None
SliderComponent.styles.allowedTypes:[]
SliderComponent.styles.categ:Appearance
SliderComponent.styles.hint:Styles determine the appearance of the slider
SliderComponent.styles.updates:constant
SliderComponent.storeRating.default:True
SliderComponent.storeRating.label:Store rating
SliderComponent.storeRating.allowedVals:[]
SliderComponent.storeRating.staticUpdater:None
SliderComponent.storeRating.val:True
SliderComponent.storeRating.readOnly:False
SliderComponent.storeRating.valType:bool
SliderComponent.storeRating.allowedUpdates:[]
SliderComponent.storeRating.allowedTypes:[]
SliderComponent.storeRating.categ:Data
SliderComponent.storeRating.hint:store the rating
SliderComponent.storeRating.updates:constant
SliderComponent.storeRatingTime.default:True
SliderComponent.storeRatingTime.label:Store rating time
SliderComponent.storeRatingTime.allowedVals:[]
SliderComponent.storeRatingTime.staticUpdater:None
SliderComponent.storeRatingTime.val:True
SliderComponent.storeRatingTime.readOnly:False
SliderComponent.storeRatingTime.valType:bool
SliderComponent.storeRatingTime.allowedUpdates:[]
SliderComponent.storeRatingTime.allowedTypes:[]
SliderComponent.storeRatingTime.categ:Data
SliderComponent.storeRatingTime.hint:Store the time taken to make the choice (in seconds)
SliderComponent.storeRatingTime.updates:constant
SliderComponent.storeHistory.default:False
SliderComponent.storeHistory.label:Store history
SliderComponent.storeHistory.allowedVals:[]
SliderComponent.storeHistory.staticUpdater:None
SliderComponent.storeHistory.val:False
SliderComponent.storeHistory.readOnly:False
SliderComponent.storeHistory.valType:bool
SliderComponent.storeHistory.allowedUpdates:[]
SliderComponent.storeHistory.allowedTypes:[]
SliderComponent.storeHistory.categ:Data
SliderComponent.storeHistory.hint:store the history of (selection, time)
SliderComponent.storeHistory.updates:constant
SoundComponent.order:['sound', 'volume']
SoundComponent.name.default:sound_1
SoundComponent.name.label:Name
SoundComponent.name.allowedVals:[]
SoundComponent.name.staticUpdater:None
SoundComponent.name.val:sound_1
SoundComponent.name.readOnly:False
SoundComponent.name.valType:code
SoundComponent.name.allowedUpdates:None
SoundComponent.name.allowedTypes:[]
SoundComponent.name.categ:Basic
SoundComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
SoundComponent.startType.default:'time (s)'
SoundComponent.startType.label:start type
SoundComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
SoundComponent.startType.staticUpdater:None
SoundComponent.startType.val:time (s)
SoundComponent.startType.readOnly:False
SoundComponent.startType.valType:str
SoundComponent.startType.allowedUpdates:None
SoundComponent.startType.allowedTypes:[]
SoundComponent.startType.categ:Basic
SoundComponent.startType.hint:How do you want to define your start point?
SoundComponent.startType.updates:None
SoundComponent.stopType.default:'duration (s)'
SoundComponent.stopType.label:stop type
SoundComponent.stopType.allowedVals:['duration (s)']
SoundComponent.stopType.staticUpdater:None
SoundComponent.stopType.val:duration (s)
SoundComponent.stopType.readOnly:False
SoundComponent.stopType.valType:str
SoundComponent.stopType.allowedUpdates:None
SoundComponent.stopType.allowedTypes:[]
SoundComponent.stopType.categ:Basic
SoundComponent.stopType.hint:The maximum duration of a sound in seconds
SoundComponent.stopType.updates:None
SoundComponent.startVal.default:0.0
SoundComponent.startVal.label:Start
SoundComponent.startVal.allowedVals:[]
SoundComponent.startVal.staticUpdater:None
SoundComponent.startVal.val:0.0
SoundComponent.startVal.readOnly:False
SoundComponent.startVal.valType:code
SoundComponent.startVal.allowedUpdates:None
SoundComponent.startVal.allowedTypes:[]
SoundComponent.startVal.categ:Basic
SoundComponent.startVal.hint:When does the component start?
SoundComponent.startVal.updates:None
SoundComponent.stopVal.default:1.0
SoundComponent.stopVal.label:Stop
SoundComponent.stopVal.allowedVals:[]
SoundComponent.stopVal.staticUpdater:None
SoundComponent.stopVal.val:1.0
SoundComponent.stopVal.readOnly:False
SoundComponent.stopVal.valType:code
SoundComponent.stopVal.allowedUpdates:[]
SoundComponent.stopVal.allowedTypes:[]
SoundComponent.stopVal.categ:Basic
SoundComponent.stopVal.hint:When does the component end? (blank to use the duration of the media)
SoundComponent.stopVal.updates:constant
SoundComponent.startEstim.default:
SoundComponent.startEstim.label:Expected start (s)
SoundComponent.startEstim.allowedVals:[]
SoundComponent.startEstim.staticUpdater:None
SoundComponent.startEstim.val:
SoundComponent.startEstim.readOnly:False
SoundComponent.startEstim.valType:code
SoundComponent.startEstim.allowedUpdates:None
SoundComponent.startEstim.allowedTypes:[]
SoundComponent.startEstim.categ:Basic
SoundComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
SoundComponent.startEstim.updates:None
SoundComponent.durationEstim.default:
SoundComponent.durationEstim.label:Expected duration (s)
SoundComponent.durationEstim.allowedVals:[]
SoundComponent.durationEstim.staticUpdater:None
SoundComponent.durationEstim.val:
SoundComponent.durationEstim.readOnly:False
SoundComponent.durationEstim.valType:code
SoundComponent.durationEstim.allowedUpdates:None
SoundComponent.durationEstim.allowedTypes:[]
SoundComponent.durationEstim.categ:Basic
SoundComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
SoundComponent.durationEstim.updates:None
SoundComponent.sound.default:'A'
SoundComponent.sound.label:Sound
SoundComponent.sound.allowedVals:[]
SoundComponent.sound.staticUpdater:None
SoundComponent.sound.val:A
SoundComponent.sound.readOnly:False
SoundComponent.sound.valType:str
SoundComponent.sound.allowedUpdates:['constant', 'set every repeat']
SoundComponent.sound.allowedTypes:[]
SoundComponent.sound.categ:Basic
SoundComponent.sound.hint:A sound can be a note name (e.g. A or Bf), a number to specify Hz (e.g. 440) or a filename
SoundComponent.sound.updates:constant
SoundComponent.volume.default:1
SoundComponent.volume.label:Volume
SoundComponent.volume.allowedVals:[]
SoundComponent.volume.staticUpdater:None
SoundComponent.volume.val:1
SoundComponent.volume.readOnly:False
SoundComponent.volume.valType:code
SoundComponent.volume.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SoundComponent.volume.allowedTypes:[]
SoundComponent.volume.categ:Basic
SoundComponent.volume.hint:The volume (in range 0 to 1)
SoundComponent.volume.updates:constant
SoundComponent.syncScreenRefresh.default:True
SoundComponent.syncScreenRefresh.label:sync RT with screen
SoundComponent.syncScreenRefresh.allowedVals:[]
SoundComponent.syncScreenRefresh.staticUpdater:None
SoundComponent.syncScreenRefresh.val:True
SoundComponent.syncScreenRefresh.readOnly:False
SoundComponent.syncScreenRefresh.valType:bool
SoundComponent.syncScreenRefresh.allowedUpdates:None
SoundComponent.syncScreenRefresh.allowedTypes:[]
SoundComponent.syncScreenRefresh.categ:Basic
SoundComponent.syncScreenRefresh.hint:A reaction time to a sound stimulus should be based on when the screen flipped
SoundComponent.syncScreenRefresh.updates:constant
StaticComponent.order:['name']
StaticComponent.name.default:ISI
StaticComponent.name.label:Name
StaticComponent.name.allowedVals:[]
StaticComponent.name.staticUpdater:None
StaticComponent.name.val:ISI
StaticComponent.name.readOnly:False
StaticComponent.name.valType:code
StaticComponent.name.allowedUpdates:None
StaticComponent.name.allowedTypes:[]
StaticComponent.name.categ:Basic
StaticComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
StaticComponent.startType.default:'time (s)'
StaticComponent.startType.label:
StaticComponent.startType.allowedVals:['time (s)', 'frame N']
StaticComponent.startType.staticUpdater:None
StaticComponent.startType.val:time (s)
StaticComponent.startType.readOnly:False
StaticComponent.startType.valType:str
StaticComponent.startType.allowedUpdates:None
StaticComponent.startType.allowedTypes:[]
StaticComponent.startType.categ:Basic
StaticComponent.startType.hint:How do you want to define your start point?
StaticComponent.startType.updates:None
StaticComponent.stopType.default:'duration (s)'
StaticComponent.stopType.label:
StaticComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N']
StaticComponent.stopType.staticUpdater:None
StaticComponent.stopType.val:duration (s)
StaticComponent.stopType.readOnly:False
StaticComponent.stopType.valType:str
StaticComponent.stopType.allowedUpdates:None
StaticComponent.stopType.allowedTypes:[]
StaticComponent.stopType.categ:Basic
StaticComponent.stopType.hint:How do you want to define your end point?
StaticComponent.stopType.updates:None
StaticComponent.startVal.default:0.0
StaticComponent.startVal.label:
StaticComponent.startVal.allowedVals:[]
StaticComponent.startVal.staticUpdater:None
StaticComponent.startVal.val:0.0
StaticComponent.startVal.readOnly:False
StaticComponent.startVal.valType:code
StaticComponent.startVal.allowedUpdates:None
StaticComponent.startVal.allowedTypes:[]
StaticComponent.startVal.categ:Basic
StaticComponent.startVal.hint:When does the component start?
StaticComponent.startVal.updates:None
StaticComponent.stopVal.default:0.5
StaticComponent.stopVal.label:
StaticComponent.stopVal.allowedVals:[]
StaticComponent.stopVal.staticUpdater:None
StaticComponent.stopVal.val:0.5
StaticComponent.stopVal.readOnly:False
StaticComponent.stopVal.valType:code
StaticComponent.stopVal.allowedUpdates:[]
StaticComponent.stopVal.allowedTypes:[]
StaticComponent.stopVal.categ:Basic
StaticComponent.stopVal.hint:When does the component end? (blank is endless)
StaticComponent.stopVal.updates:constant
StaticComponent.startEstim.default:
StaticComponent.startEstim.label:
StaticComponent.startEstim.allowedVals:[]
StaticComponent.startEstim.staticUpdater:None
StaticComponent.startEstim.val:
StaticComponent.startEstim.readOnly:False
StaticComponent.startEstim.valType:code
StaticComponent.startEstim.allowedUpdates:None
StaticComponent.startEstim.allowedTypes:[]
StaticComponent.startEstim.categ:Basic
StaticComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
StaticComponent.startEstim.updates:None
StaticComponent.durationEstim.default:
StaticComponent.durationEstim.label:
StaticComponent.durationEstim.allowedVals:[]
StaticComponent.durationEstim.staticUpdater:None
StaticComponent.durationEstim.val:
StaticComponent.durationEstim.readOnly:False
StaticComponent.durationEstim.valType:code
StaticComponent.durationEstim.allowedUpdates:None
StaticComponent.durationEstim.allowedTypes:[]
StaticComponent.durationEstim.categ:Basic
StaticComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
StaticComponent.durationEstim.updates:None
StaticComponent.code.default:
StaticComponent.code.label:Custom code
StaticComponent.code.allowedVals:[]
StaticComponent.code.staticUpdater:None
StaticComponent.code.val:
StaticComponent.code.readOnly:False
StaticComponent.code.valType:code
StaticComponent.code.allowedUpdates:None
StaticComponent.code.allowedTypes:[]
StaticComponent.code.categ:Basic
StaticComponent.code.hint:Custom code to be run during the static period (after updates)
StaticComponent.code.updates:None
TextComponent.order:['name']
TextComponent.name.default:text
TextComponent.name.label:Name
TextComponent.name.allowedVals:[]
TextComponent.name.staticUpdater:None
TextComponent.name.val:text
TextComponent.name.readOnly:False
TextComponent.name.valType:code
TextComponent.name.allowedUpdates:None
TextComponent.name.allowedTypes:[]
TextComponent.name.categ:Basic
TextComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
TextComponent.startType.default:'time (s)'
TextComponent.startType.label:start type
TextComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
TextComponent.startType.staticUpdater:None
TextComponent.startType.val:time (s)
TextComponent.startType.readOnly:False
TextComponent.startType.valType:str
TextComponent.startType.allowedUpdates:None
TextComponent.startType.allowedTypes:[]
TextComponent.startType.categ:Basic
TextComponent.startType.hint:How do you want to define your start point?
TextComponent.startType.updates:None
TextComponent.stopType.default:'duration (s)'
TextComponent.stopType.label:stop type
TextComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
TextComponent.stopType.staticUpdater:None
TextComponent.stopType.val:duration (s)
TextComponent.stopType.readOnly:False
TextComponent.stopType.valType:str
TextComponent.stopType.allowedUpdates:None
TextComponent.stopType.allowedTypes:[]
TextComponent.stopType.categ:Basic
TextComponent.stopType.hint:How do you want to define your end point?
TextComponent.stopType.updates:None
TextComponent.startVal.default:0.0
TextComponent.startVal.label:Start
TextComponent.startVal.allowedVals:[]
TextComponent.startVal.staticUpdater:None
TextComponent.startVal.val:0.0
TextComponent.startVal.readOnly:False
TextComponent.startVal.valType:code
TextComponent.startVal.allowedUpdates:None
TextComponent.startVal.allowedTypes:[]
TextComponent.startVal.categ:Basic
TextComponent.startVal.hint:When does the component start?
TextComponent.startVal.updates:None
TextComponent.stopVal.default:1.0
TextComponent.stopVal.label:Stop
TextComponent.stopVal.allowedVals:[]
TextComponent.stopVal.staticUpdater:None
TextComponent.stopVal.val:1.0
TextComponent.stopVal.readOnly:False
TextComponent.stopVal.valType:code
TextComponent.stopVal.allowedUpdates:[]
TextComponent.stopVal.allowedTypes:[]
TextComponent.stopVal.categ:Basic
TextComponent.stopVal.hint:When does the component end? (blank is endless)
TextComponent.stopVal.updates:constant
TextComponent.startEstim.default:
TextComponent.startEstim.label:Expected start (s)
TextComponent.startEstim.allowedVals:[]
TextComponent.startEstim.staticUpdater:None
TextComponent.startEstim.val:
TextComponent.startEstim.readOnly:False
TextComponent.startEstim.valType:code
TextComponent.startEstim.allowedUpdates:None
TextComponent.startEstim.allowedTypes:[]
TextComponent.startEstim.categ:Basic
TextComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
TextComponent.startEstim.updates:None
TextComponent.durationEstim.default:
TextComponent.durationEstim.label:Expected duration (s)
TextComponent.durationEstim.allowedVals:[]
TextComponent.durationEstim.staticUpdater:None
TextComponent.durationEstim.val:
TextComponent.durationEstim.readOnly:False
TextComponent.durationEstim.valType:code
TextComponent.durationEstim.allowedUpdates:None
TextComponent.durationEstim.allowedTypes:[]
TextComponent.durationEstim.categ:Basic
TextComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
TextComponent.durationEstim.updates:None
TextComponent.units.default:'from exp settings'
TextComponent.units.label:Units
TextComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
TextComponent.units.staticUpdater:None
TextComponent.units.val:from exp settings
TextComponent.units.readOnly:False
TextComponent.units.valType:str
TextComponent.units.allowedUpdates:None
TextComponent.units.allowedTypes:[]
TextComponent.units.categ:Advanced
TextComponent.units.hint:Units of dimensions for this stimulus
TextComponent.units.updates:None
TextComponent.color.default:'white'
TextComponent.color.label:Color
TextComponent.color.allowedVals:[]
TextComponent.color.staticUpdater:None
TextComponent.color.val:white
TextComponent.color.readOnly:False
TextComponent.color.valType:str
TextComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.color.allowedTypes:[]
TextComponent.color.categ:Basic
TextComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
TextComponent.color.updates:constant
TextComponent.opacity.default:1
TextComponent.opacity.label:Opacity
TextComponent.opacity.allowedVals:[]
TextComponent.opacity.staticUpdater:None
TextComponent.opacity.val:1
TextComponent.opacity.readOnly:False
TextComponent.opacity.valType:code
TextComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.opacity.allowedTypes:[]
TextComponent.opacity.categ:Advanced
TextComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
TextComponent.opacity.updates:constant
TextComponent.colorSpace.default:'rgb'
TextComponent.colorSpace.label:Color space
TextComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
TextComponent.colorSpace.staticUpdater:None
TextComponent.colorSpace.val:rgb
TextComponent.colorSpace.readOnly:False
TextComponent.colorSpace.valType:str
TextComponent.colorSpace.allowedUpdates:None
TextComponent.colorSpace.allowedTypes:[]
TextComponent.colorSpace.categ:Advanced
TextComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
TextComponent.colorSpace.updates:constant
TextComponent.pos.default:(0, 0)
TextComponent.pos.label:Position [x,y]
TextComponent.pos.allowedVals:[]
TextComponent.pos.staticUpdater:None
TextComponent.pos.val:(0, 0)
TextComponent.pos.readOnly:False
TextComponent.pos.valType:code
TextComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.pos.allowedTypes:[]
TextComponent.pos.categ:Basic
TextComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
TextComponent.pos.updates:constant
TextComponent.ori.default:0
TextComponent.ori.label:Orientation
TextComponent.ori.allowedVals:[]
TextComponent.ori.staticUpdater:None
TextComponent.ori.val:0
TextComponent.ori.readOnly:False
TextComponent.ori.valType:code
TextComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.ori.allowedTypes:[]
TextComponent.ori.categ:Advanced
TextComponent.ori.hint:Orientation of this stimulus (in deg)
TextComponent.ori.updates:constant
TextComponent.text.default:'Any text\n\nincluding line breaks'
TextComponent.text.label:Text
TextComponent.text.allowedVals:[]
TextComponent.text.staticUpdater:None
TextComponent.text.val:Any text

including line breaks
TextComponent.text.readOnly:False
TextComponent.text.valType:str
TextComponent.text.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.text.allowedTypes:[]
TextComponent.text.categ:Basic
TextComponent.text.hint:The text to be displayed
TextComponent.text.updates:constant
TextComponent.font.default:'Arial'
TextComponent.font.label:Font
TextComponent.font.allowedVals:[]
TextComponent.font.staticUpdater:None
TextComponent.font.val:Arial
TextComponent.font.readOnly:False
TextComponent.font.valType:str
TextComponent.font.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.font.allowedTypes:[]
TextComponent.font.categ:Basic
TextComponent.font.hint:The font name (e.g. Comic Sans)
TextComponent.font.updates:constant
TextComponent.letterHeight.default:0.1
TextComponent.letterHeight.label:Letter height
TextComponent.letterHeight.allowedVals:[]
TextComponent.letterHeight.staticUpdater:None
TextComponent.letterHeight.val:0.1
TextComponent.letterHeight.readOnly:False
TextComponent.letterHeight.valType:code
TextComponent.letterHeight.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.letterHeight.allowedTypes:[]
TextComponent.letterHeight.categ:Basic
TextComponent.letterHeight.hint:Specifies the height of the letter (the width is then determined by the font)
TextComponent.letterHeight.updates:constant
TextComponent.wrapWidth.default:
TextComponent.wrapWidth.label:Wrap width
TextComponent.wrapWidth.allowedVals:[]
TextComponent.wrapWidth.staticUpdater:None
TextComponent.wrapWidth.val:
TextComponent.wrapWidth.readOnly:False
TextComponent.wrapWidth.valType:code
TextComponent.wrapWidth.allowedUpdates:['constant']
TextComponent.wrapWidth.allowedTypes:[]
TextComponent.wrapWidth.categ:Advanced
TextComponent.wrapWidth.hint:How wide should the text get when it wraps? (in the specified units)
TextComponent.wrapWidth.updates:constant
TextComponent.flip.default:''
TextComponent.flip.label:Flip (mirror)
TextComponent.flip.allowedVals:[]
TextComponent.flip.staticUpdater:None
TextComponent.flip.val:
TextComponent.flip.readOnly:False
TextComponent.flip.valType:str
TextComponent.flip.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.flip.allowedTypes:[]
TextComponent.flip.categ:Advanced
TextComponent.flip.hint:horiz = left-right reversed; vert = up-down reversed; $var = variable
TextComponent.flip.updates:constant
UnknownComponent.order:['name']
UnknownComponent.name.default:
UnknownComponent.name.label:Name
UnknownComponent.name.allowedVals:[]
UnknownComponent.name.staticUpdater:None
UnknownComponent.name.val:
UnknownComponent.name.readOnly:False
UnknownComponent.name.valType:code
UnknownComponent.name.allowedUpdates:None
UnknownComponent.name.allowedTypes:[]
UnknownComponent.name.categ:Basic
UnknownComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
VariableComponent.order:['name', 'startExpValue', 'saveStartExp', 'startRoutineValue', 'saveStartRoutine', 'startFrameValue', 'saveFrameValue', 'saveEndRoutine', 'saveEndExp']
VariableComponent.name.default:var1
VariableComponent.name.label:Name
VariableComponent.name.allowedVals:[]
VariableComponent.name.staticUpdater:None
VariableComponent.name.val:var1
VariableComponent.name.readOnly:False
VariableComponent.name.valType:code
VariableComponent.name.allowedUpdates:None
VariableComponent.name.allowedTypes:[]
VariableComponent.name.categ:Basic
VariableComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
VariableComponent.startType.default:'time (s)'
VariableComponent.startType.label:start type
VariableComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
VariableComponent.startType.staticUpdater:None
VariableComponent.startType.val:time (s)
VariableComponent.startType.readOnly:False
VariableComponent.startType.valType:str
VariableComponent.startType.allowedUpdates:None
VariableComponent.startType.allowedTypes:[]
VariableComponent.startType.categ:Basic
VariableComponent.startType.hint:How do you want to define your start point?
VariableComponent.startType.updates:None
VariableComponent.stopType.default:'duration (s)'
VariableComponent.stopType.label:stop type
VariableComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
VariableComponent.stopType.staticUpdater:None
VariableComponent.stopType.val:duration (s)
VariableComponent.stopType.readOnly:False
VariableComponent.stopType.valType:str
VariableComponent.stopType.allowedUpdates:None
VariableComponent.stopType.allowedTypes:[]
VariableComponent.stopType.categ:Basic
VariableComponent.stopType.hint:How do you want to define your end point?
VariableComponent.stopType.updates:None
VariableComponent.startVal.default:
VariableComponent.startVal.label:Start
VariableComponent.startVal.allowedVals:[]
VariableComponent.startVal.staticUpdater:None
VariableComponent.startVal.val:
VariableComponent.startVal.readOnly:False
VariableComponent.startVal.valType:code
VariableComponent.startVal.allowedUpdates:None
VariableComponent.startVal.allowedTypes:[]
VariableComponent.startVal.categ:Basic
VariableComponent.startVal.hint:When does the component start?
VariableComponent.startVal.updates:None
VariableComponent.stopVal.default:
VariableComponent.stopVal.label:Stop
VariableComponent.stopVal.allowedVals:[]
VariableComponent.stopVal.staticUpdater:None
VariableComponent.stopVal.val:
VariableComponent.stopVal.readOnly:False
VariableComponent.stopVal.valType:code
VariableComponent.stopVal.allowedUpdates:[]
VariableComponent.stopVal.allowedTypes:[]
VariableComponent.stopVal.categ:Basic
VariableComponent.stopVal.hint:When does the component end? (blank is endless)
VariableComponent.stopVal.updates:constant
VariableComponent.startEstim.default:
VariableComponent.startEstim.label:Expected start (s)
VariableComponent.startEstim.allowedVals:[]
VariableComponent.startEstim.staticUpdater:None
VariableComponent.startEstim.val:
VariableComponent.startEstim.readOnly:False
VariableComponent.startEstim.valType:code
VariableComponent.startEstim.allowedUpdates:None
VariableComponent.startEstim.allowedTypes:[]
VariableComponent.startEstim.categ:Basic
VariableComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
VariableComponent.startEstim.updates:None
VariableComponent.durationEstim.default:
VariableComponent.durationEstim.label:Expected duration (s)
VariableComponent.durationEstim.allowedVals:[]
VariableComponent.durationEstim.staticUpdater:None
VariableComponent.durationEstim.val:
VariableComponent.durationEstim.readOnly:False
VariableComponent.durationEstim.valType:code
VariableComponent.durationEstim.allowedUpdates:None
VariableComponent.durationEstim.allowedTypes:[]
VariableComponent.durationEstim.categ:Basic
VariableComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
VariableComponent.durationEstim.updates:None
VariableComponent.startExpValue.default:
VariableComponent.startExpValue.label:Experiment start value
VariableComponent.startExpValue.allowedVals:[]
VariableComponent.startExpValue.staticUpdater:None
VariableComponent.startExpValue.val:
VariableComponent.startExpValue.readOnly:False
VariableComponent.startExpValue.valType:code
VariableComponent.startExpValue.allowedUpdates:None
VariableComponent.startExpValue.allowedTypes:[]
VariableComponent.startExpValue.categ:Basic
VariableComponent.startExpValue.hint:The start value. A variable can be set to any value.
VariableComponent.startExpValue.updates:constant
VariableComponent.startRoutineValue.default:
VariableComponent.startRoutineValue.label:Routine start value
VariableComponent.startRoutineValue.allowedVals:[]
VariableComponent.startRoutineValue.staticUpdater:None
VariableComponent.startRoutineValue.val:
VariableComponent.startRoutineValue.readOnly:False
VariableComponent.startRoutineValue.valType:code
VariableComponent.startRoutineValue.allowedUpdates:None
VariableComponent.startRoutineValue.allowedTypes:[]
VariableComponent.startRoutineValue.categ:Basic
VariableComponent.startRoutineValue.hint:Set the value for the beginning of each routine.
VariableComponent.startRoutineValue.updates:constant
VariableComponent.startFrameValue.default:
VariableComponent.startFrameValue.label:Frame start value
VariableComponent.startFrameValue.allowedVals:[]
VariableComponent.startFrameValue.staticUpdater:None
VariableComponent.startFrameValue.val:
VariableComponent.startFrameValue.readOnly:False
VariableComponent.startFrameValue.valType:code
VariableComponent.startFrameValue.allowedUpdates:None
VariableComponent.startFrameValue.allowedTypes:[]
VariableComponent.startFrameValue.categ:Basic
VariableComponent.startFrameValue.hint:Set the value for the beginning of every screen refresh.
VariableComponent.startFrameValue.updates:None
VariableComponent.saveStartExp.default:False
VariableComponent.saveStartExp.label:Save exp start value
VariableComponent.saveStartExp.allowedVals:[]
VariableComponent.saveStartExp.staticUpdater:None
VariableComponent.saveStartExp.val:False
VariableComponent.saveStartExp.readOnly:False
VariableComponent.saveStartExp.valType:bool
VariableComponent.saveStartExp.allowedUpdates:None
VariableComponent.saveStartExp.allowedTypes:[]
VariableComponent.saveStartExp.categ:Save
VariableComponent.saveStartExp.hint:Save the experiment start value in data file.
VariableComponent.saveStartExp.updates:constant
VariableComponent.saveEndExp.default:False
VariableComponent.saveEndExp.label:Save exp end value
VariableComponent.saveEndExp.allowedVals:[]
VariableComponent.saveEndExp.staticUpdater:None
VariableComponent.saveEndExp.val:False
VariableComponent.saveEndExp.readOnly:False
VariableComponent.saveEndExp.valType:bool
VariableComponent.saveEndExp.allowedUpdates:None
VariableComponent.saveEndExp.allowedTypes:[]
VariableComponent.saveEndExp.categ:Save
VariableComponent.saveEndExp.hint:Save the experiment end value in data file.
VariableComponent.saveEndExp.updates:constant
VariableComponent.saveStartRoutine.default:False
VariableComponent.saveStartRoutine.label:Save routine start value
VariableComponent.saveStartRoutine.allowedVals:[]
VariableComponent.saveStartRoutine.staticUpdater:None
VariableComponent.saveStartRoutine.val:False
VariableComponent.saveStartRoutine.readOnly:False
VariableComponent.saveStartRoutine.valType:bool
VariableComponent.saveStartRoutine.allowedUpdates:None
VariableComponent.saveStartRoutine.allowedTypes:[]
VariableComponent.saveStartRoutine.categ:Save
VariableComponent.saveStartRoutine.hint:Save the routine start value in data file.
VariableComponent.saveStartRoutine.updates:constant
VariableComponent.saveEndRoutine.default:True
VariableComponent.saveEndRoutine.label:Save routine end value
VariableComponent.saveEndRoutine.allowedVals:[]
VariableComponent.saveEndRoutine.staticUpdater:None
VariableComponent.saveEndRoutine.val:True
VariableComponent.saveEndRoutine.readOnly:False
VariableComponent.saveEndRoutine.valType:bool
VariableComponent.saveEndRoutine.allowedUpdates:None
VariableComponent.saveEndRoutine.allowedTypes:[]
VariableComponent.saveEndRoutine.categ:Save
VariableComponent.saveEndRoutine.hint:Save the routine end value in data file.
VariableComponent.saveEndRoutine.updates:constant
VariableComponent.saveFrameValue.default:'never'
VariableComponent.saveFrameValue.label:Save frame value
VariableComponent.saveFrameValue.allowedVals:['first', 'last', 'all', 'never']
VariableComponent.saveFrameValue.staticUpdater:None
VariableComponent.saveFrameValue.val:never
VariableComponent.saveFrameValue.readOnly:False
VariableComponent.saveFrameValue.valType:str
VariableComponent.saveFrameValue.allowedUpdates:None
VariableComponent.saveFrameValue.allowedTypes:[]
VariableComponent.saveFrameValue.categ:Save
VariableComponent.saveFrameValue.hint:Save choice of frame value in data file.
VariableComponent.saveFrameValue.updates:constant
cedrusButtonBoxComponent.order:['forceEndRoutine', 'allowedKeys', 'store', 'storeCorrect', 'correctAns']
cedrusButtonBoxComponent.name.default:buttonBox
cedrusButtonBoxComponent.name.label:Name
cedrusButtonBoxComponent.name.allowedVals:[]
cedrusButtonBoxComponent.name.staticUpdater:None
cedrusButtonBoxComponent.name.val:buttonBox
cedrusButtonBoxComponent.name.readOnly:False
cedrusButtonBoxComponent.name.valType:code
cedrusButtonBoxComponent.name.allowedUpdates:None
cedrusButtonBoxComponent.name.allowedTypes:[]
cedrusButtonBoxComponent.name.categ:Basic
cedrusButtonBoxComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
cedrusButtonBoxComponent.startType.default:'time (s)'
cedrusButtonBoxComponent.startType.label:start type
cedrusButtonBoxComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
cedrusButtonBoxComponent.startType.staticUpdater:None
cedrusButtonBoxComponent.startType.val:time (s)
cedrusButtonBoxComponent.startType.readOnly:False
cedrusButtonBoxComponent.startType.valType:str
cedrusButtonBoxComponent.startType.allowedUpdates:None
cedrusButtonBoxComponent.startType.allowedTypes:[]
cedrusButtonBoxComponent.startType.categ:Basic
cedrusButtonBoxComponent.startType.hint:How do you want to define your start point?
cedrusButtonBoxComponent.startType.updates:None
cedrusButtonBoxComponent.stopType.default:'duration (s)'
cedrusButtonBoxComponent.stopType.label:stop type
cedrusButtonBoxComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
cedrusButtonBoxComponent.stopType.staticUpdater:None
cedrusButtonBoxComponent.stopType.val:duration (s)
cedrusButtonBoxComponent.stopType.readOnly:False
cedrusButtonBoxComponent.stopType.valType:str
cedrusButtonBoxComponent.stopType.allowedUpdates:None
cedrusButtonBoxComponent.stopType.allowedTypes:[]
cedrusButtonBoxComponent.stopType.categ:Basic
cedrusButtonBoxComponent.stopType.hint:How do you want to define your end point?
cedrusButtonBoxComponent.stopType.updates:None
cedrusButtonBoxComponent.startVal.default:0.0
cedrusButtonBoxComponent.startVal.label:Start
cedrusButtonBoxComponent.startVal.allowedVals:[]
cedrusButtonBoxComponent.startVal.staticUpdater:None
cedrusButtonBoxComponent.startVal.val:0.0
cedrusButtonBoxComponent.startVal.readOnly:False
cedrusButtonBoxComponent.startVal.valType:code
cedrusButtonBoxComponent.startVal.allowedUpdates:None
cedrusButtonBoxComponent.startVal.allowedTypes:[]
cedrusButtonBoxComponent.startVal.categ:Basic
cedrusButtonBoxComponent.startVal.hint:When does the component start?
cedrusButtonBoxComponent.startVal.updates:None
cedrusButtonBoxComponent.stopVal.default:1.0
cedrusButtonBoxComponent.stopVal.label:Stop
cedrusButtonBoxComponent.stopVal.allowedVals:[]
cedrusButtonBoxComponent.stopVal.staticUpdater:None
cedrusButtonBoxComponent.stopVal.val:1.0
cedrusButtonBoxComponent.stopVal.readOnly:False
cedrusButtonBoxComponent.stopVal.valType:code
cedrusButtonBoxComponent.stopVal.allowedUpdates:[]
cedrusButtonBoxComponent.stopVal.allowedTypes:[]
cedrusButtonBoxComponent.stopVal.categ:Basic
cedrusButtonBoxComponent.stopVal.hint:When does the component end? (blank is endless)
cedrusButtonBoxComponent.stopVal.updates:constant
cedrusButtonBoxComponent.startEstim.default:
cedrusButtonBoxComponent.startEstim.label:Expected start (s)
cedrusButtonBoxComponent.startEstim.allowedVals:[]
cedrusButtonBoxComponent.startEstim.staticUpdater:None
cedrusButtonBoxComponent.startEstim.val:
cedrusButtonBoxComponent.startEstim.readOnly:False
cedrusButtonBoxComponent.startEstim.valType:code
cedrusButtonBoxComponent.startEstim.allowedUpdates:None
cedrusButtonBoxComponent.startEstim.allowedTypes:[]
cedrusButtonBoxComponent.startEstim.categ:Basic
cedrusButtonBoxComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
cedrusButtonBoxComponent.startEstim.updates:None
cedrusButtonBoxComponent.durationEstim.default:
cedrusButtonBoxComponent.durationEstim.label:Expected duration (s)
cedrusButtonBoxComponent.durationEstim.allowedVals:[]
cedrusButtonBoxComponent.durationEstim.staticUpdater:None
cedrusButtonBoxComponent.durationEstim.val:
cedrusButtonBoxComponent.durationEstim.readOnly:False
cedrusButtonBoxComponent.durationEstim.valType:code
cedrusButtonBoxComponent.durationEstim.allowedUpdates:None
cedrusButtonBoxComponent.durationEstim.allowedTypes:[]
cedrusButtonBoxComponent.durationEstim.categ:Basic
cedrusButtonBoxComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
cedrusButtonBoxComponent.durationEstim.updates:None
cedrusButtonBoxComponent.allowedKeys.default:
cedrusButtonBoxComponent.allowedKeys.label:Allowed keys
cedrusButtonBoxComponent.allowedKeys.allowedVals:[]
cedrusButtonBoxComponent.allowedKeys.staticUpdater:None
cedrusButtonBoxComponent.allowedKeys.val:
cedrusButtonBoxComponent.allowedKeys.readOnly:False
cedrusButtonBoxComponent.allowedKeys.valType:code
cedrusButtonBoxComponent.allowedKeys.allowedUpdates:['constant', 'set every repeat']
cedrusButtonBoxComponent.allowedKeys.allowedTypes:[]
cedrusButtonBoxComponent.allowedKeys.categ:Basic
cedrusButtonBoxComponent.allowedKeys.hint:Keys to be read (blank for any) or key numbers separated by commas
cedrusButtonBoxComponent.allowedKeys.updates:constant
cedrusButtonBoxComponent.discard previous.default:True
cedrusButtonBoxComponent.discard previous.label:Discard previous
cedrusButtonBoxComponent.discard previous.allowedVals:[]
cedrusButtonBoxComponent.discard previous.staticUpdater:None
cedrusButtonBoxComponent.discard previous.val:True
cedrusButtonBoxComponent.discard previous.readOnly:False
cedrusButtonBoxComponent.discard previous.valType:bool
cedrusButtonBoxComponent.discard previous.allowedUpdates:None
cedrusButtonBoxComponent.discard previous.allowedTypes:[]
cedrusButtonBoxComponent.discard previous.categ:Basic
cedrusButtonBoxComponent.discard previous.hint:Do you want to discard all responses occuring before the onset of this component?
cedrusButtonBoxComponent.discard previous.updates:constant
cedrusButtonBoxComponent.store.default:'first key'
cedrusButtonBoxComponent.store.label:Store
cedrusButtonBoxComponent.store.allowedVals:['last key', 'first key', 'all keys', 'nothing']
cedrusButtonBoxComponent.store.staticUpdater:None
cedrusButtonBoxComponent.store.val:first key
cedrusButtonBoxComponent.store.readOnly:False
cedrusButtonBoxComponent.store.valType:str
cedrusButtonBoxComponent.store.allowedUpdates:None
cedrusButtonBoxComponent.store.allowedTypes:[]
cedrusButtonBoxComponent.store.categ:Basic
cedrusButtonBoxComponent.store.hint:Choose which (if any) responses to store at the end of a trial
cedrusButtonBoxComponent.store.updates:constant
cedrusButtonBoxComponent.forceEndRoutine.default:True
cedrusButtonBoxComponent.forceEndRoutine.label:Force end of Routine
cedrusButtonBoxComponent.forceEndRoutine.allowedVals:[]
cedrusButtonBoxComponent.forceEndRoutine.staticUpdater:None
cedrusButtonBoxComponent.forceEndRoutine.val:True
cedrusButtonBoxComponent.forceEndRoutine.readOnly:False
cedrusButtonBoxComponent.forceEndRoutine.valType:bool
cedrusButtonBoxComponent.forceEndRoutine.allowedUpdates:None
cedrusButtonBoxComponent.forceEndRoutine.allowedTypes:[]
cedrusButtonBoxComponent.forceEndRoutine.categ:Basic
cedrusButtonBoxComponent.forceEndRoutine.hint:Should a response force the end of the Routine (e.g end the trial)?
cedrusButtonBoxComponent.forceEndRoutine.updates:constant
cedrusButtonBoxComponent.storeCorrect.default:False
cedrusButtonBoxComponent.storeCorrect.label:Store correct
cedrusButtonBoxComponent.storeCorrect.allowedVals:[]
cedrusButtonBoxComponent.storeCorrect.staticUpdater:None
cedrusButtonBoxComponent.storeCorrect.val:False
cedrusButtonBoxComponent.storeCorrect.readOnly:False
cedrusButtonBoxComponent.storeCorrect.valType:bool
cedrusButtonBoxComponent.storeCorrect.allowedUpdates:None
cedrusButtonBoxComponent.storeCorrect.allowedTypes:[]
cedrusButtonBoxComponent.storeCorrect.categ:Basic
cedrusButtonBoxComponent.storeCorrect.hint:Do you want to save the response as correct/incorrect?
cedrusButtonBoxComponent.storeCorrect.updates:constant
cedrusButtonBoxComponent.correctAns.default:
cedrusButtonBoxComponent.correctAns.label:Correct answer
cedrusButtonBoxComponent.correctAns.allowedVals:[]
cedrusButtonBoxComponent.correctAns.staticUpdater:None
cedrusButtonBoxComponent.correctAns.val:
cedrusButtonBoxComponent.correctAns.readOnly:False
cedrusButtonBoxComponent.correctAns.valType:code
cedrusButtonBoxComponent.correctAns.allowedUpdates:None
cedrusButtonBoxComponent.correctAns.allowedTypes:[]
cedrusButtonBoxComponent.correctAns.categ:Basic
cedrusButtonBoxComponent.correctAns.hint:What is the 'correct' response? NB, buttons are labelled 0 to 6 on a 7-button box. Enter 'None' (no quotes) if withholding a response is correct. Might be helpful to add a correctAns column and use $correctAns to compare to the key press.
cedrusButtonBoxComponent.correctAns.updates:constant
cedrusButtonBoxComponent.syncScreenRefresh.default:True
cedrusButtonBoxComponent.syncScreenRefresh.label:sync RT with screen
cedrusButtonBoxComponent.syncScreenRefresh.allowedVals:[]
cedrusButtonBoxComponent.syncScreenRefresh.staticUpdater:None
cedrusButtonBoxComponent.syncScreenRefresh.val:True
cedrusButtonBoxComponent.syncScreenRefresh.readOnly:False
cedrusButtonBoxComponent.syncScreenRefresh.valType:bool
cedrusButtonBoxComponent.syncScreenRefresh.allowedUpdates:None
cedrusButtonBoxComponent.syncScreenRefresh.allowedTypes:[]
cedrusButtonBoxComponent.syncScreenRefresh.categ:Basic
cedrusButtonBoxComponent.syncScreenRefresh.hint:A reaction time to a visual stimulus should be based on when the screen flipped
cedrusButtonBoxComponent.syncScreenRefresh.updates:constant
cedrusButtonBoxComponent.deviceNumber.default:0
cedrusButtonBoxComponent.deviceNumber.label:Device number
cedrusButtonBoxComponent.deviceNumber.allowedVals:[]
cedrusButtonBoxComponent.deviceNumber.staticUpdater:None
cedrusButtonBoxComponent.deviceNumber.val:0
cedrusButtonBoxComponent.deviceNumber.readOnly:False
cedrusButtonBoxComponent.deviceNumber.valType:code
cedrusButtonBoxComponent.deviceNumber.allowedUpdates:[]
cedrusButtonBoxComponent.deviceNumber.allowedTypes:[]
cedrusButtonBoxComponent.deviceNumber.categ:Advanced
cedrusButtonBoxComponent.deviceNumber.hint:Device number, if you have multiple devices which one do you want (0, 1, 2...)
cedrusButtonBoxComponent.deviceNumber.updates:constant
cedrusButtonBoxComponent.useBoxTimer.default:False
cedrusButtonBoxComponent.useBoxTimer.label:Use box timer
cedrusButtonBoxComponent.useBoxTimer.allowedVals:[True, False]
cedrusButtonBoxComponent.useBoxTimer.staticUpdater:None
cedrusButtonBoxComponent.useBoxTimer.val:False
cedrusButtonBoxComponent.useBoxTimer.readOnly:False
cedrusButtonBoxComponent.useBoxTimer.valType:bool
cedrusButtonBoxComponent.useBoxTimer.allowedUpdates:[]
cedrusButtonBoxComponent.useBoxTimer.allowedTypes:[]
cedrusButtonBoxComponent.useBoxTimer.categ:Advanced
cedrusButtonBoxComponent.useBoxTimer.hint:According to Cedrus the response box timer has a drift - use with caution!
cedrusButtonBoxComponent.useBoxTimer.updates:constant
ioLabsButtonBoxComponent.order:['forceEndRoutine', 'active', 'lights', 'store', 'storeCorrect', 'correctAns']
ioLabsButtonBoxComponent.name.default:bbox
ioLabsButtonBoxComponent.name.label:Name
ioLabsButtonBoxComponent.name.allowedVals:[]
ioLabsButtonBoxComponent.name.staticUpdater:None
ioLabsButtonBoxComponent.name.val:bbox
ioLabsButtonBoxComponent.name.readOnly:False
ioLabsButtonBoxComponent.name.valType:code
ioLabsButtonBoxComponent.name.allowedUpdates:None
ioLabsButtonBoxComponent.name.allowedTypes:[]
ioLabsButtonBoxComponent.name.categ:Basic
ioLabsButtonBoxComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
ioLabsButtonBoxComponent.startType.default:'time (s)'
ioLabsButtonBoxComponent.startType.label:start type
ioLabsButtonBoxComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ioLabsButtonBoxComponent.startType.staticUpdater:None
ioLabsButtonBoxComponent.startType.val:time (s)
ioLabsButtonBoxComponent.startType.readOnly:False
ioLabsButtonBoxComponent.startType.valType:str
ioLabsButtonBoxComponent.startType.allowedUpdates:None
ioLabsButtonBoxComponent.startType.allowedTypes:[]
ioLabsButtonBoxComponent.startType.categ:Basic
ioLabsButtonBoxComponent.startType.hint:How do you want to define your start point?
ioLabsButtonBoxComponent.startType.updates:None
ioLabsButtonBoxComponent.stopType.default:'duration (s)'
ioLabsButtonBoxComponent.stopType.label:stop type
ioLabsButtonBoxComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ioLabsButtonBoxComponent.stopType.staticUpdater:None
ioLabsButtonBoxComponent.stopType.val:duration (s)
ioLabsButtonBoxComponent.stopType.readOnly:False
ioLabsButtonBoxComponent.stopType.valType:str
ioLabsButtonBoxComponent.stopType.allowedUpdates:None
ioLabsButtonBoxComponent.stopType.allowedTypes:[]
ioLabsButtonBoxComponent.stopType.categ:Basic
ioLabsButtonBoxComponent.stopType.hint:How do you want to define your end point?
ioLabsButtonBoxComponent.stopType.updates:None
ioLabsButtonBoxComponent.startVal.default:0.0
ioLabsButtonBoxComponent.startVal.label:Start
ioLabsButtonBoxComponent.startVal.allowedVals:[]
ioLabsButtonBoxComponent.startVal.staticUpdater:None
ioLabsButtonBoxComponent.startVal.val:0.0
ioLabsButtonBoxComponent.startVal.readOnly:False
ioLabsButtonBoxComponent.startVal.valType:code
ioLabsButtonBoxComponent.startVal.allowedUpdates:None
ioLabsButtonBoxComponent.startVal.allowedTypes:[]
ioLabsButtonBoxComponent.startVal.categ:Basic
ioLabsButtonBoxComponent.startVal.hint:When does the component start?
ioLabsButtonBoxComponent.startVal.updates:None
ioLabsButtonBoxComponent.stopVal.default:1.0
ioLabsButtonBoxComponent.stopVal.label:Stop
ioLabsButtonBoxComponent.stopVal.allowedVals:[]
ioLabsButtonBoxComponent.stopVal.staticUpdater:None
ioLabsButtonBoxComponent.stopVal.val:1.0
ioLabsButtonBoxComponent.stopVal.readOnly:False
ioLabsButtonBoxComponent.stopVal.valType:code
ioLabsButtonBoxComponent.stopVal.allowedUpdates:[]
ioLabsButtonBoxComponent.stopVal.allowedTypes:[]
ioLabsButtonBoxComponent.stopVal.categ:Basic
ioLabsButtonBoxComponent.stopVal.hint:When does the component end? (blank is endless)
ioLabsButtonBoxComponent.stopVal.updates:constant
ioLabsButtonBoxComponent.startEstim.default:
ioLabsButtonBoxComponent.startEstim.label:Expected start (s)
ioLabsButtonBoxComponent.startEstim.allowedVals:[]
ioLabsButtonBoxComponent.startEstim.staticUpdater:None
ioLabsButtonBoxComponent.startEstim.val:
ioLabsButtonBoxComponent.startEstim.readOnly:False
ioLabsButtonBoxComponent.startEstim.valType:code
ioLabsButtonBoxComponent.startEstim.allowedUpdates:None
ioLabsButtonBoxComponent.startEstim.allowedTypes:[]
ioLabsButtonBoxComponent.startEstim.categ:Basic
ioLabsButtonBoxComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ioLabsButtonBoxComponent.startEstim.updates:None
ioLabsButtonBoxComponent.durationEstim.default:
ioLabsButtonBoxComponent.durationEstim.label:Expected duration (s)
ioLabsButtonBoxComponent.durationEstim.allowedVals:[]
ioLabsButtonBoxComponent.durationEstim.staticUpdater:None
ioLabsButtonBoxComponent.durationEstim.val:
ioLabsButtonBoxComponent.durationEstim.readOnly:False
ioLabsButtonBoxComponent.durationEstim.valType:code
ioLabsButtonBoxComponent.durationEstim.allowedUpdates:None
ioLabsButtonBoxComponent.durationEstim.allowedTypes:[]
ioLabsButtonBoxComponent.durationEstim.categ:Basic
ioLabsButtonBoxComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ioLabsButtonBoxComponent.durationEstim.updates:None
ioLabsButtonBoxComponent.discard previous.default:True
ioLabsButtonBoxComponent.discard previous.label:Discard previous
ioLabsButtonBoxComponent.discard previous.allowedVals:[]
ioLabsButtonBoxComponent.discard previous.staticUpdater:None
ioLabsButtonBoxComponent.discard previous.val:True
ioLabsButtonBoxComponent.discard previous.readOnly:False
ioLabsButtonBoxComponent.discard previous.valType:bool
ioLabsButtonBoxComponent.discard previous.allowedUpdates:None
ioLabsButtonBoxComponent.discard previous.allowedTypes:[]
ioLabsButtonBoxComponent.discard previous.categ:Basic
ioLabsButtonBoxComponent.discard previous.hint:Do you want to discard all responses occuring before the onset of this component?
ioLabsButtonBoxComponent.discard previous.updates:constant
ioLabsButtonBoxComponent.store.default:'first button'
ioLabsButtonBoxComponent.store.label:Store
ioLabsButtonBoxComponent.store.allowedVals:['last button', 'first button', 'all buttons', 'nothing']
ioLabsButtonBoxComponent.store.staticUpdater:None
ioLabsButtonBoxComponent.store.val:first button
ioLabsButtonBoxComponent.store.readOnly:False
ioLabsButtonBoxComponent.store.valType:str
ioLabsButtonBoxComponent.store.allowedUpdates:None
ioLabsButtonBoxComponent.store.allowedTypes:[]
ioLabsButtonBoxComponent.store.categ:Basic
ioLabsButtonBoxComponent.store.hint:Choose which (if any) responses to store at end of a trial
ioLabsButtonBoxComponent.store.updates:constant
ioLabsButtonBoxComponent.forceEndRoutine.default:True
ioLabsButtonBoxComponent.forceEndRoutine.label:Force end of Routine
ioLabsButtonBoxComponent.forceEndRoutine.allowedVals:[]
ioLabsButtonBoxComponent.forceEndRoutine.staticUpdater:None
ioLabsButtonBoxComponent.forceEndRoutine.val:True
ioLabsButtonBoxComponent.forceEndRoutine.readOnly:False
ioLabsButtonBoxComponent.forceEndRoutine.valType:bool
ioLabsButtonBoxComponent.forceEndRoutine.allowedUpdates:None
ioLabsButtonBoxComponent.forceEndRoutine.allowedTypes:[]
ioLabsButtonBoxComponent.forceEndRoutine.categ:Basic
ioLabsButtonBoxComponent.forceEndRoutine.hint:Should a response force the end of the Routine (e.g end the trial)?
ioLabsButtonBoxComponent.forceEndRoutine.updates:constant
ioLabsButtonBoxComponent.storeCorrect.default:False
ioLabsButtonBoxComponent.storeCorrect.label:Store correct
ioLabsButtonBoxComponent.storeCorrect.allowedVals:[]
ioLabsButtonBoxComponent.storeCorrect.staticUpdater:None
ioLabsButtonBoxComponent.storeCorrect.val:False
ioLabsButtonBoxComponent.storeCorrect.readOnly:False
ioLabsButtonBoxComponent.storeCorrect.valType:bool
ioLabsButtonBoxComponent.storeCorrect.allowedUpdates:None
ioLabsButtonBoxComponent.storeCorrect.allowedTypes:[]
ioLabsButtonBoxComponent.storeCorrect.categ:Basic
ioLabsButtonBoxComponent.storeCorrect.hint:Do you want to save the response as correct/incorrect?
ioLabsButtonBoxComponent.storeCorrect.updates:constant
ioLabsButtonBoxComponent.correctAns.default:'0'
ioLabsButtonBoxComponent.correctAns.label:Correct answer
ioLabsButtonBoxComponent.correctAns.allowedVals:[]
ioLabsButtonBoxComponent.correctAns.staticUpdater:None
ioLabsButtonBoxComponent.correctAns.val:0
ioLabsButtonBoxComponent.correctAns.readOnly:False
ioLabsButtonBoxComponent.correctAns.valType:str
ioLabsButtonBoxComponent.correctAns.allowedUpdates:None
ioLabsButtonBoxComponent.correctAns.allowedTypes:[]
ioLabsButtonBoxComponent.correctAns.categ:Basic
ioLabsButtonBoxComponent.correctAns.hint:What is the 'correct' response? NB, buttons are labelled 0 to 7 on a 8-button box. Enter 'None' (no quotes) if withholding a response is correct. Might be helpful to add a correctAns column and use $correctAns to compare to the key press.
ioLabsButtonBoxComponent.correctAns.updates:constant
ioLabsButtonBoxComponent.syncScreenRefresh.default:True
ioLabsButtonBoxComponent.syncScreenRefresh.label:sync RT with screen
ioLabsButtonBoxComponent.syncScreenRefresh.allowedVals:[]
ioLabsButtonBoxComponent.syncScreenRefresh.staticUpdater:None
ioLabsButtonBoxComponent.syncScreenRefresh.val:True
ioLabsButtonBoxComponent.syncScreenRefresh.readOnly:False
ioLabsButtonBoxComponent.syncScreenRefresh.valType:bool
ioLabsButtonBoxComponent.syncScreenRefresh.allowedUpdates:None
ioLabsButtonBoxComponent.syncScreenRefresh.allowedTypes:[]
ioLabsButtonBoxComponent.syncScreenRefresh.categ:Basic
ioLabsButtonBoxComponent.syncScreenRefresh.hint:A reaction time to a visual stimulus should be based on when the screen flipped
ioLabsButtonBoxComponent.syncScreenRefresh.updates:constant
ioLabsButtonBoxComponent.active.default:(0,1,2,3,4,5,6,7)
ioLabsButtonBoxComponent.active.label:Active buttons
ioLabsButtonBoxComponent.active.allowedVals:[]
ioLabsButtonBoxComponent.active.staticUpdater:None
ioLabsButtonBoxComponent.active.val:(0,1,2,3,4,5,6,7)
ioLabsButtonBoxComponent.active.readOnly:False
ioLabsButtonBoxComponent.active.valType:code
ioLabsButtonBoxComponent.active.allowedUpdates:['constant', 'set every repeat']
ioLabsButtonBoxComponent.active.allowedTypes:[]
ioLabsButtonBoxComponent.active.categ:Basic
ioLabsButtonBoxComponent.active.hint:Active buttons, such as '1,6', '(1,2,5,6)' or '0' (without quotes)
ioLabsButtonBoxComponent.active.updates:constant
ioLabsButtonBoxComponent.lights.default:True
ioLabsButtonBoxComponent.lights.label:Lights
ioLabsButtonBoxComponent.lights.allowedVals:[]
ioLabsButtonBoxComponent.lights.staticUpdater:None
ioLabsButtonBoxComponent.lights.val:True
ioLabsButtonBoxComponent.lights.readOnly:False
ioLabsButtonBoxComponent.lights.valType:bool
ioLabsButtonBoxComponent.lights.allowedUpdates:[]
ioLabsButtonBoxComponent.lights.allowedTypes:[]
ioLabsButtonBoxComponent.lights.categ:Basic
ioLabsButtonBoxComponent.lights.hint:Turn ON the lights for the active buttons?
ioLabsButtonBoxComponent.lights.updates:constant
ioLabsButtonBoxComponent.lights off.default:False
ioLabsButtonBoxComponent.lights off.label:Lights off
ioLabsButtonBoxComponent.lights off.allowedVals:[]
ioLabsButtonBoxComponent.lights off.staticUpdater:None
ioLabsButtonBoxComponent.lights off.val:False
ioLabsButtonBoxComponent.lights off.readOnly:False
ioLabsButtonBoxComponent.lights off.valType:bool
ioLabsButtonBoxComponent.lights off.allowedUpdates:[]
ioLabsButtonBoxComponent.lights off.allowedTypes:[]
ioLabsButtonBoxComponent.lights off.categ:Basic
ioLabsButtonBoxComponent.lights off.hint:Turn OFF all lights at the end of each routine?
ioLabsButtonBoxComponent.lights off.updates:constant
