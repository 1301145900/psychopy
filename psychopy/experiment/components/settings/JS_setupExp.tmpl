function setupExperiment() {{

  // An ExperimentHandler isn't essential but helps with data saving
  psychoJS.experiment = new ExperimentHandler({{
      name: {params[expName]},
      version: '',
      extraInfo: _.expInfo,
      repository: ExperimentHandler.Repository.{saveType}
      /*dataFileName=filename*/}});

  // setup resource manager:
  psychoJS.resourceManager = new ResourceManager({{
    repository: ResourceManager.Repository.{saveType},
    type: ResourceManager.Status.PUBLIC
  }});

  /*
  // logging:
  _.logger.console.setLevel(psychoJS.logging.WARNING);
  _.logger.server.set({{'level':psychoJS.logging.WARNING, 'saveTo':'EXPERIMENT_SERVER', 'experimentInfo': _.expInfo}});*/

  return Scheduler.Event.NEXT;
}}

function updateInfo() {{
  _.expInfo['date'] = MonotonicClock.getDateStr();  // add a simple timestamp
  _.expInfo['expName'] = _.expName;

  // store frame rate of monitor if we can measure it successfully
  _.expInfo['frameRate'] = _.window.getActualFrameRate();
  if (typeof _.expInfo['frameRate'] !== 'undefined')
    _.frameDur = 1.0/Math.round(_.expInfo['frameRate']);
  else
    _.frameDur = 1.0/60.0; // couldn't get a reliable measure so guess

  return Scheduler.Event.NEXT;
}}
